"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([[29504],{73108:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>a,frontMatter:()=>c,metadata:()=>o,toc:()=>u});var s=i(17624),n=i(4552);const c={},l="Test Execution Service",o={id:"install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/index",title:"Test Execution Service",description:"Test Execution Service is a lightweight Python service that is responsible for executing tests that were scheduled and invoked by the new New Job Scheduling. The tests must reside in a Git repository and be discovered by a Test Discovery Service.",source:"@site/docs/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/index.md",sourceDirName:"install-configure/cloudshell-suite/new-jss-install-config/test-execution-service",slug:"/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/",permalink:"/next/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/",draft:!1,unlisted:!1,editUrl:"https://github.com/QualiSystems/cloudshell-help/tree/main/docs/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configure the Test Discovery Service",permalink:"/next/install-configure/cloudshell-suite/new-jss-install-config/test-discovery-service/config-test-discovery-service"},next:{title:"Configure the Test Execution Service",permalink:"/next/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/config-test-execution-service"}},r={},u=[{value:"Extensibility",id:"extensibility",level:2},{value:"Related Topics",id:"related-topics",level:2}];function d(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"test-execution-service",children:"Test Execution Service"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Test Execution Service"})," is a lightweight Python service that is responsible for executing tests that were scheduled and invoked by the new New Job Scheduling. The tests must reside in a Git repository and be discovered by a ",(0,s.jsx)(t.a,{href:"/next/install-configure/cloudshell-suite/new-jss-install-config/test-discovery-service/",children:"Test Discovery Service"}),"."]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Test Execution Service does not support running shell and script commands nor TestShell Studio tests. Such capabilities are handled by CloudShell Execution Servers."})}),"\n",(0,s.jsx)(t.h2,{id:"extensibility",children:"Extensibility"}),"\n",(0,s.jsx)(t.p,{children:"Test Execution Service is a generic implementation that can be extended on demand to support new and advanced types of tests, inputs and testing frameworks. For more information, please contact Quali Customer Success."}),"\n",(0,s.jsx)(t.h2,{id:"related-topics",children:"Related Topics"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/next/install-configure/cloudshell-suite/new-jss-install-config/new-jss-architecture",children:"New Job Scheduling Architecture"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/next/install-configure/cloudshell-suite/new-jss-install-config/test-discovery-service/config-test-discovery-service",children:"Configure the Test Discovery Service"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/next/api-guide/new-jss-rest-api/get-test-execution-services",children:"Get Test Execution Services"})}),"\n"]})]})}function a(e={}){const{wrapper:t}={...(0,n.M)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4552:(e,t,i)=>{i.d(t,{I:()=>o,M:()=>l});var s=i(11504);const n={},c=s.createContext(n);function l(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);