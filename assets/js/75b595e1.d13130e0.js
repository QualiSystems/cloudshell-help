"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([["86489"],{89954:function(t,e,n){n.r(e),n.d(e,{frontMatter:()=>r,toc:()=>s,default:()=>u,metadata:()=>i,assets:()=>l,contentTitle:()=>c});var i=JSON.parse('{"id":"admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/index","title":"Active Directory Integration","description":"CloudShell provides built-in integration with Microsoft Active Directory services for user authentication and authorization. To learn how to use Active Directory with CloudShell, see the following articles:","source":"@site/docs/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/index.md","sourceDirName":"admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration","slug":"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/","permalink":"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiSystems/cloudshell-help/tree/main/docs/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Access Control and Authentication","permalink":"/admin/cloudshell-identity-management/access-control-and-authentication/"},"next":{"title":"Configuring CloudShell to Automatically Import Active Directory Users on First Login","permalink":"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/configuring-cloudshell-to-automatically-import-active-directory-users-on-first-login"}}'),o=n(74848),a=n(84429);let r={},c="Active Directory Integration",l={},s=[];function d(t){let e={a:"a",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"active-directory-integration",children:"Active Directory Integration"})}),"\n",(0,o.jsx)(e.p,{children:"CloudShell provides built-in integration with Microsoft Active Directory services for user authentication and authorization. To learn how to use Active Directory with CloudShell, see the following articles:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/importing-users-into-cloudshell-from-an-active-directory",children:"Importing users into CloudShell from an active directory"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/configuring-cloudshell-to-automatically-import-active-directory-users-on-first-login",children:"Configuring CloudShell to Automatically Import Active Directory Users on First Login"})}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"If you cannot integrate with Active Directory, we also support integration with an LDAP, SSO or JWT solution:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/ldap-integration",children:"LDAP Integration"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/saml-authentication-configuration-sso-slo/configure-sso/",children:"Configuring Single Sign-On (SSO)"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/json-web-token-jwt-configuration",children:"JSON Web Token (JWT) Configuration"})}),"\n"]})]})}function u(t={}){let{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},84429:function(t,e,n){n.d(e,{R:()=>r,x:()=>c});var i=n(96540);let o={},a=i.createContext(o);function r(t){let e=i.useContext(a);return i.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(a.Provider,{value:e},t.children)}}}]);