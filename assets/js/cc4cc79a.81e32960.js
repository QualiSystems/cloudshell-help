"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([["97923"],{66838:function(e,t,l){l.r(t),l.d(t,{frontMatter:()=>n,toc:()=>h,default:()=>c,metadata:()=>o,assets:()=>i,contentTitle:()=>r});var o=JSON.parse('{"id":"devguide/develop-custom-cloud-provider-shells/the-cp-shell-mode","title":"The Cloud Provider Shell Model","description":"In this article, we\u2019ll learn about the Cloud Provider shell\u2019s model.","source":"@site/versioned_docs/version-2024.1/devguide/develop-custom-cloud-provider-shells/the-cp-shell-mode.md","sourceDirName":"devguide/develop-custom-cloud-provider-shells","slug":"/devguide/develop-custom-cloud-provider-shells/the-cp-shell-mode","permalink":"/2024.1/devguide/develop-custom-cloud-provider-shells/the-cp-shell-mode","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiSystems/cloudshell-help/tree/main/versioned_docs/version-2024.1/devguide/develop-custom-cloud-provider-shells/the-cp-shell-mode.md","tags":[],"version":"2024.1","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Creating the Cloud Provider Shell","permalink":"/2024.1/devguide/develop-custom-cloud-provider-shells/create-cp-shell"},"next":{"title":"Extending the Shell\'s Data Model","permalink":"/2024.1/devguide/develop-custom-cloud-provider-shells/extend-the-shell-data-model"}}'),d=l(74848),s=l(84429);let n={sidebar_position:3},r="The Cloud Provider Shell Model",i={},h=[];function a(e){let t={a:"a",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"the-cloud-provider-shell-model",children:"The Cloud Provider Shell Model"})}),"\n",(0,d.jsx)(t.p,{children:"In this article, we\u2019ll learn about the Cloud Provider shell\u2019s model."}),"\n",(0,d.jsxs)(t.p,{children:["The\xa0",(0,d.jsx)(t.a,{href:"https://github.com/QualiSystems/cloudshell-standards/blob/master/Documentation/cloud_provider_standard.md",children:"Cloud Provider Standard"}),"\xa0defines two elements: the Cloud Provider shell and the Deployment Type service. The Cloud Provider shell is responsible for accessing the cloud provider and executing the App\u2019s automation commands (like deploy VM, power on, power off, refresh IP). And the deployment type service shell sets the deployment path on the App template, including the VM\u2019s definition. The service contains the attributes of the deployment type, but has no driver since the automation commands are defined in the Cloud Provider shell\u2019s driver."]}),"\n",(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsxs)(t.li,{children:["\n",(0,d.jsx)(t.p,{children:"The cloud provider model extension includes the attributes that control the behavior of the cloud provider as a whole. For example the region name and default values for elements created in the cloud."}),"\n"]}),"\n",(0,d.jsxs)(t.li,{children:["\n",(0,d.jsxs)(t.p,{children:["The deployment type extension needs to include the attributes that are needed for every deployment method in this cloud. You can set these attributes to be visible in the\xa0",(0,d.jsx)(t.strong,{children:"Deployment Paths"}),"\xa0tab of the App template dialog box (we\u2019ll learn how to do this later on this chapter)."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(t.p,{children:["The Cloud Provider shell is created using the\xa0gen2/cloud-provider\xa0shellfoundry template. The project folder includes a shell-definition.yaml file for the cloud provider model definition, and a skeleton of the cloud provider model. Inside the\xa0",(0,d.jsx)(t.strong,{children:"Deployments"}),"\xa0folder, there is a deployment-path.yaml file for the deployment type model. If more than one deployment type is needed, additional yaml files may be added to this folder."]}),"\n",(0,d.jsx)(t.p,{children:"The association between the cloud provider and its relevant deployment types is implicit."})]})}function c(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},84429:function(e,t,l){l.d(t,{R:()=>n,x:()=>r});var o=l(96540);let d={},s=o.createContext(d);function n(e){let t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:n(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);