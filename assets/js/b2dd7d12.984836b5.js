"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([[92560],{69628:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var t=i(17624),r=i(4552);const s={sidebar_position:6},o="Cleaning Up the Virtual Environments Folder",l={id:"admin/cloudshell-execution-server-configurations/setting-up-python-virtual-environments/cleaning-up-the-virtual-environments-folder",title:"Cleaning Up the Virtual Environments Folder",description:"CloudShell creates a new virtual environment in the installation path on the Execution Server whenever:",source:"@site/versioned_docs/version-2023.3/admin/cloudshell-execution-server-configurations/setting-up-python-virtual-environments/cleaning-up-the-virtual-environments-folder.md",sourceDirName:"admin/cloudshell-execution-server-configurations/setting-up-python-virtual-environments",slug:"/admin/cloudshell-execution-server-configurations/setting-up-python-virtual-environments/cleaning-up-the-virtual-environments-folder",permalink:"/2023.3/admin/cloudshell-execution-server-configurations/setting-up-python-virtual-environments/cleaning-up-the-virtual-environments-folder",draft:!1,unlisted:!1,editUrl:"https://github.com/QualiSystems/cloudshell-help/tree/main/versioned_docs/version-2023.3/admin/cloudshell-execution-server-configurations/setting-up-python-virtual-environments/cleaning-up-the-virtual-environments-folder.md",tags:[],version:"2023.3",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Updating Python Dependencies for Shells, Drivers and Scripts",permalink:"/2023.3/admin/cloudshell-execution-server-configurations/setting-up-python-virtual-environments/updating-python-dependencies-for-shells-drivers-and-scripts"},next:{title:"Supported Cloud Providers in CloudShell",permalink:"/2023.3/admin/supported-cloud-providers-in-cloudshell/"}},d={},a=[];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",strong:"strong",ul:"ul",...(0,r.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"cleaning-up-the-virtual-environments-folder",children:"Cleaning Up the Virtual Environments Folder"}),"\n",(0,t.jsx)(n.p,{children:"CloudShell creates a new virtual environment in the installation path on the Execution Server whenever:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A new or updated shell or script is being run in CloudShell"}),"\n",(0,t.jsxs)(n.li,{children:["(Applies to resource and orchestration scripts only) The same script is being run with a different Python version - defined in the ",(0,t.jsx)(n.strong,{children:"Manage - Scripts"})," page"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This takes up disk space as virtual environments of the older driver and script versions are retained. You can remove these older virtual environments to free up disk space."}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{}),(0,t.jsx)(n.p,{children:"The installation paths are:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["On Windows: ",(0,t.jsx)(n.code,{children:"%PROGRAMDATA%\\QualiSystems\\venv"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["On Linux: ",(0,t.jsx)(n.code,{children:"/usr/share/QualiSystems/venv/"}),"."]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"To remove unneeded virtual environments:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Restart the Execution Server."}),"\n",(0,t.jsx)(n.p,{children:"CloudShell will automatically clean up the unneeded virtual environments that were associated with previous driver and script versions."}),"\n"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},4552:(e,n,i)=>{i.d(n,{I:()=>l,M:()=>o});var t=i(11504);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);