"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([[60512],{13100:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var i=n(17624),o=n(4552);const a={},r="Active Directory Integration",c={id:"admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/index",title:"Active Directory Integration",description:"CloudShell provides built-in integration with Microsoft Active Directory services for user authentication and authorization. To learn how to use Active Directory with CloudShell, see the following articles:",source:"@site/versioned_docs/version-2023.3/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/index.md",sourceDirName:"admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration",slug:"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/",permalink:"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/",draft:!1,unlisted:!1,editUrl:"https://github.com/QualiSystems/cloudshell-help/tree/main/versioned_docs/version-2023.3/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/index.md",tags:[],version:"2023.3",lastUpdatedAt:1715878866e3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Access Control and Authentication",permalink:"/admin/cloudshell-identity-management/access-control-and-authentication/"},next:{title:"Configuring CloudShell to Automatically Import Active Directory Users on First Login",permalink:"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/configuring-cloudshell-to-automatically-import-active-directory-users-on-first-login"}},l={},s=[];function d(t){const e={a:"a",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.M)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"active-directory-integration",children:"Active Directory Integration"}),"\n",(0,i.jsx)(e.p,{children:"CloudShell provides built-in integration with Microsoft Active Directory services for user authentication and authorization. To learn how to use Active Directory with CloudShell, see the following articles:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/importing-users-into-cloudshell-from-an-active-directory",children:"Importing users into CloudShell from an active directory"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/active-directory-integration/configuring-cloudshell-to-automatically-import-active-directory-users-on-first-login",children:"Configuring CloudShell to Automatically Import Active Directory Users on First Login"})}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"If you cannot integrate with Active Directory, we also support integration with an LDAP, SSO or JWT solution:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/ldap-integration",children:"LDAP Integration"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/saml-authentication-configuration-sso-slo/configure-sso/",children:"Configuring Single Sign-On (SSO)"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"/admin/cloudshell-identity-management/access-control-and-authentication/json-web-token-jwt-configuration",children:"JSON Web Token (JWT) Configuration"})}),"\n"]})]})}function u(t={}){const{wrapper:e}={...(0,o.M)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},4552:(t,e,n)=>{n.d(e,{I:()=>c,M:()=>r});var i=n(11504);const o={},a=i.createContext(o);function r(t){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(a.Provider,{value:e},t.children)}}}]);