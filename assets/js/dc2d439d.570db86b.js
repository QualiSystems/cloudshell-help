"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([["14107"],{70374:function(e,t,l){l.r(t),l.d(t,{frontMatter:()=>o,toc:()=>r,default:()=>u,metadata:()=>i,assets:()=>c,contentTitle:()=>a});var i=JSON.parse('{"id":"install-configure/qualix/post-installation-config/restrict-qualix-access","title":"Restrict QualiX Access to Specific CloudShell Portals","description":"Perform these steps to specify the CloudShell Portal machines that can access QualiX. This applies to CloudShell deployments where some of the portal machines reside in a different network and for security reasons, we don\u2019t want them to access QualiX.","source":"@site/versioned_docs/version-2024.1/install-configure/qualix/post-installation-config/restrict-qualix-access.md","sourceDirName":"install-configure/qualix/post-installation-config","slug":"/install-configure/qualix/post-installation-config/restrict-qualix-access","permalink":"/2024.1/install-configure/qualix/post-installation-config/restrict-qualix-access","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiSystems/cloudshell-help/tree/main/versioned_docs/version-2024.1/install-configure/qualix/post-installation-config/restrict-qualix-access.md","tags":[],"version":"2024.1","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Set a Static IP for the QualiX VM","permalink":"/2024.1/install-configure/qualix/post-installation-config/set-static-ip-for-qualix"},"next":{"title":"Modify Number of CPUs and Allocated Memory","permalink":"/2024.1/install-configure/qualix/post-installation-config/modify-cpu-and-ram"}}'),s=l(74848),n=l(84429);let o={sidebar_position:7},a="Restrict QualiX Access to Specific CloudShell Portals",c={},r=[];function d(e){let t={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"restrict-qualix-access-to-specific-cloudshell-portals",children:"Restrict QualiX Access to Specific CloudShell Portals"})}),"\n",(0,s.jsx)(t.p,{children:"Perform these steps to specify the CloudShell Portal machines that can access QualiX. This applies to CloudShell deployments where some of the portal machines reside in a different network and for security reasons, we don\u2019t want them to access QualiX."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"To specify the CloudShell Portal hosts that can use QualiX:"})}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"SSH to Qualix server."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Run the following command:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"edit /opt/qualix/.guacamole/guacamole.properties"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Remove the following line:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"qualix-allow-auth-from: 0.0.0.0\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"To specify the IPs of the CloudShell Portal machines that can access QualiX, add the following line to the file:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"qualix-allow-auth-from: <CloudShell-Portal-ip1>,<CloudShell-Portal-ip2>\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Save and close file."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Restart the ",(0,s.jsx)(t.strong,{children:"Qualix-tomcat"})," service:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"systemctl restart qualix-tomcat.service\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},84429:function(e,t,l){l.d(t,{R:()=>o,x:()=>a});var i=l(96540);let s={},n=i.createContext(s);function o(e){let t=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);