"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([[44181],{26941:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api-guide/new-jss-rest-api/start-adhoc-suite-execution","title":"Start adhoc suite execution","description":"Description","source":"@site/versioned_docs/version-2024.1/api-guide/new-jss-rest-api/start-adhoc-suite-execution.md","sourceDirName":"api-guide/new-jss-rest-api","slug":"/api-guide/new-jss-rest-api/start-adhoc-suite-execution","permalink":"/api-guide/new-jss-rest-api/start-adhoc-suite-execution","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiSystems/cloudshell-help/tree/main/versioned_docs/version-2024.1/api-guide/new-jss-rest-api/start-adhoc-suite-execution.md","tags":[],"version":"2024.1","sidebarPosition":14,"frontMatter":{"sidebar_position":14},"sidebar":"tutorialSidebar","previous":{"title":"Start suite execution","permalink":"/api-guide/new-jss-rest-api/start-suite-execution"},"next":{"title":"Delete Test Discovery Service","permalink":"/api-guide/new-jss-rest-api/delete-test-discovery-service"}}');var i=s(74848),r=s(28453);const l={sidebar_position:14},d="Start adhoc suite execution",c={},o=[{value:"Description",id:"description",level:3},{value:"URL",id:"url",level:3},{value:"HTTP method",id:"http-method",level:3},{value:"Request",id:"request",level:3},{value:"Response",id:"response",level:3}];function a(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"start-adhoc-suite-execution",children:"Start adhoc suite execution"})}),"\n",(0,i.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"Runs an adhoc suite execution. Adhoc suites are created on-the-fly for the execution and cannot be edited, deleted nor rerun."}),"\n",(0,i.jsx)(n.h3,{id:"url",children:"URL"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"http://{Job Scheduling API IP}:{port#}/{space_name}/SuiteExecution/start"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description/Comments"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"space_name"}),(0,i.jsx)(n.td,{children:"CloudShell domain in which the suite was executed. (string)"})]})})]}),"\n",(0,i.jsx)(n.h3,{id:"http-method",children:"HTTP method"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"POST"})}),"\n",(0,i.jsx)(n.h3,{id:"request",children:"Request"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Headers"}),(0,i.jsx)(n.p,{children:"Example header format:"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Authorization: Basic <authorization token returned from the login method>"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Content-Type: application/json"})})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Request body"}),(0,i.jsx)(n.p,{children:"Suite details. The parameters of the adhoc suite execution method include:"}),(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Parameter"}),(0,i.jsx)("th",{children:"Description/Comments"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"name"}),(0,i.jsx)("td",{children:"Name of the suite execution. (string)"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"description"}),(0,i.jsx)("td",{children:"Optional description for the suite execution. (string)"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"testTypeName"}),(0,i.jsxs)("td",{children:["Type of tests to run. (string)",(0,i.jsx)("br",{}),'Currently, the value to use is "Robot".']})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"jobs"}),(0,i.jsxs)("td",{children:[(0,i.jsxs)(n.p,{children:["Job details:",(0,i.jsx)("br",{})]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Job name. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"description"}),": Job description, if defined. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"durationBufferInMinutes"}),": Job's execution buffer, in minutes. (Numeric)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"blueprint"}),": Details of the job's blueprint.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Blueprint name. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"inputs"}),": Published global inputs defined in the job's blueprint.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": global input's name. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"value"}),": global input's value. (string)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"abstractRequirements"}),": Published requirements in the blueprint's abstract resources.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"type"}),": Type of abstract requirement. (string)\nThere are two options:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['"',(0,i.jsx)(n.strong,{children:"Quantity"}),'" when specifying the number of abstract resources to select.']}),"\n",(0,i.jsxs)(n.li,{children:['"',(0,i.jsx)(n.strong,{children:"Attribute"}),'" for any other attribute requirement.']}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"resource"}),": Name of the abstract resource. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),': Name of the abstract requirement. Specify "Quantity" to indicate the number of abstract resources to select.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"value"}),": Requirement's value. (string, numeric for Quantity)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"additionalInputs"}),": Published additional inputs in the blueprint's abstract resources.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"resource"}),": Name of the abstract resource. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Name of the additional info. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"value"}),": Additional info's value. (string)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"serviceInputs"}),": Published inputs belonging to services in the blueprint.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"resource"}),": Name of the service. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Name of the service input. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"value"}),": Service input's value. (string)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"tests"}),": Details of the job's tests.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Name of the test. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"path"}),": Path to the test's containing folder. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"durationInMinutes"}),": Test's duration in minutes. (Numeric)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"inputs"}),": Test's inputs.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Input name. (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": Input value. (string)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"repositoryName"}),": Name of online repository containing the test. (string)"]}),"\n"]}),"\n"]}),"\n"]})]})]})]})]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Request example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'{\n\t"name": "my ad-hoc robot execution",\n\t"description": "string",\n\t"testTypeName": "Robot",\n\t"jobs": [\n\t{\n        "name": "job 1",\n        "description": "string",\n        "durationBufferInMinutes": 3,\n        "blueprint": {\n            "name": "my blueprint",\n            "inputs": [\n            {\n            "name": "Sandbox number",\n            "value": "4"\n            }],\n            "abstractRequirements": [\n            {\n            "type": "Quantity",\n            "resource": "DUT resource",\n            "name": "Quantity",\n            "value": "1"\n            }],\n            "additionalInputs": [{\n            "resource": "DUT resource",\n            "name": "Firmware version",\n            "value": "1.00.2"\n            }],\n            "serviceInputs": [{\n            "resource": "Controller service",\n            "name": "Service.Address",\n            "value": "192.168.45.112"\n            }]\n        },\n        "tests": [\n        {\n            "name": "run-traffic.robot",\n            "path": "Traffic tests",\n            "durationInMinutes": 1,\n            "inputs": [\n                {\n                    "name": "Additional CMD Parameters",\n                    "value": ""\n                }\n            ],\n            "repositoryName": "GitHub"\n        }\n        ]\n    }\n]\n}\n'})})]}),"\n",(0,i.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Response example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'{\n  "id": "a7f13fe5-ddee-4ec8-971f-a0e6784c8387"\n}\n'})})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Response summary"}),(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Parameter"}),(0,i.jsx)("th",{children:"Description/Comments"})]})}),(0,i.jsx)("tbody",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"id"}),(0,i.jsx)("td",{children:"Suite execution id. (guid)"})]})})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var t=s(96540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);