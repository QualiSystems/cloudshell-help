"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([["71028"],{36698:function(e,i,t){t.r(i),t.d(i,{frontMatter:()=>c,toc:()=>u,default:()=>a,metadata:()=>s,assets:()=>r,contentTitle:()=>o});var s=JSON.parse('{"id":"install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/index","title":"Test Execution Service","description":"Test Execution Service is a lightweight Python service that is responsible for executing tests that were scheduled and invoked by the new New Job Scheduling. The tests must reside in a Git repository and be discovered by a Test Discovery Service.","source":"@site/versioned_docs/version-2023.3/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/index.md","sourceDirName":"install-configure/cloudshell-suite/new-jss-install-config/test-execution-service","slug":"/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/","permalink":"/2023.3/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiSystems/cloudshell-help/tree/main/versioned_docs/version-2023.3/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/index.md","tags":[],"version":"2023.3","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configure the Test Discovery Service","permalink":"/2023.3/install-configure/cloudshell-suite/new-jss-install-config/test-discovery-service/config-test-discovery-service"},"next":{"title":"Configure the Test Execution Service","permalink":"/2023.3/install-configure/cloudshell-suite/new-jss-install-config/test-execution-service/config-test-execution-service"}}'),n=t(74848),l=t(84429);let c={},o="Test Execution Service",r={},u=[{value:"Extensibility",id:"extensibility",level:2},{value:"Related Topics",id:"related-topics",level:2}];function d(e){let i={a:"a",admonition:"admonition",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"test-execution-service",children:"Test Execution Service"})}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Test Execution Service"})," is a lightweight Python service that is responsible for executing tests that were scheduled and invoked by the new New Job Scheduling. The tests must reside in a Git repository and be discovered by a ",(0,n.jsx)(i.a,{href:"/2023.3/install-configure/cloudshell-suite/new-jss-install-config/test-discovery-service/",children:"Test Discovery Service"}),"."]}),"\n",(0,n.jsx)(i.admonition,{type:"note",children:(0,n.jsx)(i.p,{children:"Test Execution Service does not support running shell and script commands nor TestShell Studio tests. Such capabilities are handled by CloudShell Execution Servers."})}),"\n",(0,n.jsx)(i.h2,{id:"extensibility",children:"Extensibility"}),"\n",(0,n.jsx)(i.p,{children:"Test Execution Service is a generic implementation that can be extended on demand to support new and advanced types of tests, inputs and testing frameworks. For more information, please contact Quali Customer Success."}),"\n",(0,n.jsx)(i.h2,{id:"related-topics",children:"Related Topics"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/2023.3/install-configure/cloudshell-suite/new-jss-install-config/new-jss-architecture",children:"New Job Scheduling Architecture"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/2023.3/install-configure/cloudshell-suite/new-jss-install-config/test-discovery-service/config-test-discovery-service",children:"Configure the Test Discovery Service"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/2023.3/api-guide/new-jss-rest-api/get-test-execution-services",children:"Get Test Execution Services"})}),"\n"]})]})}function a(e={}){let{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},84429:function(e,i,t){t.d(i,{R:()=>c,x:()=>o});var s=t(96540);let n={},l=s.createContext(n);function c(e){let i=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(l.Provider,{value:i},e.children)}}}]);