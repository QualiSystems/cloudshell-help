"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([[22911],{28453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>o});var r=n(96540);const i={},d=r.createContext(i);function t(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(d.Provider,{value:s},e.children)}},75309:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"admin/cloudshell-event-queue","title":"CloudShell Server Events Queue","description":"Cloudshell Server emits events when some operations occur in the backend.","source":"@site/versioned_docs/version-2024.1/admin/cloudshell-event-queue.md","sourceDirName":"admin","slug":"/admin/cloudshell-event-queue","permalink":"/admin/cloudshell-event-queue","draft":false,"unlisted":false,"editUrl":"https://github.com/QualiSystems/cloudshell-help/tree/main/versioned_docs/version-2024.1/admin/cloudshell-event-queue.md","tags":[],"version":"2024.1","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Customizing App Deployment Types","permalink":"/admin/supported-cloud-providers-in-cloudshell/customizing-app-deployment-types"},"next":{"title":"Frequently Asked Questions","permalink":"/faq"}}');var i=n(74848),d=n(28453);const t={sidebar_position:7},o="CloudShell Server Events Queue",l={},a=[{value:"Configuring Cloudshell Server Events Queue",id:"configuring-cloudshell-server-events-queue",level:2},{value:"Whitelisting events",id:"whitelisting-events",level:3},{value:"Example Configuration",id:"example-configuration",level:2},{value:"Supported Events",id:"supported-events",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"cloudshell-server-events-queue",children:"CloudShell Server Events Queue"})}),"\n",(0,i.jsx)(s.p,{children:"Cloudshell Server emits events when some operations occur in the backend.\nSystem designers can subscribe to these events for audit or automation purposes."}),"\n",(0,i.jsx)(s.p,{children:"This article describes how to configure this integration, as well as what events are available."}),"\n",(0,i.jsx)(s.h1,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsx)(s.p,{children:"Cloudshell Server can publish to RabbitMQ.\nThe RabbitMQ Server needs to share a reliable network with Cloudshell Server.\nRabbitMQ TCP listener port must be accessible by Cloudshell Server."}),"\n",(0,i.jsx)(s.p,{children:"Cloudshell Server Events Queue has been tested with RabbitMQ version 3.11 but should work with RabbitMQ 3.X"}),"\n",(0,i.jsxs)(s.p,{children:["To experiment with this, it is possible to emit messages to the RabbitMQ service used by an embedded Sandbox Service (which is installed with Cloudshell Server).\n",(0,i.jsx)(s.a,{href:"#example-configuration",children:"See example"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"configuring-cloudshell-server-events-queue",children:"Configuring Cloudshell Server Events Queue"}),"\n",(0,i.jsx)(s.p,{children:"In RabbitMQ, make sure you have an exchange, and a queue.\nBind the queue to the exchange, with a routing key."}),"\n",(0,i.jsxs)(s.p,{children:["In Cloudshell Server ",(0,i.jsx)(s.code,{children:"customer.config"}),", set the following keys:"]}),"\n",(0,i.jsx)(s.admonition,{title:"customer.config",type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<add key="EnableServerEventsMQ" value="True"/>\n<add key="ServerEventsMQHost" value="rabbitMq_hostname_or_ip"/>\n<add key="ServerEventsMQPort" value="rabbitmq_tcp_listener_port"/>\n<add key="ServerEventsMQUser" value="user"/>\n<add key="ServerEventsMQPassword" value="password"/>\n<add key="ServerEventsMQRabbitExchange" value="exchange"/>\n<add key="ServerEventsMQRabbitRoutingKey" value="key"/>\n'})})}),"\n",(0,i.jsx)(s.h3,{id:"whitelisting-events",children:"Whitelisting events"}),"\n",(0,i.jsx)(s.p,{children:"It is possible to determine which events will be published by Cloudshell Server.\nTo do so, create a file titled ServerEventsWhiteList.csv in the application directory (next to QsTeamServer.exe)."}),"\n",(0,i.jsxs)(s.p,{children:["Typically this is ",(0,i.jsx)(s.code,{children:"%Program Files(x86)%\\Qualisystems\\Server"}),"\nThe contents of the CSV should be the events you ",(0,i.jsx)(s.em,{children:"allow"})," to be published"]}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"ServerEventsWhiteList.csv should be line-break separated, not comma separated."})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"#supported-events",children:"See"})," which ",(0,i.jsx)(s.a,{href:"#supported-events",children:"events"})," are supported (all are sent by default)"]}),"\n",(0,i.jsx)(s.admonition,{title:"Example csv",type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"UserCreated\nUserGroupsListUpdated\nLogin\n"})})}),"\n",(0,i.jsx)(s.p,{children:"In the above example, Cloudshell Server would only emit events related to new users created, or modification to user groups (adding or removing users) or to logins"}),"\n",(0,i.jsx)(s.h2,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,i.jsx)(s.admonition,{title:"Example for embedded sandbox service",type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<add key="EnableServerEventsMQ" value="True"/>\n<add key="ServerEventsMQHost" value="localhost"/>\n<add key="ServerEventsMQPort" value="5671"/>\n<add key="ServerEventsMQUser" value="rabbitmq_user"/>\n<add key="ServerEventsMQPassword" value="rabbitmq_password"/>\n<add key="ServerEventsMQRabbitExchange" value="exchange"/>\n<add key="ServerEventsMQRabbitRoutingKey" value="key"/>\n'})})}),"\n",(0,i.jsx)(s.h2,{id:"supported-events",children:"Supported Events"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"UserCreated"}),":   This event is triggered when a new user is created."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"UserDeleted"}),":   This event occurs when a user is deleted."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"UserGroupsListUpdated"}),":   This event is fired when the list of user groups is updated."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"UserUpdated"}),":   This event happens when a user's details are updated."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Login"}),":   This event is triggered when a user logs in."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"GroupAdded"}),":   This event occurs when a new user group is added."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"GroupDeleted"}),":   This event is fired when a user group is deleted."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"GroupDomainsUpdated"}),":   This event is triggered when the domains of a user group are updated."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"GroupUpdated"}),":   This event happens when a user group is updated."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"JobEnded"}),":   This event occurs when a job ends."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"JobSetEnded"}),":   This event is fired when a job suite ends."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceAvailabilityChanged"}),":   This event is triggered when the availability of a resource changes."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"BlueprintCreated"}),":   This event occurs when a new blueprint is created."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"BlueprintUpdated"}),":   This event is fired when a blueprint is updated."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"BlueprintDeleted"}),":   This event is triggered when a blueprint is deleted."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"BlueprintRenamed"}),":   This event happens when a blueprint is renamed."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"DeployResource"}),":   This event occurs when a resource is deployed."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceIncluded"}),":   This event is fired when a resource is enabled."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceExcluded"}),":   This event is triggered when a resource is disabled."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceAdded"}),":   This event occurs when a resource is added."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceDeleted"}),":   This event is fired when a resource is deleted."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceMoved"}),":   This event happens when a resource is moved."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceRenamed"}),":   This event occurs when a resource is renamed."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceUpdated"}),":   This event is fired when a resource is updated."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourcesReserved"}),":   This event is triggered when resources are reserved."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ResourceUnlocked"}),":   This event occurs when a resource is unlocked."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"BulkResourcesAdded"}),":   This event is fired when multiple resources are added in bulk."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxCreated"}),":   This event is triggered when a sandbox is created."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxDeleted"}),":   This event occurs when a sandbox is deleted."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxEnd"}),":   This event is fired when a sandbox ends."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxEndTimeChanged"}),":   This event is triggered when the end time of a sandbox is changed."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxRejected"}),":   This event happens when a sandbox is rejected (typically due to user or license restrictions)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxRenamed"}),":   This event occurs when a sandbox is renamed."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxSetupEnded"}),":   This event is fired when the setup of a sandbox ends."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxStartTimeChanged"}),":   This event is triggered when the start time of a sandbox is changed."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SandboxUpdated"}),":   This event happens when a sandbox is updated."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"WorkOrderResourceUpdated"}),":   This event is fired when a work order resource is updated in an assembly lab sandbox."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"WorkOrderResourceSolved"}),":   This event occurs when a concrete resource is selected for a work order resource in an assembly lab sandbox."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"WorkOrderResourceCreated"}),":   This event is triggered when a work order resource is created in an assembly lab sandbox."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"WorkOrderResourceUnsolved"}),":   This event is fired when a concrete match for a work order resource is unselected in an assembly lab sandbox."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"WorkOrderResourceRemoved"}),":   This event happens when a work order resource is removed in an assembly lab sandbox."]})]})}function c(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);