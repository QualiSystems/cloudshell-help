"use strict";(self.webpackChunkcloudshell_help=self.webpackChunkcloudshell_help||[]).push([[40],{18844:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=s(17624),r=s(4552);const i={sidebar_position:2},o="CloudShell Port Requirements",l={id:"install-configure/cs-system-requirements/cs-port-requirements",title:"CloudShell Port Requirements",description:"WIP",source:"@site/docs/install-configure/cs-system-requirements/cs-port-requirements.md",sourceDirName:"install-configure/cs-system-requirements",slug:"/install-configure/cs-system-requirements/cs-port-requirements",permalink:"/cloudshell-help/next/install-configure/cs-system-requirements/cs-port-requirements",draft:!1,unlisted:!1,editUrl:"https://github.com/QualiSystems/cloudshell-help/tree/main/docs/install-configure/cs-system-requirements/cs-port-requirements.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"CloudShell Component Architecture",permalink:"/cloudshell-help/next/install-configure/cs-system-requirements/cs-component-architechture"},next:{title:"Minimum Requirements for CloudShell Servers and Clients",permalink:"/cloudshell-help/next/install-configure/cs-system-requirements/min-requirements-for-cs"}},c={},u=[];function m(e){const t={h1:"h1",p:"p",...(0,r.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"cloudshell-port-requirements",children:"CloudShell Port Requirements"}),"\n",(0,n.jsx)(t.p,{children:"WIP"})]})}function a(e={}){const{wrapper:t}={...(0,r.M)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},4552:(e,t,s)=>{s.d(t,{I:()=>l,M:()=>o});var n=s(11504);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);