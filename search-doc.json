{"searchDocs":[{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/admin/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/api-guide/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/devguide/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/install-configure/example","content":"empty page","keywords":"","version":"Next"},{"title":"Abstract Resources Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/abstract","content":"","keywords":"","version":"Next"},{"title":"What is an abstract resource?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/Introduction/features-and-concepts/abstract#what-is-an-abstract-resource","content":" An abstract resource is a component that allows CloudShell to add (to the sandbox) resources based on a set of requirements, such as resource model and/or specific attribute values. When reserving a blueprint that has an abstract resource, CloudShell will find resources that meet the resource requirements and are available for the time slot of the sandbox, and add them to the sandbox. You cannot add abstract resources directly to a sandbox, only to the blueprint. Blueprints can contain a mixture of abstract and specific resources.  An abstract resource is represented on the diagram as a resource with a dotted circle around it. For example:    ","version":"Next","tagName":"h2"},{"title":"What does an abstract resource include?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/Introduction/features-and-concepts/abstract#what-does-an-abstract-resource-include","content":" An abstract resource must include the family of the resource, and can optionally include the following:  Requirements:  Requirements are the resource settings you need the desired resource to have. CloudShell will only select resources that fully match this criteria. You must select the resource family but you can include any combination of the rest of the requirements in your abstract resource.  Note: As you add or update your requirements, CloudShell updates the number of matching inventory resources in the top right corner of the abstract resource dialog box.  Family (mandatory)Quantity: number of resources to selectSharing policyModel: model or models within the selected familyAttribute valuesSub-resources: sub-resource settings, such as blades, ports, attribute values on each sub-resource  Additional info:  Additional info is information you can add to the abstract resource for automation processes and to make available for the sandbox end-user. For example, you may want to save the resource firmware version, which needs to be upgraded as part of the sandbox provisioning process. Another example could be referencing the image file location of the resource.  Attribute values  Domains:  The domains in which this abstract resource can be used. By default, the current domain is selected and cannot be removed from the abstract resource.  For additional information about Requirements, Additional info and Domains, see Abstract Resource Settings ","version":"Next","tagName":"h2"},{"title":"Apps Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/apps","content":"Apps Overview","keywords":"","version":"Next"},{"title":"CloudShell Features and Benefits","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/features-and-benefits","content":"CloudShell Features and Benefits Faster time to market: Easy-to-use drag-and-drop blueprint editor allows you to set up operational blueprints in minutes Python-based environment orchestration and provisioning Vibrant developer community containing growing number of open-source shells for 100s of physical devices, virtual appliances, private and public clouds Shells - Python-based plugins for discovering lab and cloud infrastructure More... Data modelDevice structureCommon, device-specific Day 2 actionsDrag and drop Application layer configuration management: Ability to apply configuration management to VM's OSand applicationsAbility to load configurations on device OS Ease of use: Web-based self-service portal and inventory catalogBlueprint reservation and scheduling, resource allocation management and conflict resolutionAPI and CI/CD tool integrations for DevOps, agile and continuous development processes Monitoring and control: Business insights and utilization reports More... Custom and out-of-the-box dashboards containing easy-to-understand graphs, charts and tables, providing business insights and actionable intelligence around infrastructure consumption and activity, managed identities and more. Resource inventory (resource/chassis/blade/port etc.), cloud infrastructure, sandbox consumption and licenses, user activity and moreEasy-to-use editor allows you to create and customize existing dashboards in minutes Robust inventory search mechanism for finding CloudShell resources based on different criteria In-browser access to resources using SSH, RDP and more Activity feed displaying real-time sandbox progress and activity messages, as well as errors Security and data integrity: HTTPS securityAbility to set cloud security policies across multi-cloud environmentsBlueprint-deployment approach ensuring data integritySiloed environmentsResource authentication credentials encrypted and accessible only to admins and/or delegated usersOption to isolate/share resources across multiple environments/domains High performance: Powerful sandbox-deployment mechanism supports the deployment of 100s of sandbox environments in parallelDistributed execution engines allowing for scale, latency mitigation and quick deliveryIntegration with leading CI/CD tools and technologies Multi-site deployments Domains - Set up site/team/project-specific deployments, with access to privileged users in the organization.Role-based access control, integration with Active Directory, SSO and more Test automation: High-performance test automation platform allows the deployment of 100s of jobs in parallelNative support for Robot FrameworkSupport for rapid execution of hundreds of test batches in parallelRESTful API for automation and integration with CI/CD tools","keywords":"","version":"Next"},{"title":"CloudShell Terminology","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/terminology","content":"CloudShell Terminology","keywords":"","version":"Next"},{"title":"CloudShell - Typical Use Cases","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/use-case","content":"","keywords":"","version":"Next"},{"title":"Dev/Test (Environment as a Service)​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/Introduction/use-case#devtest-environment-as-a-service","content":" In this use case, CloudShell is used as a central location for different teams in the organization to consume sandboxes for their day-to-day development and testing activities, allowing for better exposure and utilization of physical and virtual infrastructure for different types of end users in a repeatable manner.  Applies to: Physical, virtual and hybrid environmentsTarget audience: Engineers, developers, architects, and anyone else who needs to develop or test against the organization's network, APIs, physical/cloud-hosted devices, and operating systems  ","version":"Next","tagName":"h2"},{"title":"Demo/POC lab​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/Introduction/use-case#demopoc-lab","content":" Let's say you have a sales team that needs on demand environments for POCs or product demos at a prospective customer. The sales engineer could install the system on their laptop and make the necessary tweaks and configurations, but this takes time and will require involving IT staff. With CloudShell, the demo environments are prepared in advance and the sales person simply needs to schedule a reservation of the desired blueprint for the POC meeting and CloudShell will spin up the environment, running any pre-configured automation in the process. This also applies to support/QA engineers who need to reproduce a customer issue.  Applies to: Virtual cloud-based and hybrid environmentsTarget audience: Sales/support engineers  For example, blueprint that deploys a product suite, including front end server, DB and load balancing:   ","version":"Next","tagName":"h2"},{"title":"CloudShell Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/overview","content":"CloudShell Overview CloudShell is a cloud automation platform that lets you deliver fully functional sandboxes over any combination of infrastructure, from legacy to public cloud, and eliminate resource conflicts. Creating an IT environment blueprint can be as simple as dragging the resources you need from the inventory and creating the connections between them. CloudShell significantly reduces blueprint configuration time (by automating the management of IT resources), offers clear visibility into your organization’s resources and their availability status, and optimizes resource use. With a robust data analysis and visualization engine, CloudShell provides you with business insights into your IT infrastructure, including health, consumption and availability data. CloudShell offers the following features and capabilities: Web-based self-service portal and catalogInventory managementIntegration with ANY infrastructure, private and public clouds, and industry-specific infrastructure both directly and via automation tools or APIsResource allocation management of exclusive/shared resources, conflict resolutionBlueprint modeling, easy-to-use editor with drag-and-drop capabilities allowing you to create operational blueprints in minutesReservation and schedulingNetworking: L1 (physical layer), L2 (VLAN) and L3 (subnet)Infrastructure automation, configuration management and environment orchestrationRole-based access control, Active Directory and SSO integrationGrowing developer community with technical developer forums and 100s of open-source integrations for leading clouds providers, devices, CI/CD tools, etc, providing accessibility, control and common day-2 actionsDistributed execution provisioning allowing for scale, latency mitigation and quick delivery Test automationBI reporting: Sandbox consumption and licenses, resource utilization, inventory, cloud usage, user activity, etcIn-browser access to resources using SSH, RDP and moreLive activity feed displaying real-time deployment activity messages, errors and warnings For details, see CloudShell Features and Benefits.","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/portal/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/qna/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/jss/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/release-notes/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/troubleshooting/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/version-history/example","content":"empty page","keywords":"","version":"Next"},{"title":"Manage Docs Versions","type":0,"sectionRef":"#","url":"/cloudshell-help/quick-start/creating-reserving","content":"","keywords":"","version":"Next"},{"title":"Create a docs version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#create-a-docs-version","content":" Release a version 1.0 of your project:  npm run docusaurus docs:version 1.0   The docs folder is copied into versioned_docs/version-1.0 and versions.json is created.  Your docs now have 2 versions:  1.0 at http://localhost:3000/docs/ for the version 1.0 docscurrent at http://localhost:3000/docs/next/ for the upcoming, unreleased docs  ","version":"Next","tagName":"h2"},{"title":"Add a Version Dropdown​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#add-a-version-dropdown","content":" To navigate seamlessly across versions, add a version dropdown.  Modify the docusaurus.config.js file:  The docs version dropdown appears in your navbar:  ","version":"Next","tagName":"h2"},{"title":"Update an existing version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#update-an-existing-version","content":" It is possible to edit versioned docs in their respective folder:  versioned_docs/version-1.0/hello.md updates http://localhost:3000/docs/hellodocs/hello.md updates http://localhost:3000/docs/next/hello ","version":"Next","tagName":"h2"},{"title":"Translate your site","type":0,"sectionRef":"#","url":"/cloudshell-help/quick-start/translate-your-site","content":"","keywords":"","version":"Next"},{"title":"Configure i18n​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#configure-i18n","content":" Modify docusaurus.config.js to add support for the fr locale:  docusaurus.config.js export default { i18n: { defaultLocale: 'en', locales: ['en', 'fr'], }, };   ","version":"Next","tagName":"h2"},{"title":"Translate a doc​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#translate-a-doc","content":" Copy the docs/intro.md file to the i18n/fr folder:  mkdir -p i18n/fr/docusaurus-plugin-content-docs/current/ cp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md   Translate i18n/fr/docusaurus-plugin-content-docs/current/intro.md in French.  ","version":"Next","tagName":"h2"},{"title":"Start your localized site​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#start-your-localized-site","content":" Start your site on the French locale:  npm run start -- --locale fr   Your localized site is accessible at http://localhost:3000/fr/ and the Getting Started page is translated.  caution In development, you can only use one locale at a time.  ","version":"Next","tagName":"h2"},{"title":"Add a Locale Dropdown​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#add-a-locale-dropdown","content":" To navigate seamlessly across languages, add a locale dropdown.  Modify the docusaurus.config.js file:   The locale dropdown now appears in your navbar: Build your site for a specific locale: ```bash npm run build -- --locale fr   Or build your site to include all the locales at once:  npm run build  ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}