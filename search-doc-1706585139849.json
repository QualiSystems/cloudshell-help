{"searchDocs":[{"title":"Welcome to CloudShell's Help Center","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA","content":"","keywords":"","version":"2023.1 GA"},{"title":"What is CloudShell?​","type":1,"pageTitle":"Welcome to CloudShell's Help Center","url":"/cloudshell-help/2023.1 GA#what-is-cloudshell","content":" Take a guided tour through CloudShell in this 6 minute video.  Quick video showing how to build hybrid environments containing lab equipment and cloud assets.Check out our Youtube channel for more ","version":"2023.1 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/admin/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/api-guide/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/install-configure/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/devguide/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"Apps Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/apps","content":"Apps Overview","keywords":"","version":"2023.1 GA"},{"title":"Abstract Resources Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/abstract","content":"","keywords":"","version":"2023.1 GA"},{"title":"What is an abstract resource?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/abstract#what-is-an-abstract-resource","content":" An abstract resource is a component that allows CloudShell to add (to the sandbox) resources based on a set of requirements, such as resource model and/or specific attribute values. When reserving a blueprint that has an abstract resource, CloudShell will find resources that meet the resource requirements and are available for the time slot of the sandbox, and add them to the sandbox. You cannot add abstract resources directly to a sandbox, only to the blueprint. Blueprints can contain a mixture of abstract and specific resources.  An abstract resource is represented on the diagram as a resource with a dotted circle around it. For example:    ","version":"2023.1 GA","tagName":"h2"},{"title":"What does an abstract resource include?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/abstract#what-does-an-abstract-resource-include","content":" An abstract resource must include the family of the resource, and can optionally include the following:  Requirements:  Requirements are the resource settings you need the desired resource to have. CloudShell will only select resources that fully match this criteria. You must select the resource family but you can include any combination of the rest of the requirements in your abstract resource.  Note: As you add or update your requirements, CloudShell updates the number of matching inventory resources in the top right corner of the abstract resource dialog box.  Family (mandatory)Quantity: number of resources to selectSharing policyModel: model or models within the selected familyAttribute valuesSub-resources: sub-resource settings, such as blades, ports, attribute values on each sub-resource  Additional info:  Additional info is information you can add to the abstract resource for automation processes and to make available for the sandbox end-user. For example, you may want to save the resource firmware version, which needs to be upgraded as part of the sandbox provisioning process. Another example could be referencing the image file location of the resource.  Attribute values  Domains:  The domains in which this abstract resource can be used. By default, the current domain is selected and cannot be removed from the abstract resource.  For additional information about Requirements, Additional info and Domains, see Abstract Resource Settings ","version":"2023.1 GA","tagName":"h2"},{"title":"CloudShell Features and Benefits","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/features-and-benefits","content":"CloudShell Features and Benefits Faster time to market: Easy-to-use drag-and-drop blueprint editor allows you to set up operational blueprints in minutes Python-based environment orchestration and provisioning Vibrant developer community containing growing number of open-source shells for 100s of physical devices, virtual appliances, private and public clouds Shells - Python-based plugins for discovering lab and cloud infrastructure More... Data modelDevice structureCommon, device-specific Day 2 actionsDrag and drop Application layer configuration management: Ability to apply configuration management to VM's OSand applicationsAbility to load configurations on device OS Ease of use: Web-based self-service portal and inventory catalogBlueprint reservation and scheduling, resource allocation management and conflict resolutionAPI and CI/CD tool integrations for DevOps, agile and continuous development processes Monitoring and control: Business insights and utilization reports More... Custom and out-of-the-box dashboards containing easy-to-understand graphs, charts and tables, providing business insights and actionable intelligence around infrastructure consumption and activity, managed identities and more. Resource inventory (resource/chassis/blade/port etc.), cloud infrastructure, sandbox consumption and licenses, user activity and moreEasy-to-use editor allows you to create and customize existing dashboards in minutes Robust inventory search mechanism for finding CloudShell resources based on different criteria In-browser access to resources using SSH, RDP and more Activity feed displaying real-time sandbox progress and activity messages, as well as errors Security and data integrity: HTTPS securityAbility to set cloud security policies across multi-cloud environmentsBlueprint-deployment approach ensuring data integritySiloed environmentsResource authentication credentials encrypted and accessible only to admins and/or delegated usersOption to isolate/share resources across multiple environments/domains High performance: Powerful sandbox-deployment mechanism supports the deployment of 100s of sandbox environments in parallelDistributed execution engines allowing for scale, latency mitigation and quick deliveryIntegration with leading CI/CD tools and technologies Multi-site deployments Domains - Set up site/team/project-specific deployments, with access to privileged users in the organization.Role-based access control, integration with Active Directory, SSO and more Test automation: High-performance test automation platform allows the deployment of 100s of jobs in parallelNative support for Robot FrameworkSupport for rapid execution of hundreds of test batches in parallelRESTful API for automation and integration with CI/CD tools","keywords":"","version":"2023.1 GA"},{"title":"CloudShell Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/overview","content":"CloudShell Overview CloudShell is a cloud automation platform that lets you deliver fully functional sandboxes over any combination of infrastructure, from legacy to public cloud, and eliminate resource conflicts. Creating an IT environment blueprint can be as simple as dragging the resources you need from the inventory and creating the connections between them. CloudShell significantly reduces blueprint configuration time (by automating the management of IT resources), offers clear visibility into your organization’s resources and their availability status, and optimizes resource use. With a robust data analysis and visualization engine, CloudShell provides you with business insights into your IT infrastructure, including health, consumption and availability data. CloudShell offers the following features and capabilities: Web-based self-service portal and catalogInventory managementIntegration with ANY infrastructure, private and public clouds, and industry-specific infrastructure both directly and via automation tools or APIsResource allocation management of exclusive/shared resources, conflict resolutionBlueprint modeling, easy-to-use editor with drag-and-drop capabilities allowing you to create operational blueprints in minutesReservation and schedulingNetworking: L1 (physical layer), L2 (VLAN) and L3 (subnet)Infrastructure automation, configuration management and environment orchestrationRole-based access control, Active Directory and SSO integrationGrowing developer community with technical developer forums and 100s of open-source integrations for leading clouds providers, devices, CI/CD tools, etc, providing accessibility, control and common day-2 actionsDistributed execution provisioning allowing for scale, latency mitigation and quick delivery Test automationBI reporting: Sandbox consumption and licenses, resource utilization, inventory, cloud usage, user activity, etcIn-browser access to resources using SSH, RDP and moreLive activity feed displaying real-time deployment activity messages, errors and warnings For details, see CloudShell Features and Benefits.","keywords":"","version":"2023.1 GA"},{"title":"CloudShell Terminology","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/terminology","content":"CloudShell Terminology this is some example text to make this the same higth","keywords":"","version":"2023.1 GA"},{"title":"CloudShell - Typical Use Cases","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/use-case","content":"","keywords":"","version":"2023.1 GA"},{"title":"Dev/Test (Environment as a Service)​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/2023.1 GA/Introduction/use-case#devtest-environment-as-a-service","content":" In this use case, CloudShell is used as a central location for different teams in the organization to consume sandboxes for their day-to-day development and testing activities, allowing for better exposure and utilization of physical and virtual infrastructure for different types of end users in a repeatable manner.  Applies to: Physical, virtual and hybrid environmentsTarget audience: Engineers, developers, architects, and anyone else who needs to develop or test against the organization's network, APIs, physical/cloud-hosted devices, and operating systems  ","version":"2023.1 GA","tagName":"h2"},{"title":"Demo/POC lab​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/2023.1 GA/Introduction/use-case#demopoc-lab","content":" Let's say you have a sales team that needs on demand environments for POCs or product demos at a prospective customer. The sales engineer could install the system on their laptop and make the necessary tweaks and configurations, but this takes time and will require involving IT staff. With CloudShell, the demo environments are prepared in advance and the sales person simply needs to schedule a reservation of the desired blueprint for the POC meeting and CloudShell will spin up the environment, running any pre-configured automation in the process. This also applies to support/QA engineers who need to reproduce a customer issue.  Applies to: Virtual cloud-based and hybrid environmentsTarget audience: Sales/support engineers  For example, blueprint that deploys a product suite, including front end server, DB and load balancing:   ","version":"2023.1 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/jss/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/qna/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/portal/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/release-notes/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"Translate your site","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site","content":"","keywords":"","version":"2023.1 GA"},{"title":"Configure i18n​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site#configure-i18n","content":" Modify docusaurus.config.js to add support for the fr locale:  docusaurus.config.js export default { i18n: { defaultLocale: 'en', locales: ['en', 'fr'], }, };   ","version":"2023.1 GA","tagName":"h2"},{"title":"Translate a doc​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site#translate-a-doc","content":" Copy the docs/intro.md file to the i18n/fr folder:  mkdir -p i18n/fr/docusaurus-plugin-content-docs/current/ cp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md   Translate i18n/fr/docusaurus-plugin-content-docs/current/intro.md in French.  ","version":"2023.1 GA","tagName":"h2"},{"title":"Start your localized site​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site#start-your-localized-site","content":" Start your site on the French locale:  npm run start -- --locale fr   Your localized site is accessible at http://localhost:3000/fr/ and the Getting Started page is translated.  caution In development, you can only use one locale at a time.  ","version":"2023.1 GA","tagName":"h2"},{"title":"Add a Locale Dropdown​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site#add-a-locale-dropdown","content":" To navigate seamlessly across languages, add a locale dropdown.  Modify the docusaurus.config.js file:   The locale dropdown now appears in your navbar: Build your site for a specific locale: ```bash npm run build -- --locale fr   Or build your site to include all the locales at once:  npm run build  ","version":"2023.1 GA","tagName":"h2"},{"title":"Manage Docs Versions","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/quick-start/creating-reserving","content":"","keywords":"","version":"2023.1 GA"},{"title":"Create a docs version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/2023.1 GA/quick-start/creating-reserving#create-a-docs-version","content":" Release a version 1.0 of your project:  npm run docusaurus docs:version 1.0   The docs folder is copied into versioned_docs/version-1.0 and versions.json is created.  Your docs now have 2 versions:  1.0 at http://localhost:3000/docs/ for the version 1.0 docscurrent at http://localhost:3000/docs/next/ for the upcoming, unreleased docs  ","version":"2023.1 GA","tagName":"h2"},{"title":"Add a Version Dropdown​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/2023.1 GA/quick-start/creating-reserving#add-a-version-dropdown","content":" To navigate seamlessly across versions, add a version dropdown.  Modify the docusaurus.config.js file:  The docs version dropdown appears in your navbar:  ","version":"2023.1 GA","tagName":"h2"},{"title":"Update an existing version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/2023.1 GA/quick-start/creating-reserving#update-an-existing-version","content":" It is possible to edit versioned docs in their respective folder:  versioned_docs/version-1.0/hello.md updates http://localhost:3000/docs/hellodocs/hello.md updates http://localhost:3000/docs/next/hello ","version":"2023.1 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/troubleshooting/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/version-history/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/admin/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/api-guide/example","content":"empty page","keywords":"","version":"Next"},{"title":"Welcome to CloudShell's Help Center","type":0,"sectionRef":"#","url":"/cloudshell-help/next","content":"","keywords":"","version":"Next"},{"title":"What is CloudShell?​","type":1,"pageTitle":"Welcome to CloudShell's Help Center","url":"/cloudshell-help/next#what-is-cloudshell","content":" Take a guided tour through CloudShell in this 6 minute video.  Quick video showing how to build hybrid environments containing lab equipment and cloud assets.Check out our Youtube channel for more ","version":"Next","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/devguide/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/faq/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/install-configure/example","content":"empty page","keywords":"","version":"Next"},{"title":"CloudShell Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/Abt-CS","content":"CloudShell Overview CloudShell is a cloud automation platform that lets you deliver fully functional sandboxes over any combination of infrastructure, from legacy to public cloud, and eliminate resource conflicts. Creating an IT environment blueprint can be as simple as dragging the resources you need from the inventory and creating the connections between them. CloudShell significantly reduces blueprint configuration time (by automating the management of IT resources), offers clear visibility into your organization’s resources and their availability status, and optimizes resource use. With a robust data analysis and visualization engine, CloudShell provides you with business insights into your IT infrastructure, including health, consumption and availability data. CloudShell offers the following features and capabilities: Web-based self-service portal and catalogInventory managementIntegration with ANY infrastructure, private and public clouds, and industry-specific infrastructure both directly and via automation tools or APIsResource allocation management of exclusive/shared resources, conflict resolutionBlueprint modeling, easy-to-use editor with drag-and-drop capabilities allowing you to create operational blueprints in minutesReservation and schedulingNetworking: L1 (physical layer), L2 (VLAN) and L3 (subnet)Infrastructure automation, configuration management and environment orchestrationRole-based access control, Active Directory and SSO integrationGrowing developer community with technical developer forums and 100s of open-source integrations for leading clouds providers, devices, CI/CD tools, etc, providing accessibility, control and common day-2 actionsDistributed execution provisioning allowing for scale, latency mitigation and quick delivery Test automationBI reporting: Sandbox consumption and licenses, resource utilization, inventory, cloud usage, user activity, etcIn-browser access to resources using SSH, RDP and moreLive activity feed displaying real-time deployment activity messages, errors and warnings For details, see CloudShell Features and Benefits.","keywords":"","version":"Next"},{"title":"Abstract Resources Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/features/Abstract-Resources","content":"","keywords":"","version":"Next"},{"title":"What is an abstract resource?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/next/intro/features/Abstract-Resources#what-is-an-abstract-resource","content":" An abstract resource is a component that allows CloudShell to add (to the sandbox) resources based on a set of requirements, such as resource model and/or specific attribute values. When reserving a blueprint that has an abstract resource, CloudShell will find resources that meet the resource requirements and are available for the time slot of the sandbox, and add them to the sandbox. You cannot add abstract resources directly to a sandbox, only to the blueprint. Blueprints can contain a mixture of abstract and specific resources.  An abstract resource is represented on the diagram as a resource with a dotted circle around it. For example:    ","version":"Next","tagName":"h2"},{"title":"What does an abstract resource include?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/next/intro/features/Abstract-Resources#what-does-an-abstract-resource-include","content":" An abstract resource must include the family of the resource, and can optionally include the following:  Requirements:  Requirements are the resource settings you need the desired resource to have. CloudShell will only select resources that fully match this criteria. You must select the resource family but you can include any combination of the rest of the requirements in your abstract resource.  Note: As you add or update your requirements, CloudShell updates the number of matching inventory resources in the top right corner of the abstract resource dialog box.  Family (mandatory)Quantity: number of resources to selectSharing policyModel: model or models within the selected familyAttribute valuesSub-resources: sub-resource settings, such as blades, ports, attribute values on each sub-resource  Additional info:  Additional info is information you can add to the abstract resource for automation processes and to make available for the sandbox end-user. For example, you may want to save the resource firmware version, which needs to be upgraded as part of the sandbox provisioning process. Another example could be referencing the image file location of the resource.  Attribute values  Domains:  The domains in which this abstract resource can be used. By default, the current domain is selected and cannot be removed from the abstract resource.  For additional information about Requirements, Additional info and Domains, see Abstract Resource Settings ","version":"Next","tagName":"h2"},{"title":"CloudShell - Typical Use Cases","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/CS-Use-Cases","content":"","keywords":"","version":"Next"},{"title":"Dev/Test (Environment as a Service)​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/next/intro/CS-Use-Cases#devtest-environment-as-a-service","content":" In this use case, CloudShell is used as a central location for different teams in the organization to consume sandboxes for their day-to-day development and testing activities, allowing for better exposure and utilization of physical and virtual infrastructure for different types of end users in a repeatable manner.  Applies to: Physical, virtual and hybrid environmentsTarget audience: Engineers, developers, architects, and anyone else who needs to develop or test against the organization's network, APIs, physical/cloud-hosted devices, and operating systems  ","version":"Next","tagName":"h2"},{"title":"Demo/POC lab​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/next/intro/CS-Use-Cases#demopoc-lab","content":" Let's say you have a sales team that needs on demand environments for POCs or product demos at a prospective customer. The sales engineer could install the system on their laptop and make the necessary tweaks and configurations, but this takes time and will require involving IT staff. With CloudShell, the demo environments are prepared in advance and the sales person simply needs to schedule a reservation of the desired blueprint for the POC meeting and CloudShell will spin up the environment, running any pre-configured automation in the process. This also applies to support/QA engineers who need to reproduce a customer issue.  Applies to: Virtual cloud-based and hybrid environmentsTarget audience: Sales/support engineers  For example, blueprint that deploys a product suite, including front end server, DB and load balancing:   ","version":"Next","tagName":"h2"},{"title":"Configuration Management Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/features/Configuration-Management","content":"","keywords":"","version":"Next"},{"title":"User flows​","type":1,"pageTitle":"Configuration Management Overview","url":"/cloudshell-help/next/intro/features/Configuration-Management#user-flows","content":" App configuration management:  Admin/domain admin: Creates App template &gt; defines Configuration Management &gt; optionally allows sandbox end-users to rerun Configuration Management on deployed AppsBlueprint designer: Adds App to the blueprintSandbox end-user: Starts sandbox &gt; can rerun Configuration Management for Apps that support the option  Resource configuration management:  Admin/domain admin: Imports shell &gt; creates/discovers resource into inventory &gt; adds Configuration Management asset to CloudShell &gt; associates CM asset with resource model/shellBlueprint designer: Adds resource to blueprint &gt; can edit setup orchestration to call the Configuration Management assetSandbox end user: Can run Configuration Management asset from the resource in the sandbox  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Configuration Management Overview","url":"/cloudshell-help/next/intro/features/Configuration-Management#configuration","content":" Configuration Management scripts and playbooks use the same settings for Apps and for resources.  For Apps: In CloudShell Portal, open the Manage &gt; Apps page. Create or open an existing App template. In the App's Configuration Management screen, define the scripts/playbooks to run. The scripts/playbooks run in their order of appearance during the App's deployment. For resources: In CloudShell Portal, open the Manage &gt; Assets &gt; Resource page. Import the script/playbook as a Repository Asset. Configure its settings. Attach the script/playbook to the appropriate resource models/shells. The script/playbook is displayed as a command in the resource's Resource Commands pane. tip You can use the ExecuteCommand and EnqueueCommand APIs to call resource configuration management as part of setup orchestration (using a customized setup script).  ","version":"Next","tagName":"h2"},{"title":"How Configuration Management works​","type":1,"pageTitle":"Configuration Management Overview","url":"/cloudshell-help/next/intro/features/Configuration-Management#how-configuration-management-works","content":" When configuration management execution called, the following occurs:  For custom scripts: CloudShell sends the script's execution to the Execution Server, using SSH/WinRM to connect to the target device for configuration.For Ansible playbooks: CloudShell sends the execution to the Linux Execution Server using the Execution Server Selector attribute defined in the Ansible shell (Resource Manager Client &gt; Resource Families &gt; Configuration Services &gt; Ansible Configuration).The Execution Server invokes the Ansible that is installed locally on the Linux Execution Server with the inventory of the target resource. The resource username and password should be passed to the inventory file as well for authentication to the target machine.    ","version":"Next","tagName":"h2"},{"title":"Related Topics​","type":1,"pageTitle":"Configuration Management Overview","url":"/cloudshell-help/next/intro/features/Configuration-Management#related-topics","content":" Managing AssetsRun CommandsRun App CommandsImport a Blueprint Package into CloudShellExport Blueprint Packages and ConfigurationsEnable WinRM on Windows VMs to Support Configuration Management ","version":"Next","tagName":"h2"},{"title":"Apps Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/features/CS-apps","content":"","keywords":"","version":"Next"},{"title":"What is an App?​","type":1,"pageTitle":"Apps Overview","url":"/cloudshell-help/next/intro/features/CS-apps#what-is-an-app","content":" An App is a CloudShell component that provides the definition of an application hosted on a VM. When run in the sandbox, the App deploys a virtual machine (VM) and performs the specified configuration management on it. The CloudShell user can add specific Apps from the App / Service catalog to a blueprint, for example a virtual router or a PostgreSQL database, and connect them to other resources/Apps. Once the App is deployed, an App resource is created, which behaves according to the deployed App Shell specified in the App template. Multiple Apps based on the same App template can run in parallel.  ","version":"Next","tagName":"h2"},{"title":"What does an App include?​","type":1,"pageTitle":"Apps Overview","url":"/cloudshell-help/next/intro/features/CS-apps#what-does-an-app-include","content":" Apps include the following settings:  The cloud provider the App is hosted onThe template/image/VM the App is based on(Optional) The configuration management that will run on the VM (software installations, OS configurations, etc.). In some cases, the VM may already include the required configurations.The Shell of the deployed App, which may offer additional automation capabilities to the user once the App is deployed(Optional) User access credentials to the VM (user/password)  ","version":"Next","tagName":"h2"},{"title":"App configuration process​","type":1,"pageTitle":"Apps Overview","url":"/cloudshell-help/next/intro/features/CS-apps#app-configuration-process","content":" The App configuration process requires creating a cloud provider resource that will host the App’s VM, enabling network connectivity, if required, and creating the App itself in CloudShell Portal.  note Depending on your organization, the system administrator and App/blueprint designers may be the same employee.  For public clouds like AWS EC2 and Microsoft Azure, CloudShell management networks need to first be installed on the cloud provider region that will host the App's VM. See Public Cloud Provider Support in CloudShell. The system administrator creates an Inventory resource for a cloud provider such as VMware vCenter or AWS. For additional information, see Adding Inventory Resources. This &quot;cloud provider resource&quot; will deploy the App's VM. To enable connectivity between Apps and resources or other Apps, the system administrator configures VLAN or Subnet services, as appropriate. See Connectivity Control. The App designer creates App templates, which are based on the cloud provider resource. This requires configuring the VM to deploy and the application to install on the new VM. For additional information, see Adding App templates. The blueprint designer adds the App to a blueprint and configures connectivity to other Apps and resources, as appropriate. For additional information, see Apps in Blueprints and Add Virtual Network Connectivity Requirements. End-users can now deploy the Apps in sandboxes - see Apps in Sandboxes.  ","version":"Next","tagName":"h2"},{"title":"Related Topics​","type":1,"pageTitle":"Apps Overview","url":"/cloudshell-help/next/intro/features/CS-apps#related-topics","content":" Managing Private Cloud Apps in DomainsManaging Public Cloud Apps in DomainsDeveloping Custom Cloud Provider Shells ","version":"Next","tagName":"h2"},{"title":"CloudShell Features and Benefits","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/features/CS-features-benefits","content":"CloudShell Features and Benefits Faster time to market: Easy-to-use drag-and-drop blueprint editor allows you to set up operational blueprints in minutesPython-based environment orchestration and provisioningVibrant developer community containing growing number of open-source shells for 100s of physical devices, virtual appliances, private and public clouds Shells - Python-based plugins for discovering lab and cloud infrastructure Data modelDevice structureCommon, device-specific Day 2 actionsDrag and drop Application layer configuration management: Ability to apply configuration management to VM's OSand applicationsAbility to load configurations on device OS Ease of use: Web-based self-service portal and inventory catalogBlueprint reservation and scheduling, resource allocation management and conflict resolutionAPI and CI/CD tool integrations for DevOps, agile and continuous development processes Monitoring and control: Business insights and utilization reports Custom and out-of-the-box dashboards containing easy-to-understand graphs, charts and tables, providing business insights and actionable intelligence around infrastructure consumption and activity, managed identities and more. Resource inventory (resource/chassis/blade/port etc.), cloud infrastructure, sandbox consumption and licenses, user activity and moreEasy-to-use editor allows you to create and customize existing dashboards in minutes Robust inventory search mechanism for finding CloudShell resources based on different criteriaIn-browser access to resources using SSH, RDP and moreActivity feed displaying real-time sandbox progress and activity messages, as well as errors Security and data integrity: HTTPS securityAbility to set cloud security policies across multi-cloud environmentsBlueprint-deployment approach ensuring data integritySiloed environmentsResource authentication credentials encrypted and accessible only to admins and/or delegated usersOption to isolate/share resources across multiple environments/domains High performance: Powerful sandbox-deployment mechanism supports the deployment of 100s of sandbox environments in parallelDistributed execution engines allowing for scale, latency mitigation and quick deliveryIntegration with leading CI/CD tools and technologies Multi-site deployments Domains - Set up site/team/project-specific deployments, with access to privileged users in the organization.Role-based access control, integration with Active Directory, SSO and more Test automation: High-performance test automation platform allows the deployment of 100s of jobs in parallelNative support for Robot FrameworkSupport for rapid execution of hundreds of test batches in parallelRESTful API for automation and integration with CI/CD tools","keywords":"","version":"Next"},{"title":"CloudShell Terminology","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/Term","content":"CloudShell Terminology this is some example text to make this the same higth","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/jss/example","content":"empty page","keywords":"","version":"Next"},{"title":"Traffic Generators Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/features/traffic-gens","content":"","keywords":"","version":"Next"},{"title":"Architecture​","type":1,"pageTitle":"Traffic Generators Overview","url":"/cloudshell-help/next/intro/features/traffic-gens#architecture","content":" In CloudShell, a traffic generator is typically modeled using a chassis/blade resource, which represents the traffic generator device and ports, and a controller service that runs the commands on the chassis, such as Load Configuration File, Start Traffic and Get Statistics. Chassis and controllers are each modeled by a dedicated shell. The separation of these two elements into different shells enables you to accurately model your real-life architecture. For example, they support scenarios where the chassis and controller are located on different machines or on the same one, provided as physical devices or software installed on VMs, and configurations that mix and match different controllers and chassis of the same manufacturer.  The following image illustrates a controller service that runs traffic from a traffic generator chassis to a router, via a layer 2 switch:    ","version":"Next","tagName":"h2"},{"title":"Our Traffic Generator Shells​","type":1,"pageTitle":"Traffic Generators Overview","url":"/cloudshell-help/next/intro/features/traffic-gens#our-traffic-generator-shells","content":" While we still support the use of 1st Gen shells, we highly recommend using the 2nd Gen version of the traffic generators you want to use.  Our existing traffic generator shells can be downloaded from Quali Repositories and have different levels - Certified, Preview &amp; Community grade. Can't find the Shell you're looking for? You can extend an existing Shell, create a new Shell based on one of our Shell standards, or suggest a new standard in our Idea Box.  ","version":"Next","tagName":"h2"},{"title":"How to set up a traffic generator in CloudShell​","type":1,"pageTitle":"Traffic Generators Overview","url":"/cloudshell-help/next/intro/features/traffic-gens#how-to-set-up-a-traffic-generator-in-cloudshell","content":" This procedure provides an end-to-end flow from importing a traffic generator chassis and controller into CloudShell, creating the chassis resource and controller service, and adding them to a blueprint.  Import the traffic generator chassis shell into CloudShell. In the appropriate domain, create a chassis resource with the details of your chassis device or VM (if your chassis is provided as a virtual appliance). Import the traffic generator controller shell into CloudShell. Since the controller is a service, if you're not planning on working in the Global domain, you will need to expose the service to the appropriate domain. This is done by associating the service to a service category that is assigned to the domain. If your controller is a 1st Gen shell, in Resource Manager Client, open the Resource Families explorer, click the service family and associate the service category. For 2nd Gen service shells, assign the shell's service category to the appropriate domain in the Manage dashboard. Create a blueprint in the domain. Add the controller service, chassis ports that will be used in the traffic test, and any additional resources/Apps as appropriate. Create the connectivity requirements between the different endpoints. Associate the chassis ports to the port configurations specified in the controller's configuration file, as explained in the following section, under Load Configuration.  ","version":"Next","tagName":"h2"},{"title":"How to use traffic generators in CloudShell​","type":1,"pageTitle":"Traffic Generators Overview","url":"/cloudshell-help/next/intro/features/traffic-gens#how-to-use-traffic-generators-in-cloudshell","content":" The following workflow highlights a typical traffic test. For additional commands and use cases, see the readme file that comes with your traffic generator shell.  In the sandbox, open the controller's commands pane. Run these commands in the following order: Run Load Configuration to load the configuration file prepared by your admin to the controller. The configuration file includes the settings according to which the traffic test will be run. For example, packet size, number of packets to send in parallel, interval at which to send packet batches, etc. Points to consider: The file must be accessible to the execution server that will run the traffic test.The configuration file provides a unique name for each port on the chassis. Therefore, in order to assign a port on the configuration file to a port on the chassis, you must specify the file's defined port name on the port in CloudShell. To do so, drag the port resource into the diagram from the Add Resource catalog, open its Resource Structure pane, click the port's drop-down list and select Attributes, and in the Logical Name field, specify the port's name. note Since traffic operations may take longer than the default 10 minute idle timeout period set for shell drivers, once you run the first command on the traffic generator controller, the controller will remain in a &quot;running&quot; state (indicated by the turning wheel on the controller service) until the reservation ends or the shell driver process is manually terminated. Run Start Traffic to generate and send the traffic to the DUT according to the settings provided in the configuration file. Set the Blocking input to decide how to run the traffic test (True to run synchronously or False to run asynchronously). In synchronous mode, CloudShell waits for the traffic test to complete before allowing additional traffic commands to run, and in asynchronous mode, you can run additional commands while the traffic test is running. Run Stop Traffic to stop sending traffic from the traffic generator. This does not terminate the controller's shell driver process, so if the Start Traffic command is running in synchronous mode, all subsequent commands will still have to wait for the traffic test to complete. Run Get Statistics. This command returns the traffic test's statistics in JSON or CSV format. Set the command's inputs: View Name: Type of statistics to return. For example, Port Statistics, Traffic Item Statistics, Flow Statistics, etc. The types available may differ depending on the traffic generator.Output Type (Enum): JSON or CSV. JSON prints the statistics to the reservation's output, which is useful for API calls that can then use the output, while CSV attaches a CSV file with the test's statistics to the sandbox. ","version":"Next","tagName":"h2"},{"title":"Blueprints","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints","content":"","keywords":"","version":"Next"},{"title":"Recommended workflows​","type":1,"pageTitle":"Blueprints","url":"/cloudshell-help/next/portal/blueprints#recommended-workflows","content":" ","version":"Next","tagName":"h2"},{"title":"Browsing and reserving blueprints​","type":1,"pageTitle":"Blueprints","url":"/cloudshell-help/next/portal/blueprints#browsing-and-reserving-blueprints","content":" Use the Blueprint CatalogBrowse the Blueprint WorkspaceReserve a blueprint from the Catalog  ","version":"Next","tagName":"h3"},{"title":"Designing blueprints​","type":1,"pageTitle":"Blueprints","url":"/cloudshell-help/next/portal/blueprints#designing-blueprints","content":" Use the Blueprint CatalogCreate a BlueprintAdd Physical Network Connectivity RequirementsAdd Virtual Network Connectivity Requirements ","version":"Next","tagName":"h3"},{"title":"Using Traffic Generator Ports as Abstract Resources","type":0,"sectionRef":"#","url":"/cloudshell-help/next/intro/features/traffic-gens/Traffic-Gens-Abst","content":"","keywords":"","version":"Next"},{"title":"Option 1: Configure CloudShell to set the logical names on the ports during reservation setup (using additional info)​","type":1,"pageTitle":"Using Traffic Generator Ports as Abstract Resources","url":"/cloudshell-help/next/intro/features/traffic-gens/Traffic-Gens-Abst#option-1-configure-cloudshell-to-set-the-logical-names-on-the-ports-during-reservation-setup-using-additional-info","content":" This option applies to scenarios where you have different ports that are not specifically configured for the test at hand. In this case, you don’t care which ports you use as long as they’re available, so you set the logical name as additional info on the abstract resource. This provides the greatest control since you don’t specify the logical name of the port as a requirement, which can limit your search for a port. Instead you set the logical name once you get an available port using a custom script.  To configure CloudShell to set the logical names on the ports during reservation setup:  In the appropriate domain, open the Inventory dashboard and in the Abstract Templates page, create an abstract resource template for the traffic generator chassis resource. Create the port abstracts. On each port abstract, open the Additional Info tab and use the Logical Name attribute to set the logical name according to how the port is referred to in the test configuration you load. For example, setting &quot;p2&quot; as the logical name for Port 2: Click Save Changes. Create a blueprint and add the abstract templatefrom the Add Abstract Template catalog. Add to the blueprint a custom setup script that takes the value from the port’s Additional Info and sets the value of the Logical Name attribute on the port. Reserve the blueprint. The Logical Name is set on the port resource. You can now load a test configuration that uses these logical names.  ","version":"Next","tagName":"h2"},{"title":"Option 2: Pre-configure the logical names on the port resources and configure the abstract resources to select the resources that have the desired logical names (using requirements)​","type":1,"pageTitle":"Using Traffic Generator Ports as Abstract Resources","url":"/cloudshell-help/next/intro/features/traffic-gens/Traffic-Gens-Abst#option-2-pre-configure-the-logical-names-on-the-port-resources-and-configure-the-abstract-resources-to-select-the-resources-that-have-the-desired-logical-names-using-requirements","content":" This method limits your search to only those ports that have already been defined with a specific logical name.  Unlike option 1, in this scenario, your ports were pre-configured to perform specific tasks. So here each of the traffic generator’s ports has a logical name configured and you explicitly state the ports you want to use, using requirements, and since the logical name has been configured ahead of time, you don’t need a custom script to do the assigning.  To configure the abstract resources to select the resources that already have the desired logical names:  Set the Logical Name on all the traffic generator chassis resource’s ports. In the Inventory dashboard, click Advanced search. Search for the resource. For each selected port, click the port’s More Info button and select Edit. For example: Make sure the Logical Name attribute is set according to how the port is referred to in the test configuration you load. Click Save. Repeat steps b-e for each additional port. In the Inventory dashboard's Abstract Templates page, create an abstract resource template for the traffic generator chassis resource. In the template's Requirements page, add the required port abstracts. Create a blueprint and add the abstract template from the Add Abstract Template catalog. Reserve the blueprint. ","version":"Next","tagName":"h2"},{"title":"Creating Blueprints","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints","content":"Creating Blueprints This article guides you on how to create your blueprint, provision it with resources, Apps and services, create connections between the different elements and configure additional blueprint settings, like adding commands to be used in sandboxes based on this blueprint. For video tutorials about blueprints, visit Quali's Training webpage. To create, provision and configure a blueprint: Blueprint Development Best PracticesCreate a BlueprintName your BlueprintAdd ResourcesApps in BlueprintsAdd servicesAdd Abstract ResourcesLabels in BlueprintsAdd Physical Network Connectivity RequirementsAdd Virtual Network Connectivity RequirementsCheck BlueprintCheck Blueprint RoutesDefine the Blueprint's PropertiesCreate Blueprint CommandsConfigure Blueprint OrchestrationAdd InstructionsAdd User InputsSet the Blueprint's Privacy (Public / Private) Additional actions: Import a Blueprint Package into CloudShellExport Blueprint Packages and ConfigurationsDuplicate A Blueprint (Save A Copy)Create Template from Blueprint (Save As Template)","keywords":"","version":"Next"},{"title":"Blueprint Workspace","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace","content":"","keywords":"","version":"Next"},{"title":"Navigating the blueprint workspace​","type":1,"pageTitle":"Blueprint Workspace","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace#navigating-the-blueprint-workspace","content":" In the image below, hover over an area or option to learn more about it, or use the table that follows.    The workspace's areas are arranged as follows: The canvas displays the different resources, services and Apps in the blueprint and enables you to perform different actions on the blueprint and its elements. |The Blueprint menu enables you to view the blueprint's properties, save the blueprint as a template and export it as a package. |The blueprint's display name. Click the name to change. |The blueprint's current privacy setting. Click the button to change. |Click to reserve the blueprint. Other users in this domain can see and access public blueprints while private blueprints are accessible only to you and the blueprint's permitted users, if you defined any. note This option is not available in blueprints defined as &quot;view-only.&quot; The workspace view mode. Diagram view provides a graphical representation of the blueprint. List view displays the blueprint's elements in a list. You can filter the list using the search field and sort the list by clicking the desired column name.Click the Resource, App / Service, or Abstract button to add the suitable resource to your blueprint.Review the blueprint’s instructions. This option is available only if the blueprint has instructions. See Review Sandbox Instructions.Review the blueprint's commands. CloudShell's blueprint template includes preconfigured setup and teardown commands. See Blueprint commands.Show the diagram in a mini-map on the workspace. You can drag the map to change the view in the workspace.Zoom in or out of the workspace.Enter the zoom percentage. Default is 100%.Displays all the blueprint workspace tools and options in a pane. Displays the Add Resource pane, where you can search for resources in the inventory and add them to the blueprint.Displays the Add App/Service pane, where you can search for apps or services in the inventory and add them to the blueprint.Displays the Add Abstract Resource pane, where you can search for abstract resources in the inventory and add them to the blueprint.Displays the Instruction sidebar that is fully customizable and explains the concepts and usage of the blueprint to the end user.Displays the blueprint commands attached to resources. Commands can be used to orchestrate sandbox-level operations.Displays a mini-map of the diagram on the workspace. You can drag the map to change the view in the workspace.Displays the Connections Legend, showing the different connection types.Options to change the size of the icons in the workspace.Position elements in the diagram to the closest intersection of the grid.Use these options to arrange the elements in the diagram.Save the current diagram layout as the default for this blueprint.Reverts to the previous snapshot of the diagram layout that was previously saved. Note: Saving the layout of a sandbox will not affect the original blueprint. Saving a new layout for a blueprint will not affect any existing sandboxes. Displays labels that are currently being used in the diagram. See Labels in Blueprints.  ","version":"Next","tagName":"h2"},{"title":"Blueprint Diagram view​","type":1,"pageTitle":"Blueprint Workspace","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace#blueprint-diagram-view","content":" Diagram view is the default view for the blueprint. It enables you to add and arrange elements in your blueprint, such as resources and Apps, define connectivity requirements between these elements, and set the blueprint's properties, including description, image, blueprint categories, orchestration, instructions and inputs.  In Diagram view you can also view blueprint and resource commands.  :::tip: To move or delete multiple elements at once, hold down the [Ctrl] key, select the elements and perform the suitable action. :::  ","version":"Next","tagName":"h3"},{"title":"Blueprint List view​","type":1,"pageTitle":"Blueprint Workspace","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace#blueprint-list-view","content":" List view displays the blueprint's elements and their sub-resources in a list.  For more information, see Blueprint List View.  ","version":"Next","tagName":"h3"},{"title":"Reserve a blueprint from the blueprint workspace​","type":1,"pageTitle":"Blueprint Workspace","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace#reserve-a-blueprint-from-the-blueprint-workspace","content":" When reserving a blueprint, you can define certain properties of the sandbox and may need to provide information for resource provisioning and automation processes.  If there's a resource or scheduling conflict, CloudShell will offer available time slots for the sandbox. For additional information about sandboxes and reservation conflicts, see Creating Sandboxes.  note Blueprints of type ‘view’ cannot be reserved.  To create an immediate or future sandbox:  In the Blueprint Catalog, on the required blueprint tile, click Reserve. Alternatively, in the blueprint workspace, click the Reserve button. The Reserve dialog box is displayed. tip The timezone for the sandbox is indicated in the title of the Reserve dialog box. If the blueprint is defined as a persistent blueprint, select the Sandbox Type you want to deploy: Regular Sandbox to spin up a time-limited sandboxPersistent Sandbox to deploy a persistent sandbox with no end time. For details, see Persistent Sandboxes Overview. In the Schedule field, you can set the required sandbox duration or specify the explicit start and/or end time. Use the Calendar button to set future dates.  Notes Most of the scheduling options are disabled for persistent blueprints.For non-persistent sandboxes, if a maximum duration was set for the sandbox, the user will not be able to reserve for a duration beyond this setting.  (Unavailable for persistent blueprints) To have this sandbox repeat in a series, click Add Recurrence. If this option is missing, the admin needs to enable it using the EnableRecurringReservation key. The Recurrence page is displayed. To have the sandbox repeat on specific days, click the Pattern field and either select the days or select Daily to have the sandbox repeat on all days of the week.In the Range field, define the period in which the sandbox will repeat. Optionally, change the Name of the sandbox. By default, the new sandbox name is the blueprint name. note The sandbox’s name has a limit of 60 characters. In the Blueprint field, you can see the blueprint on which the sandbox is based. To specify additional options, click the Advanced Form button. The advanced form enables you to configure the email notifications, permissions and other options. Optionally, enter a Description. Otherwise, the description of the sandbox will default to the blueprint description. To define an owner for the sandbox, click the Owner and select the required user. By default, the user who initiated the scheduling action is set as the sandbox owner. Instead of changing the owner of the sandbox, you can permit additional users to use the sandbox. Click the Permitted Users section and select the users you wish to add. To prevent users from ending the sandbox before its scheduled end time, enable Termination Protection. This option ensures your sandbox isn't ended accidentally or prematurely. And when you are ready to manually end the sandbox, disable the option in the sandbox's properties window and then end it. You can configure CloudShell to send email notifications to the owner of the sandbox and permitted users. note This capability requires the administrator to activate the email notifications feature using the ReservationEmail configuration keys. Click the Email Notifications field. The Email Notifications area expands. Configure the email notification settings. On start - Sends notification as the sandbox starts.On setup complete - Sends notification when the sandbox setup completes.Before end - (Unavailable for persistent blueprints) Sends notification before the Teardown process begins. The exact time is decided by the user. note By default, it is not possible to launch a sandbox that has a shorter duration than the Before end period. However, your admin can enable this capability using the ReservationEmail.VerifyNotificationBeforeEndLongerThanDuration configuration key. On end - Sends when the sandbox ends. If the blueprint has inputs (global inputs, published abstract resource or service inputs), you will be asked to provide them. tip To expand the value area, click and drag down the icon in the bottom right corner of the frame. Click Reserve. The sandbox is being reserved. If you are reserving a blueprint that has the Default Sandbox Setup script, the script runs, and an indication next to the sandbox state informs you of its progress. Setup process details Note that during the Setup process, the sandbox is locked in CloudShell Portal and cannot be modified - see Unlocking sandboxes for use during the Setup process. The default setup process has 4 stages: Preparation - Prepare network connections for the sandbox's Apps and any additional custom preparations. note This stage is not used by default, but can be used for custom code executions that need to run before the setup process. Provisioning - This is the main stage of the setup process. In this stage, CloudShell locks unshared resources for the duration of the sandbox, deploys the sandbox's Apps and prepares App connectivity in the respective cloud providers. Connectivity - CloudShell creates the physical and virtual network connections for the sandbox's resources and Apps, and powers on the App VMs. Configuration - If any of the sandbox's Apps have configuration management operations that need to be run, CloudShell runs them in this stage. If any resource is unavailable for the scheduled time slot, the Conflicts dialog box is displayed, proposing an alternative time slot, as described in Dealing with conflicts. The new sandbox is displayed in Diagram view with a blue Sandbox label at the top of the canvas and a green Active icon in the toolbar: note For persistent blueprints, the blue Sandbox label is replaced with a Persistent Environment label. If you have a license for the Save and Restore paid add-on, you will see a Save Sandbox button. For more information, see the Sandbox Save and Restore Overview.  ","version":"Next","tagName":"h2"},{"title":"Request approval to reserve a blueprint​","type":1,"pageTitle":"Blueprint Workspace","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace#request-approval-to-reserve-a-blueprint","content":" Some blueprints require a moderator's approval. This usually applies to high-cost blueprints or those using critical infrastructure. Such blueprints have a Request button instead of the traditional Reserve one. For details, see Blueprint Approval Policy.  note Admins and blueprint owners have full permissions on their blueprints and can therefore reserve their approval blueprints without going through the approval process.  To request approval:  In the Blueprint Catalog, click the blueprint's Request button. The Request Approval dialog box is displayed. Fill in the details. The Approval Validity period defines the time frame in which you plan to create the sandbox, and the Max Sandbox Duration defines the maximum period of the sandbox to be created. Enable Unlimited Request to set a validity period with no end time. Notes Once the request is approved, you will be able to start the sandbox at any time within the period as long as the sandbox also ends within the alloted time frame.The approval applies to a single sandbox reservation. In other words, you cannot start the sandbox, end it and start a new one on the same approval. Optionally enter Notes relating to the request. If the blueprint has published inputs, specify their values. Click Request Approval. An approval request is logged in the Approval Requests page, and a notification email is sent to the blueprint's approvers. ","version":"Next","tagName":"h2"},{"title":"Blueprint List View","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace/blueprint-list-view","content":"","keywords":"","version":"Next"},{"title":"Performing actions on a resource or App in the blueprint​","type":1,"pageTitle":"Blueprint List View","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace/blueprint-list-view#performing-actions-on-a-resource-or-app-in-the-blueprint","content":" The Actions menu enables you to perform actions on a specific resource, App or service in the list.  To perform an action on an element in the blueprint:  Click the row's button.Select the appropriate action: Share/unshare reserved resources: Configure elements in the sandbox to be available or unavailable for other sandboxes by choosing to share or unshare them. For more information, see Share Reserved Resources.Remove: to remove the selected resource or App from the blueprint.  ","version":"Next","tagName":"h2"},{"title":"Searching the list​","type":1,"pageTitle":"Blueprint List View","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace/blueprint-list-view#searching-the-list","content":" You can search for specific resources, sub-resource and Apps on the list.  To search the list:  In the Search in list field, enter a word, number or phrase.  The list displays the matching elements.  ","version":"Next","tagName":"h2"},{"title":"Sorting and filtering the list​","type":1,"pageTitle":"Blueprint List View","url":"/cloudshell-help/next/portal/blueprints/blueprint-workspace/blueprint-list-view#sorting-and-filtering-the-list","content":" The Column Settings menu enables you to sort the list and filter the elements according to a specific word, number or phrase, as well as to show or hide columns.    To sort the list according to a certain column:  Click a column to sort the list in ascending or descending order.  To hide columns:  Click the column's button and select the Columns option.Unselect the columns you want to hide. The Full Name column cannot be hidden.  To filter items on the list:  Click the column's button and select the Filter option.Set the filter criteria. You can set up to two criteria.    Elements that match the filter criteria are displayed. ","version":"Next","tagName":"h2"},{"title":"Blueprint Catalog","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog","content":"","keywords":"","version":"Next"},{"title":"Navigating the Blueprint Catalog​","type":1,"pageTitle":"Blueprint Catalog","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog#navigating-the-blueprint-catalog","content":" In the image below, hover over an area or option to learn more about it, or use the table that follows.    The catalog's areas are arranged as follows: Run a free text search for blueprints listed in the dashboard. Switch between the Blueprint Catalog and the Sandboxes dashboard. Use the filters to find blueprints matching specific criteria. See Filter the Blueprint Catalog. The catalog header displays the number of blueprints in the catalog, enables you to clear any filters you applied to the catalog, and switch between the catalog views. Select whether to display blueprints in a list or tiles. View and manage the different blueprints in the catalog. Click a tile to open the blueprint's workspace. Reserve the blueprint (creates a sandbox). See Reserving a blueprint.Displays the blueprint's current status and whether any resources are unavailable.Display details about the blueprint and its status.Click to access the blueprint's diagram and properties page. Select Delete to remove the blueprint from CloudShell. Use this pane to filter blueprints by category. See View blueprints by categories.  In the Blueprint Catalog, you can:  View blueprints by categoriesFilter the Blueprint CatalogReserve a blueprint from the CatalogRequest approval to reserve a blueprint  ","version":"Next","tagName":"h2"},{"title":"View blueprints by categories​","type":1,"pageTitle":"Blueprint Catalog","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog#view-blueprints-by-categories","content":" The Browse by Category pane is displayed when there are categories associated with the current domain. This pane lists the different categories in the portal and enables you to view blueprints that belong to a specific category.  note Categories are created and managed by the system administrator through the Manage dashboard.  To display blueprints of a specific category:  On the right of the screen, in the Browse by Category pane, click the required category.  To return to the previous view in the catalog:  In the catalog header, click Back to Blueprint Catalog.  ","version":"Next","tagName":"h2"},{"title":"Filter the Blueprint Catalog​","type":1,"pageTitle":"Blueprint Catalog","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog#filter-the-blueprint-catalog","content":" ","version":"Next","tagName":"h2"},{"title":"Featured or All blueprints​","type":1,"pageTitle":"Blueprint Catalog","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog#featured-or-all-blueprints","content":" By default, blueprints in the catalog are displayed in one of the following ways:  Featured (default view) – Arranges the blueprints according to recent activities and includes the following sections: New - Recently created public blueprints Recently Modified – Recently modified blueprints that are owned by the user Recently Reserved - Recently reserved blueprints All Blueprints – Displays all the blueprints in the domain. The blueprints are displayed in alphabetical order.  note The Featured section is optional. If the Featured section is disabled, the All blueprints section is displayed.  To switch between these views:  Use the and buttons in the top left-hand corner of the Blueprint Catalog. The number of matching blueprints is displayed to the right of the Blueprint Catalog header caption.  ","version":"Next","tagName":"h3"},{"title":"Filter pane​","type":1,"pageTitle":"Blueprint Catalog","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog#filter-pane","content":" To apply additional filters to the catalog, use the Filter options from the left sidebar. Different filters appear according to the blueprints in the catalog and your user permissions.  The following table describes the available filters:  Filter type\tDescription\tFilterMy Blueprints\tDisplays blueprints directly related to the logged in user. Note: If you don’t own any blueprints, the filter is not displayed.\tActive - Displays blueprints that are currently active Owned by me - Displays blueprints you currently own. Share Level\tDisplays blueprints you own and public blueprints in your current domain. Note: If all the blueprints are either public or private, the filter is not displayed.\tPublic - Displays public blueprints (from all users). Private (My) - Displays private blueprints owned by the current user. Private (All) - (Available to admins only) Displays private blueprints of any user in the domain. Blueprint Status\tBlueprint status enables you to view blueprints based on their current availability. To ensure a responsive behavior, the status is calculated using a very basic availability check. Only the current status of physical resources in the blueprint is checked. Conflicts related to abstract resources and connectivity is not reflected by the blueprint status.\tAvailable - Displays blueprints whose physical resources are currently available. Unavailable - Displays blueprints whose physical resources are currently in use. View only - Displays blueprints that contain resources that are not in your domain or blueprints for which you have View Only permissions. Draft - Displays blueprints that have drafts you are permitted to access  ","version":"Next","tagName":"h3"},{"title":"Blueprint Type​","type":1,"pageTitle":"Blueprint Catalog","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog#blueprint-type","content":" In the Blueprint Catalog, you can display blueprints according to blueprint type by using the Type filter located in the top right-hand area of the page. There are three types of blueprints: Regular, Order and View. The Type filter is displayed if more than one blueprint is enabled. Enabling blueprints of types Order or View requires setting a configuration key.  To display a blueprint type:  In the top right hand corner of the Blueprint Catalog, click the Type dropdown list.Select one of the following types:  All - display blueprints of all types (Default)Regular – display blueprints of type RegularOrder - display blueprints of type Order. Orders are sandboxes that need to be manually activated, enabling users to make modifications to the sandbox itself before it goes live, without changing the blueprint's settings.View – display blueprints for which you have view only permissions. You cannot edit, delete or reserve view only blueprints.  The last blueprint type that you selected is remembered and is displayed when you next open the Blueprint Catalog.  ","version":"Next","tagName":"h3"},{"title":"Reserve a blueprint from the Catalog​","type":1,"pageTitle":"Blueprint Catalog","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog#reserve-a-blueprint-from-the-catalog","content":" For additional information about sandboxes and sandbox conflicts, see Creating Sandboxes.  note Blueprints of type ‘view’ cannot be reserved.  To create an immediate or future sandbox:  In the Blueprint Catalog, on the required blueprint tile, click Reserve. Alternatively, in the blueprint workspace, click the Reserve button. The Reserve dialog box is displayed. tip The timezone for the sandbox is indicated in the title of the Reserve dialog box. If the blueprint is defined as a persistent blueprint, select the Sandbox Type you want to deploy: Regular Sandbox to spin up a time-limited sandboxPersistent Sandbox to deploy a persistent sandbox with no end time. For details, see Persistent Sandboxes Overview. In the Schedule field, you can set the required sandbox duration or specify the explicit start and/or end time. Use the Calendar button to set future dates.  Notes Most of the scheduling options are disabled for persistent blueprints.For non-persistent sandboxes, if a maximum duration was set for the sandbox, the user will not be able to reserve for a duration beyond this setting.  (Unavailable for persistent blueprints) To have this sandbox repeat in a series, click Add Recurrence. If this option is missing, the admin needs to enable it using the EnableRecurringReservation key. The Recurrence page is displayed. To have the sandbox repeat on specific days, click the Pattern field and either select the days or select Daily to have the sandbox repeat on all days of the week.In the Range field, define the period in which the sandbox will repeat. Optionally, change the Name of the sandbox. By default, the new sandbox name is the blueprint name. note The sandbox’s name has a limit of 60 characters. In the Blueprint field, you can see the blueprint on which the sandbox is based. To specify additional options, click the Advanced Form button. The advanced form enables you to configure the email notifications, permissions and other options. Optionally, enter a Description. Otherwise, the description of the sandbox will default to the blueprint description. To define an owner for the sandbox, click the Owner and select the required user. By default, the user who initiated the scheduling action is set as the sandbox owner. Instead of changing the owner of the sandbox, you can permit additional users to use the sandbox. Click the Permitted Users section and select the users you wish to add. To prevent users from ending the sandbox before its scheduled end time, enable Termination Protection. This option ensures your sandbox isn't ended accidentally or prematurely. And when you are ready to manually end the sandbox, disable the option in the sandbox's properties window and then end it. You can configure CloudShell to send email notifications to the owner of the sandbox and permitted users. note This capability requires the administrator to activate the email notifications feature using the ReservationEmail configuration keys. Click the Email Notifications field. The Email Notifications area expands. Configure the email notification settings. On start - Sends notification as the sandbox starts. On setup complete - Sends notification when the sandbox setup completes. Before end - (Unavailable for persistent blueprints) Sends notification before the Teardown process begins. The exact time is decided by the user. note By default, it is not possible to launch a sandbox that has a shorter duration than the Before end period. However, your admin can enable this capability using the ReservationEmail.VerifyNotificationBeforeEndLongerThanDuration configuration key. On end - Sends when the sandbox ends. If the blueprint has inputs (global inputs, published abstract resource or service inputs), you will be asked to provide them. tip To expand the value area, click and drag down the icon in the bottom right corner of the frame. Click Reserve. The sandbox is being reserved. If you are reserving a blueprint that has the Default Sandbox Setup script, the script runs, and an indication next to the sandbox state informs you of its progress. More details Note that during the Setup process, the sandbox is locked in CloudShell Portal and cannot be modified - see Unlocking sandboxes for use during the Setup process. The default setup process has 4 stages: Preparation - Prepare network connections for the sandbox's Apps and any additional custom preparations. note This stage is not used by default, but can be used for custom code executions that need to run before the setup process. Provisioning - This is the main stage of the setup process. In this stage, CloudShell locks unshared resources for the duration of the sandbox, deploys the sandbox's Apps and prepares App connectivity in the respective cloud providers. Connectivity - CloudShell creates the physical and virtual network connections for the sandbox's resources and Apps, and powers on the App VMs. Configuration - If any of the sandbox's Apps have configuration management operations that need to be run, CloudShell runs them in this stage. If any resource is unavailable for the scheduled time slot, the Conflicts dialog box is displayed, proposing an alternative time slot, as described in Dealing with conflicts. The new sandbox is displayed in Diagram view with a blue Sandbox label at the top of the canvas and a green Active icon in the toolbar: note For persistent blueprints, the blue Sandbox label is replaced with a Persistent Environment label. If you have a license for the Save and Restore paid add-on, you will see a Save Sandbox button. For more information, see the Sandbox Save and Restore Overview.  ","version":"Next","tagName":"h2"},{"title":"Request approval to reserve a blueprint​","type":1,"pageTitle":"Blueprint Catalog","url":"/cloudshell-help/next/portal/blueprints/blueprint-catalog#request-approval-to-reserve-a-blueprint","content":" Some blueprints require a moderator's approval. This usually applies to high-cost blueprints or those using critical infrastructure. Such blueprints have a Request button instead of the traditional Reserve one. For details, see Blueprint Approval Policy.  note Admins and blueprint owners have full permissions on their blueprints and can therefore reserve their approval blueprints without going through the approval process.  To request approval:  In the Blueprint Catalog, click the blueprint's Request button. The Request Approval dialog box is displayed. Fill in the details. The Approval Validity period defines the time frame in which you plan to create the sandbox, and the Max Sandbox Duration defines the maximum period of the sandbox to be created. Enable Unlimited Request to set a validity period with no end time. Notes Once the request is approved, you will be able to start the sandbox at any time within the period as long as the sandbox also ends within the alloted time frame.The approval applies to a single sandbox reservation. In other words, you cannot start the sandbox, end it and start a new one on the same approval. Optionally enter Notes relating to the request. If the blueprint has published inputs, specify their values. Click Request Approval. An approval request is logged in the Approval Requests page, and a notification email is sent to the blueprint's approvers. ","version":"Next","tagName":"h2"},{"title":"Add Connectivity","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity","content":"","keywords":"","version":"Next"},{"title":"Related Topics​","type":1,"pageTitle":"Add Connectivity","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity#related-topics","content":" Connect Resources and AppsConnectivity Control ","version":"Next","tagName":"h2"},{"title":"Abstract Resources","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/abstract-resources","content":"Abstract Resources WIP","keywords":"","version":"Next"},{"title":"Physical Network Connectivity","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network","content":"","keywords":"","version":"Next"},{"title":"Related Topics​","type":1,"pageTitle":"Physical Network Connectivity","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network#related-topics","content":" Physical Network Connectivity PrerequisitesView Physical Network Connectivity RequirementsAdd Physical Network Connectivity RequirementsAdd Multiple Physical Network Connectivity RequirementsConfigure Physical Network Connectivity RequirementsDelete Physical Network Connectivity Requirements ","version":"Next","tagName":"h2"},{"title":"Add Multiple Physical Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/add-phy-net-req/add-multiple-net-req","content":"","keywords":"","version":"Next"},{"title":"Related Topics​","type":1,"pageTitle":"Add Multiple Physical Network Connectivity Requirements","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/add-phy-net-req/add-multiple-net-req#related-topics","content":" Physical Network ConnectivityPhysical Network Connectivity PrerequisitesView Physical Network Connectivity RequirementsAdd Physical Network Connectivity Requirements ","version":"Next","tagName":"h2"},{"title":"Configure Physical Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/config-physical-conn-req","content":"Configure Physical Network Connectivity Requirements WIP","keywords":"","version":"Next"},{"title":"Add Physical Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/add-phy-net-req","content":"","keywords":"","version":"Next"},{"title":"Related Topics​","type":1,"pageTitle":"Add Physical Network Connectivity Requirements","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/add-phy-net-req#related-topics","content":" Physical Network ConnectivityPhysical Network Connectivity PrerequisitesView Physical Network Connectivity RequirementsAdd Multiple Physical Network Connectivity RequirementsConfigure Physical Network Connectivity Requirements ","version":"Next","tagName":"h2"},{"title":"Delete Physical Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/delete-physical-conn-req","content":"Delete Physical Network Connectivity Requirements WIP","keywords":"","version":"Next"},{"title":"View Physical Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/view-phy-net-connectivity-req","content":"","keywords":"","version":"Next"},{"title":"Related Topics​","type":1,"pageTitle":"View Physical Network Connectivity Requirements","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/view-phy-net-connectivity-req#related-topics","content":" Physical Network ConnectivityAdd Physical Network Connectivity RequirementsConfigure Physical Network Connectivity RequirementsDelete Physical Network Connectivity Requirements ","version":"Next","tagName":"h2"},{"title":"Add Virtual Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/add-virtual-net-connectivity-req copy","content":"Add Virtual Network Connectivity Requirements WIP","keywords":"","version":"Next"},{"title":"Physical Network Connectivity Prerequisites","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/physical-net-connectivity-prereq","content":"","keywords":"","version":"Next"},{"title":"Set up the Physical Layer​","type":1,"pageTitle":"Physical Network Connectivity Prerequisites","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/physical-net-connectivity-prereq#set-up-the-physical-layer","content":" For connectivity using virtual networks, see VLAN Connectivity.  The physical layer comprises the switches and patch panels that actually connect your blueprint's resources to one another. When setting up these components, the administrator needs to define each L1 switch and patch panel's connectivity options, ports, etc. For additional information, see the following sections:  L1 SwitchesPatch Panels  ","version":"Next","tagName":"h2"},{"title":"Related Topics​","type":1,"pageTitle":"Physical Network Connectivity Prerequisites","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-physical-network/physical-net-connectivity-prereq#related-topics","content":" Physical Network ConnectivityAdd Physical Network Connectivity Requirements ","version":"Next","tagName":"h2"},{"title":"Virtual Network Connectivity","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network","content":"","keywords":"","version":"Next"},{"title":"Related Topics​","type":1,"pageTitle":"Virtual Network Connectivity","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network#related-topics","content":" Virtual Network Connectivity PrerequisitesView Virtual Network Connectivity RequirementsAdd Virtual Network Connectivity RequirementsConfigure Virtual Network Connectivity RequirementsDelete Virtual Network Connectivity RequirementsApps Overview ","version":"Next","tagName":"h2"},{"title":"Delete Virtual Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/delete-virtual-conn-req","content":"Delete Virtual Network Connectivity Requirements WIP","keywords":"","version":"Next"},{"title":"View Virtual Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/view-virtual-net-connectivity-req","content":"","keywords":"","version":"Next"},{"title":"Related Topics​","type":1,"pageTitle":"View Virtual Network Connectivity Requirements","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/view-virtual-net-connectivity-req#related-topics","content":" Apps Overview ","version":"Next","tagName":"h2"},{"title":"Virtual Network Connectivity Prerequisites","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/virtual-net-connectivity-prereq","content":"","keywords":"","version":"Next"},{"title":"Set up virtual network services​","type":1,"pageTitle":"Virtual Network Connectivity Prerequisites","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/virtual-net-connectivity-prereq#set-up-virtual-network-services","content":" For connectivity, Apps and deployed Apps require a VLAN or Subnet service, which knows how to resolve the virtual connections Apps use. VLAN services resolve L2 connections involving private cloud Apps and/or resources, such as vCenter, while Subnet services resolve connections between Apps on a public cloud, such as AWS EC2 and Azure. Therefore, before you start creating connectivity requirements involving Apps, make sure your virtual network services are properly set up. VLANs can also be used to connect physical resources.  For additional information, see VLAN Connectivity or Subnet Connectivity.  ","version":"Next","tagName":"h2"},{"title":"Define the deployed App families and models​","type":1,"pageTitle":"Virtual Network Connectivity Prerequisites","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/virtual-net-connectivity-prereq#define-the-deployed-app-families-and-models","content":" Once deployed, Apps transform into resources that can have an IP address of the deployed virtual machine. Every deployed App resource inherits properties and behaviors from the data model of the Shell on which it is based. CloudShell provides the Generic Deployed App family and model, which you can use, but you can define your own families and models.  For additional information, see Defining the Resource Data Model.  ","version":"Next","tagName":"h2"},{"title":"Related Topics​","type":1,"pageTitle":"Virtual Network Connectivity Prerequisites","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/virtual-net-connectivity-prereq#related-topics","content":" Apps Overview ","version":"Next","tagName":"h2"},{"title":"Connections Legend","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/connections-legend","content":"Connections Legend WIP","keywords":"","version":"Next"},{"title":"Add Instructions","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-instructions","content":"Add Instructions WIP","keywords":"","version":"Next"},{"title":"Configure Virtual Network Connectivity Requirements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-connectivity/add-virtual-network/config-virtual-conn-req","content":"Configure Virtual Network Connectivity Requirements WIP","keywords":"","version":"Next"},{"title":"Edit an App's Details in the Blueprint","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/apps/edit-app-in-blueprint","content":"Edit an App's Details in the Blueprint WIP","keywords":"","version":"Next"},{"title":"Delete an App From the Blueprint","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/apps/remove-app-from-blueprint","content":"Delete an App From the Blueprint WIP","keywords":"","version":"Next"},{"title":"Add User Inputs","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/add-user-inputs","content":"Add User Inputs WIP","keywords":"","version":"Next"},{"title":"Blueprint Development Best Practices","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/blueprint-dev-best-practices","content":"Blueprint Development Best Practices In this article, we'll cover the recommended basic flow for blueprint development. This includes developing the blueprint in a draft, which is only visible to the blueprint's owner and permitted editors. To develop a blueprint: Create or modify a blueprint. To modify an existing blueprint, we recommend you make a copy of the blueprint or export it locally for backup. tip If you are fixing a faulty blueprint, make sure the blueprint is private. We don't want anyone using it before it is ready. From the Blueprint menu, select Create a Draft to enter Draft mode. A blueprint draft is a private branch of the blueprint that is only accessible to the blueprint's permitted users. You can view, edit, and reserve the draft. The draft is identified by several indicators: The blueprint name has a trailing &quot;1&quot;.The Blueprint menu and canvas captions change to Blueprint Draft.A toolbar button appears next to the Reserve button (highlighted in red). Click it to switch between the regular blueprint and the draft version. Update the blueprint as appropriate. To allow others to contribute or check the draft, add them as permitted editors. To access drafts that you are permitted to access in the domain, in the Blueprint Catalog, select the Draft blueprint status, click the tile of the suitable blueprint and switch to the draft. You can also delete the draft if you made some unwanted changes to the blueprint and prefer to start over (Blueprint Draft &gt; Delete). When the blueprint is ready, from the Blueprint Draft menu, select Promote and click OK in the pop window to merge the draft with the original blueprint. Make sure the blueprint is public and in the right blueprint categories.","keywords":"","version":"Next"},{"title":"Reset an App's Settings in the Blueprint (Refresh From Template)","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/apps/reset-app-settings","content":"Reset an App's Settings in the Blueprint (Refresh From Template) WIP","keywords":"","version":"Next"},{"title":"View the Apps Catalog in the Blueprint","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/apps/view-apps-catalog","content":"View the Apps Catalog in the Blueprint WIP","keywords":"","version":"Next"},{"title":"Add an App to the Blueprint","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/apps/add-app-to-blueprint","content":"Add an App to the Blueprint WIP","keywords":"","version":"Next"},{"title":"Configure Blueprint Orchestration","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/configure-orchestration","content":"Configure Blueprint Orchestration WIP","keywords":"","version":"Next"},{"title":"Define the Blueprint's Properties","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/blueprint-properties","content":"Define the Blueprint's Properties WIP","keywords":"","version":"Next"},{"title":"Check Blueprint","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/check-blueprint","content":"Check Blueprint WIP","keywords":"","version":"Next"},{"title":"Check Blueprint Routes","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/check-blueprint-routes","content":"Check Blueprint Routes WIP","keywords":"","version":"Next"},{"title":"Create a Blueprint","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/create-blueprint","content":"Create a Blueprint WIP","keywords":"","version":"Next"},{"title":"Duplicate a Blueprint (Save A Copy)","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/duplicate-blueprint","content":"Duplicate a Blueprint (Save A Copy) WIP","keywords":"","version":"Next"},{"title":"Exporting a Blueprint Package","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/export-blueprints/export-a-package","content":"Exporting a Blueprint Package WIP","keywords":"","version":"Next"},{"title":"Create Blueprint Commands","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/create-blueprint-commands","content":"Create Blueprint Commands WIP","keywords":"","version":"Next"},{"title":"Labels","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/labels","content":"Labels WIP","keywords":"","version":"Next"},{"title":"Name your Blueprint","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/name-your-blueprint","content":"Name your Blueprint WIP","keywords":"","version":"Next"},{"title":"Import a Blueprint Package into CloudShell","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/import-package","content":"Import a Blueprint Package into CloudShell WIP","keywords":"","version":"Next"},{"title":"Exporting Diagrams and Connections","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/export-blueprints/export-diagram","content":"","keywords":"","version":"Next"},{"title":"Exporting Diagrams​","type":1,"pageTitle":"Exporting Diagrams and Connections","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/export-blueprints/export-diagram#exporting-diagrams","content":" This topic describes how to export a PDF file illustrating the diagram. This includes the resources, services and Apps in the diagram, as well as their connections.  note Labels are not included.  To export a diagram:  In CloudShell Portal, select the required blueprint. Click the Blueprint menu and select Export Diagram (pdf). Save the package zip file in the required location. Open the PDF and verify that the diagram appears as expected. When exporting large diagrams, some components and/or connection lines may be missing. This is because the time allocated for the export is too short. The time defined for the diagram export is controlled by the ExportToPdf.WaitForRender admin configuration key.  ","version":"Next","tagName":"h2"},{"title":"Exporting Connections​","type":1,"pageTitle":"Exporting Diagrams and Connections","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/export-blueprints/export-diagram#exporting-connections","content":" This topic describes how to export a CSV file of the connections between the resources, services and Apps in the diagram.  To export the connections files:  In CloudShell Portal, select the required blueprint.Click the Blueprint menu and select Export Connections (csv).Save the CSV file in the required location. ","version":"Next","tagName":"h2"},{"title":"Add Resources","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/resources/add-resources","content":"Add Resources WIP","keywords":"","version":"Next"},{"title":"Configure Sub-resources","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/resources/configure-sub-resources","content":"Configure Sub-resources WIP","keywords":"","version":"Next"},{"title":"Find Resources","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/resources/find-resources","content":"Find Resources WIP","keywords":"","version":"Next"},{"title":"Remove Resources","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/resources/remove-resources","content":"Remove Resources WIP","keywords":"","version":"Next"},{"title":"Share Reserved Resources","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/resources/share-reserved-resources","content":"Share Reserved Resources WIP","keywords":"","version":"Next"},{"title":"Update Resource Attributes","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/resources/update-resource-attr","content":"Update Resource Attributes WIP","keywords":"","version":"Next"},{"title":"Replace with Abstract Resources","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/resources/replace-with-abstract","content":"Replace with Abstract Resources WIP","keywords":"","version":"Next"},{"title":"Create Template from Blueprint (Save As Template)","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/save-as-template","content":"Create Template from Blueprint (Save As Template) WIP","keywords":"","version":"Next"},{"title":"Services","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/services","content":"Services WIP","keywords":"","version":"Next"},{"title":"Set the Blueprint's Privacy (Public / Private)","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/creating-blueprints/set-blueprint-privacy","content":"Set the Blueprint's Privacy (Public / Private) WIP","keywords":"","version":"Next"},{"title":"Opening Blueprints","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/blueprints/opening-blueprints","content":"","keywords":"","version":"Next"},{"title":"Opening a blueprint from the Blueprint Catalog​","type":1,"pageTitle":"Opening Blueprints","url":"/cloudshell-help/next/portal/blueprints/opening-blueprints#opening-a-blueprint-from-the-blueprint-catalog","content":" To open a blueprint from the Blueprint Catalog:  In CloudShell Portal, access the blueprint's domain. Click the Blueprints menu. The blueprints you are permitted to access are displayed. Click the tile of the blueprint. The blueprint's workspace is displayed.  ","version":"Next","tagName":"h2"},{"title":"Opening a blueprint link​","type":1,"pageTitle":"Opening Blueprints","url":"/cloudshell-help/next/portal/blueprints/opening-blueprints#opening-a-blueprint-link","content":" To allow CloudShell users to conveniently share and collaborate on blueprints and sandboxes, we implemented support for opening blueprint and sandbox URLs in the diagram's domain, even if CloudShell Portal is currently open in a different domain. This option is enabled by default and can be disabled using the AutoSwitchDomain admin key.  note Since blueprint URLs do not include the blueprint's domain, the URLs need to be generated using the GetTopologyUrls API method, which includes this information in the link. The method is available in the CloudShell Automation API and TestShell API.  To open a blueprint link:  Click the blueprint link. CloudShell opens the blueprint workspace, prompting you to first log in to CloudShell Portal or switch to the blueprint's domain, if needed.  ","version":"Next","tagName":"h2"},{"title":"Related Topics​","type":1,"pageTitle":"Opening Blueprints","url":"/cloudshell-help/next/portal/blueprints/opening-blueprints#related-topics","content":" Opening Sandboxes ","version":"Next","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/inventory/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/job-scheduling/example","content":"empty page","keywords":"","version":"Next"},{"title":"CloudShell Portal Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview","content":"CloudShell Portal Overview The CloudShell Portal web client allows you to model your lab's physical and virtual devices and deliver these assets to your teams in a self-service catalog. This includes: Modeling physical devices and cloud-based applicationsCreating offline environment blueprints and publish them in a self-service catalogReserving blueprints on demandRunning hardware testing (using the Job Scheduling add-on)Business insights and analytics on inventory and resource usage","keywords":"","version":"Next"},{"title":"Changing the Language in CloudShell Portal","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/change-language","content":"Changing the Language in CloudShell Portal This article explains how to change the display language of CloudShell Portal. This requires the CloudShell administrator to set up language files with the updated captions and texts, as explained in Customizing the Language File. note By default, CloudShell Portal opens in the browser's default language. However, this action changes the default CloudShell Portal language for the logged in user, and applies to all web browsers. To change the language in CloudShell Portal: Log in to CloudShell Portal. From the user menu, click Select Language and select the suitable language. note The Select Language option is only visible if multiple language files exist. For example: CloudShell Portal is updated accordingly.","keywords":"","version":"Next"},{"title":"Creating and Using Shells in CloudShell","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/end-to-end-wf/create-shell","content":"Creating and Using Shells in CloudShell This article explains the end-to-end flow for creating and using Shells in CloudShell. For layer 1 switch Shells, see L1 Switches. To create and use a Shell: Check for a suitable OOTB Shell in the Quali Repositories page.If a suitable Shell exists, import the Shell into CloudShell, as explained in Importing Shells, and proceed to step 6.If you find a Shell but need to extend or change it, see CloudShell Dev Guide's Customizing Shells.If a suitable Shell doesn't exist, create a new Shell from our standard pool: Install Shellfoundry - see Installing or Updating Shellfoundry in the CloudShell Dev Guide. Associate CloudShell to Shellfoundry - see Configuring CloudShell Connection Settings in the CloudShell Dev Guide. Get a list of all available standard templates - see Setting the Standard in the CloudShell Dev Guide. Every standard has a dedicated GitHub repo with documentation to help you find the Shell that is most suitable for the type of resource you want to model. To see our standards, click here. Create a new Shell from a suitable template and name it after the device's model - see Setting the Standard. Package and import the Shell into CloudShell's inventory - see Packaging and importing a Shell into CloudShell in the CloudShell Dev Guide.Create new CloudShell items as appropriate - see Adding Inventory Resources.For layer 2 switch resources, model the switch's connections in CloudShell - see Define the Resource Connections of the Switch or Patch Panel.","keywords":"","version":"Next"},{"title":"Consuming Sandboxes as Part of Continuous Integration Workflows","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/end-to-end-wf/consume-sandbox","content":"Consuming Sandboxes as Part of Continuous Integration Workflows This article explains the end-to-end flow for integrating CloudShell with your Continuous Integration (CI) tool. This integration offers considerable time savings by automating the running and verification of your automation processes and tests through CloudShell sandboxes. note You may need to collaborate with different people in your organization to complete some of these tasks. To integrate CloudShell with your CI tool: Install the desired CloudShell CI plugin on your CI tool. Official CloudShell CI plugins such as Jenkins and TeamCity are available in Quali Repositories. Configure the CloudShell connection details on your CI tool, as explained in the plugin's documentation. Design a blueprint that suits your CI process. Make sure the blueprint's Setup script includes all the automation that is required for the test. For details, see CloudShell Dev Guide's CloudShell's OOB Orchestration.In addition, the CI tool must wait for the sandbox's setup process to complete before running the test. Note that CloudShell's Default Sandbox Setup script provides this functionality. Create your first build in the CI tool, as detailed in the plugin's documentation. This includes specifying the blueprint's name, duration, inputs, and any optional details, as appropriate. note CloudShell CI plugins only work with public blueprints. tip Use the Stop Sandbox functionality that is provided by the CloudShell CI plugin to automatically free up your sandbox's resources once the automation process or test completes. Run the build to make sure that it works. Make sure the CI tool waits for the sandbox's setup process to complete before running the test. This is done automatically by Setup scripts that are based on CloudShell's Default Sandbox Setup script. Make sure a new sandbox is created in CloudShell with the specified configurations. Add your custom automation process or test to the CI build, using your preferred plugin language. The CloudShell CI plugin populates the sandbox's details in the build so it can be used in your automation process or test. Rerun your build to verify the end-to-end flow. Now that the build is fully configured, you can add it to your CI workflow and monitor the results.","keywords":"","version":"Next"},{"title":"Modeling Public Cloud Services in CloudShell","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/end-to-end-wf/model-public-cloud","content":"Modeling Public Cloud Services in CloudShell In some scenarios, you may want to model a public cloud service or a SaaS product in the sandbox. For example: Modeling an AWS caching service as an element in a sandboxModeling a Salesforce service to allow retrieving Salesforce information in sandbox orchestration. In this scenario, the Salesforce service doesn’t have to be an element in any sandbox. This is done by creating a CloudShell service shell that contains all the relevant attributes, automation and logic required to access and use the cloud service. For this purpose, we’ve created the Cloud Service Shell Standard, which provides the framework for implementing support for cloud services. To create a cloud service: Create a service shell using the gen2/cloud-service shell template. See Creating a Shell from a template. Add the relevant automation and attributes. See Customizing Shells. Package and install the shell on CloudShell. See Packaging and importing a Shell into CloudShell. Expose the shell to the relevant domains. See Associating categories to a service shell. Optionally, set up orchestration scripts, which will use the shell’s commands, and add them to the relevant blueprints. See Getting Started with Orchestration Scripts. note It is also possible to create an admin-only service that is hidden from regular users in the sandbox. For this purpose, we created the gen2/admin-only-custom-service shell template.","keywords":"","version":"Next"},{"title":"Implementing Configuration Management in CloudShell","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/end-to-end-wf/implement-config-management","content":"Implementing Configuration Management in CloudShell This article explains the end-to-end flow for implementing configuration management in CloudShell Apps. For detailed information and implementation examples, see the CloudShell Dev Guide's Developing Configuration Management Scripts for Apps chapter. To implement configuration management: For Ansible configuration management, make sure you have a compatible execution server running on a Linux computer - see Configure Execution Server for Ansible. Develop the configuration management script or playbook - see Adding App templates. Make sure it's compatible with CloudShell App deployment by running an App with the custom script or playbook, and fixing any issues that arise. note To run configuration management on a Windows VM, the VM must have WinRM enabled. See Enable WinRM on Windows VMs to Support Configuration Management.","keywords":"","version":"Next"},{"title":"Logging into CloudShell","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/logging-in","content":"Logging into CloudShell This article explains how to log in to CloudShell Portal. To log into CloudShell: In the desktop, click the CloudShell Portal icon. CloudShell Portal opens in the default browser. note If your own application's login screen is displayed, logging in with your own user will grant you access to CloudShell. In the CloudShell login screen, enter your user login credentials. If you do not have any of the required details, contact your CloudShell administrator. Parameter\tDescriptionUsername\tYour CloudShell user login name. Password\tYour login password. Click Login. If this is your first time logging in to CloudShell Portal with this user from this computer, select your desired timezone and again click Login. The timezone details are stored for subsequent logins and can be checked and/or modified in the User Menu in CloudShell Portal. For more information, see Changing the time zone.","keywords":"","version":"Next"},{"title":"Navigating the Self-Service Portal","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/navigating","content":"Navigating the Self-Service Portal The Self-Service Portal, or CloudShell Portal, displays the pages, catalogs and dashboards you are permitted to access in the top left side of the page. Here you can create and manage your CloudShell blueprints, resources and their connections. The following image illustrates the main areas of the CloudShell Portal. For additional information, hover over each area in the image or see the table below. The main areas of the page are as follows: Area\tDescription1\tSearch\tRun a free text search for items in the catalog or dashboard. 2\tPage Navigation\tSwitch between dashboards and catalogs that are related to the page. For example, in the Blueprint Catalog, you can switch to the Sandboxes dashboard. 3\tFilters\tUse the filters to find items matching specific criteria. 4\tMenu bar\tThe menu bar has links to the pages you are permitted to access. 5\tDashboard header\tThe dashboard header tells you which page you are in and may include additional filtering/display options. 6\tMain work area\tThis is where you view and manage the items that are relevant for the dashboard. For example, sandboxes in the sandboxes dashboard and the organization's resources in the Inventory dashboard. 7\tUser menu\tUse this menu to perform user-related actions including logoff, change password and time zone, and import a blueprint package. 8\tDomain menu\tSwitch domains you are permitted to access. 9\tOnline help files\tHelp: Click to see the current CloudShell version and open the online help. 10\tGuided tours\tTutorials: Click to familiarize yourself with the CloudShell Portal via guided tours.","keywords":"","version":"Next"},{"title":"Touring the Self-Service Portal","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/touring-the-portal","content":"Touring the Self-Service Portal Use the Tutorials option to familiarize yourself with CloudShell Portal via guided tours. CloudShell Portal includes some basic out-of the-box web tour (tutorial) templates (for the Blueprints Catalog, Blueprint workspace, and Sandboxes dashboard). These web tours can be used as is, or customized as required by administrators, who can also create new custom tours, as described in Managing CloudShell Portal Tours. Once a tour is configured, you can launch it in CloudShell Portal. If auto-start has been configured, the tutorial will automatically launch when the relevant CloudShell page is opened for the first time in the session. To view CloudShell Portal tours: From the Tutorials menu, select a tour from the list. The Tutorials menu shows all the available tours that have been defined for your specific CloudShell Portal. The relevant tour launches. Click Next to proceed through the tour. Click End Tour to exit the tour when done","keywords":"","version":"Next"},{"title":"Defining the Self-Service Portal Settings","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/overview/portal-settings","content":"","keywords":"","version":"Next"},{"title":"Changing the time zone​","type":1,"pageTitle":"Defining the Self-Service Portal Settings","url":"/cloudshell-help/next/portal/overview/portal-settings#changing-the-time-zone","content":" To switch to another time zone:  From the User menu, select the location item and select a new one from the context menu.  ","version":"Next","tagName":"h2"},{"title":"Switching domains​","type":1,"pageTitle":"Defining the Self-Service Portal Settings","url":"/cloudshell-help/next/portal/overview/portal-settings#switching-domains","content":" Every user must be associated with a group and a domain.  The installation wizard provides a user migration tool that associates users who are currently not part of any domain with a new or existing domain.  Users not associated with any domain will not be able to access the portal.  To switch to another domain:  In the menu bar, click the domain name and select a different one from the context menu. note Only permitted domains are available.  ","version":"Next","tagName":"h2"},{"title":"Changing your email address​","type":1,"pageTitle":"Defining the Self-Service Portal Settings","url":"/cloudshell-help/next/portal/overview/portal-settings#changing-your-email-address","content":" You can change your email address in the CloudShell Portal in order to receive email notifications about your Sandboxes, job scheduling, and so on. This option is enabled using the ChangeEmailEnabled key.  To change your email:  From the User menu, select Change Email. The Change Email dialog box opens, displaying (when relevant) the currently registered email address in the read-only Current Email field. Type your New Email address. Click Save. The new email address is updated. The settings are also updated in Resource Manager.  ","version":"Next","tagName":"h2"},{"title":"Changing your password​","type":1,"pageTitle":"Defining the Self-Service Portal Settings","url":"/cloudshell-help/next/portal/overview/portal-settings#changing-your-password","content":" This option is enabled by default but can be disabled using the ChangePasswordEnabled key.  To change your password:  From the User menu, select Change Password. In the Change Password dialog box, enter the required details and click Save.  ","version":"Next","tagName":"h2"},{"title":"Resetting your password​","type":1,"pageTitle":"Defining the Self-Service Portal Settings","url":"/cloudshell-help/next/portal/overview/portal-settings#resetting-your-password","content":" Note that this option needs to be enabled by your administrator, as explained in Enabling password reset.  If you forgot your password, click the Forgot your password? link in the login page to reset your password. The system will send an email with a link for resetting your password.  ","version":"Next","tagName":"h2"},{"title":"Logging off​","type":1,"pageTitle":"Defining the Self-Service Portal Settings","url":"/cloudshell-help/next/portal/overview/portal-settings#logging-off","content":" To log-off from the portal:  From the User menu, select Logoff. ","version":"Next","tagName":"h2"},{"title":"Quickstart Guide - Creating Sandboxes","type":0,"sectionRef":"#","url":"/cloudshell-help/next/quick-start/create-sandbox","content":"","keywords":"","version":"Next"},{"title":"Basic flow​","type":1,"pageTitle":"Quickstart Guide - Creating Sandboxes","url":"/cloudshell-help/next/quick-start/create-sandbox#basic-flow","content":" Using CloudShell, setting up the test environment is simple:  Browse the Blueprint Catalog.Reserve a blueprint.  ","version":"Next","tagName":"h2"},{"title":"Browse the Blueprint Catalog​","type":1,"pageTitle":"Quickstart Guide - Creating Sandboxes","url":"/cloudshell-help/next/quick-start/create-sandbox#browse-the-blueprint-catalog","content":" The Blueprint Catalog displays all your blueprints as well as any public blueprints in the current domain. This is where users browse for their desired blueprint and reserve it.  To open the Blueprint Catalog:  Log into CloudShell Portal and switch to the desired domain. For example: Click the Blueprints menu to display the self-service Blueprint Catalog. Tip: To see only your blueprints, select the Owned by me filter on the left. Browse the Blueprint Catalog. Feel free to click a blueprint’s tile to look inside. Look at the blueprint’s instructions. They should provide additional details about the blueprint and how to use it.  ","version":"Next","tagName":"h2"},{"title":"Reserve a blueprint​","type":1,"pageTitle":"Quickstart Guide - Creating Sandboxes","url":"/cloudshell-help/next/quick-start/create-sandbox#reserve-a-blueprint","content":" By reserving a blueprint, you create a live instance (or sandbox) of the blueprint’s environment. The reservation process allocates the ports that are involved in the resource connections and if they are defined as unshared, no one else can use them while the sandbox is active.  To reserve a blueprint:  In the Blueprint Catalog or workspace, click Reserve. In the Reserve dialog box, you can optionally modify the reservation details. For example, change the duration of the sandbox or schedule it to run in the future, or click the Advanced Form () to add permitted users so others can see and use the sandbox even if it’s private, and more. Click Reserve to start the sandbox. The setup process should take a few minutes. During this time, CloudShell will provision the required resources, allocate the ports and create the connections between the resources. The sandbox’s state changes to Active, notifying you that it’s ready for use. You can now use the sandbox. For example, connect to a device or application that was deployed in the sandbox, run commands by hovering over a resource and clicking the Commands button, check the Output console for sandbox messages and indications, and more.  ","version":"Next","tagName":"h2"},{"title":"Troubleshooting​","type":1,"pageTitle":"Quickstart Guide - Creating Sandboxes","url":"/cloudshell-help/next/quick-start/create-sandbox#troubleshooting","content":" Resources catalog  If you can’t find the resources you are looking for in the Add Resource catalog, use the advanced search or expand the resource folders in the catalog. If you still can’t find the resources, check the Inventory dashboard as the resources may be excluded. If that’s the case, contact the administrator.  Reserve form  When reserving the blueprint, the conflict resolution dialog box may be displayed if any of your resources or ports are currently being used in other sandboxes AND are defined as unshared. If this happens, the dialog box will propose alternative timeslots in which the blueprint’s resources are all available. If you’re the blueprint designer, you could replace one of the conflicting resources with an available one.  Setup process  If the setup process encounters any errors, click the Activity button to review the reservation’s log for errors and consult the administrator. ","version":"Next","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/sandboxes/example","content":"empty page","keywords":"","version":"Next"},{"title":"Quickstart Guide - Creating and Reserving Blueprints","type":0,"sectionRef":"#","url":"/cloudshell-help/next/quick-start/creating-reserving","content":"","keywords":"","version":"Next"},{"title":"Basic flow​","type":1,"pageTitle":"Quickstart Guide - Creating and Reserving Blueprints","url":"/cloudshell-help/next/quick-start/creating-reserving#basic-flow","content":" Using CloudShell, setting up the test environment is simple:  Create a blueprint.Add resources and model L1 connections.Define the blueprint's properties.  ","version":"Next","tagName":"h2"},{"title":"Create a blueprint​","type":1,"pageTitle":"Quickstart Guide - Creating and Reserving Blueprints","url":"/cloudshell-help/next/quick-start/creating-reserving#create-a-blueprint","content":" A blueprint is an offline container of the environment you would like to spin up. It contains the environment’s components and network connections, as well as any required automation scripts. The use of blueprints allows you to repeatedly launch the same pristine environment.  To create a blueprint:  In the Blueprint Catalog, click the Create Blueprint link in the top left corner. In the blueprint’s workspace, specify a name for the blueprint and click the check mark when you’re done. If you want other members of your domain to also see and use this blueprint, click the Lock button in the blue banner to unlock privacy. Next, let’s add resources and their network connections.  ","version":"Next","tagName":"h2"},{"title":"Add resources to the blueprint​","type":1,"pageTitle":"Quickstart Guide - Creating and Reserving Blueprints","url":"/cloudshell-help/next/quick-start/creating-reserving#add-resources-to-the-blueprint","content":" Resources are our way of calling your devices in CloudShell. Each resource models a specific device in your lab, like a router, switch, DUT or bridge, and allows you to control that device or perform operations on it, from within CloudShell.  Don’t worry, the CloudShell admin already set those up for you. All you need to do is drag the ones you need into your blueprint and set up their network connections.  To add resources to the blueprint.  In the blueprint workspace, click Resources. From the Add Resource catalog, drag the resources you need into the canvas. Our catalog has two resources, DUT and Traffic Generator, but you can use the free text search field or Advanced search to fine tune your search if you have a lot of resources. Each new blueprint includes CloudShell's out-of-the-box orchestration scripts that set up and tear down the environment. The Setup script provisions the resources to the sandbox, resolves reservation conflicts, deploys App VMs and establishes connections between the sandbox's endpoints. The Teardown script is activated when the sandbox starts its teardown process and is responsible for releasing the resources, removing connections and deletes App VMs and related infrastructure from their cloud provider.  ","version":"Next","tagName":"h2"},{"title":"Set up connectivity​","type":1,"pageTitle":"Quickstart Guide - Creating and Reserving Blueprints","url":"/cloudshell-help/next/quick-start/creating-reserving#set-up-connectivity","content":" CloudShell also allows you to model the actual network connections between the blueprint’s devices. When you reserve the blueprint, CloudShell will create the connections for you.  To set up connectivity between 2 resources:  Hover over a resource and select the Create Connection option. Then, click the other resource. In the Resource Connections dialog box, from the Connection Type dropdown list, select Route (Logical) to create a L1 connection or Connector for a L2 connection. Select a port on the source resource and one on the target and click Add. Repeat this step to add additional connection routes. Click Save. Physical routes are represented by black dotted lines between the resources, as illustrated in the image below. Notes: If a connection route is purple, that’s because you defined a Connector type of a connection. This is used for L2 connections and will fail unless you have an L2 resource orvCenter dvSwitch connecting the endpoints. Edit the route connection to open the Resource Connections dialog box, click the Inventory tab in the dialog box, delete the connections and create new ones.If you defined an L1 connection in the blueprint but the connection line is orange, that’s because there’s no L1 switch resource connecting the endpoints. Notify the administrator. At this point, they’re just connection requirements. When the sandbox starts, CloudShell will activate the connections, replacing the dotted lines with solid ones. The blueprint is now ready for use. Next, let’s learn how to reserve a blueprint so we can run our test.  ","version":"Next","tagName":"h2"},{"title":"Define the blueprint's properties​","type":1,"pageTitle":"Quickstart Guide - Creating and Reserving Blueprints","url":"/cloudshell-help/next/quick-start/creating-reserving#define-the-blueprints-properties","content":" ","version":"Next","tagName":"h2"},{"title":"Orchestration scripts​","type":1,"pageTitle":"Quickstart Guide - Creating and Reserving Blueprints","url":"/cloudshell-help/next/quick-start/creating-reserving#orchestration-scripts","content":" CloudShell provides out-of-the-box setup and teardown orchestration scripts which are attached to every new blueprint, but you’re welcome to create your own custom scripts, as explained in Creating and using orchestration scripts in CloudShell.  The out-of-the-box scripts do the following:  CloudShell Sandbox Setup: Make sure sandbox resource are available (conflict resolution), reserve resources, deploy Apps on their defined cloud providers and establish connectionsCloudShell Sandbox Teardown: Release resources, tear down Apps (delete deployed VMs and related infrastructure from the cloud provider) and remove connections.Save/Restore: Used to save the memory, state and configurations of sandboxes and later on restore them back ","version":"Next","tagName":"h3"},{"title":"Quickstart Guide - CloudShell Installation and Initial Setup","type":0,"sectionRef":"#","url":"/cloudshell-help/next/quick-start/install-and-setup","content":"","keywords":"","version":"Next"},{"title":"Basic flow​","type":1,"pageTitle":"Quickstart Guide - CloudShell Installation and Initial Setup","url":"/cloudshell-help/next/quick-start/install-and-setup#basic-flow","content":" Using CloudShell, setting up the test environment is simple:  Install CloudShell.Set up users, groups and domains.Create resources, services and Apps.Check your work.  ","version":"Next","tagName":"h2"},{"title":"Install CloudShell​","type":1,"pageTitle":"Quickstart Guide - CloudShell Installation and Initial Setup","url":"/cloudshell-help/next/quick-start/install-and-setup#install-cloudshell","content":" CloudShell suite contains several basic components and optional add-ons that provide additional capabilities.  The basic components are:  CloudShell Portal: CloudShell's web portal that allows end users to reserve blueprints on demand from a self-service catalog, and enables admins and designers to administer CloudShell and create blueprints.Quali Server: Processes requests, manages and shares data/resources with CloudShell clients (Portal, APIs, etc.) from the CloudShell databases (MySQL, MongoDB).Execution Server: CloudShell component that executes commands and tests. Multiple execution servers can be installed for distributed provisioning.  Make sure the machine(s) that will host CloudShell comply with our CloudShell System Requirements. info CloudShell’s servers and clients can coexist on the same machine, but for load/performance reasons, you might want to consider installing high-load components such as Quali Server, CloudShell Portal and the Execution Servers on dedicated machines. Install and configure CloudShell suite. For details, see CloudShell Suite Installation Overview. You can also install CloudShell in a High Availability configuration. We highly recommend using CloudShell’s Insight, our BI platform. Insight is provided free of charge with out-of-the-box resource utilization and activity dashboards, but can be customized as a paid add-on. For details, see CloudShell Insight BI. You might also want to install and configure QualiX Overview, to allow your sandbox end-users to remotely connect to the sandbox’s devices and VMs from the browser, without needing the machine’s credentials nor an RDP or SSH client.  ","version":"Next","tagName":"h2"},{"title":"Optionally set up users, groups and domains​","type":1,"pageTitle":"Quickstart Guide - CloudShell Installation and Initial Setup","url":"/cloudshell-help/next/quick-start/install-and-setup#optionally-set-up-users-groups-and-domains","content":" Depending on your organization, you might want to set up domains for your different teams or sites. A domain is basically a space that includes the resources, Apps and blueprints that apply to a specific team, project or geographically-distributed site in your organization, and the users that belong to that team or site.  Groups are the link that connects users to a domain. Each group has a role, which is delegated to that group’s members in the domain. As such, you could have a single user with different roles in different domains. That user could be a “regular user” in one domain but a “domain admin” in another.  This diagram illustrates how users, groups and domains work together:    ","version":"Next","tagName":"h2"},{"title":"Related Topics​","type":1,"pageTitle":"Quickstart Guide - CloudShell Installation and Initial Setup","url":"/cloudshell-help/next/quick-start/install-and-setup#related-topics","content":" Adding DomainsManaging CloudShell GroupsManaging CloudShell Users  ","version":"Next","tagName":"h3"},{"title":"Create Resources and Apps​","type":1,"pageTitle":"Quickstart Guide - CloudShell Installation and Initial Setup","url":"/cloudshell-help/next/quick-start/install-and-setup#create-resources-and-apps","content":" Now's a good time to start populating your inventory with resources, Apps and services, which the blueprint designers can later add to their blueprints. For details on how to create these components, see the related topics section that follows.  Each one of these components is based on a shell, which is a plugin that defines how the component will behave in the sandbox. A shell models a specific component, so if we want to create a Juniper switch, we’ll need a Juniper switch shell and to deploy or load a Google Cloud VM, we’ll need a shell that can do that. To quickly see how CloudShell works, we recommend using our PUT and Traffic Generator mock shells.  CloudShell supports 4 types of components:  Resource models an actual physical or virtual device. It could be a layer 2 Cisco switch or some existing virtual appliance on the cloud that you’d like to load into CloudShell. Feel free to use our PUT Shell Mock and Traffic Shell Mock resources.App is the definition of virtual application to be deployed as part of the sandbox. It defines the VM to be deployed and configuration management script or playbook that will install the application(s) on top of the VM. Apps live in the context of a sandbox and when the sandbox ends, CloudShell’s teardown script will also delete the VM from the cloud.Service is a sandbox component that injects some code into the sandbox. It could be used to register to a cloud-based service like a traffic generator on Azure.Abstract resource is a component that includes the settings you need from a specific resource. When the blueprint is reserved, CloudShell finds a matching resource in the CloudShell inventory and puts it in the blueprint instead of the abstract. Abstract resources provide the blueprint with additional flexibility and can also be used in combination with other resources.  note Quali has a vibrant developer’s community that is continuously developing new shells. Please browse it to see if we already have the shell you need. If we don’t, feel free to create or extend an existing shell, or propose a shell in our Idea box.  ","version":"Next","tagName":"h2"},{"title":"Related Topics​","type":1,"pageTitle":"Quickstart Guide - CloudShell Installation and Initial Setup","url":"/cloudshell-help/next/quick-start/install-and-setup#related-topics-1","content":" Shells OverviewResources OverviewApps OverviewServices OverviewAbstract Resources OverviewMigrating 1st Gen Shells to 2nd Gen  ","version":"Next","tagName":"h3"},{"title":"Check components​","type":1,"pageTitle":"Quickstart Guide - CloudShell Installation and Initial Setup","url":"/cloudshell-help/next/quick-start/install-and-setup#check-components","content":" Now that you've set up your domains, inventory and Apps, it's time to make sure everything's in working order:  Make sure the users you created can connect to their domains and have the appropriate permissions. For example, domain admins should have access to the Manage dashboard and be able to create/edit resources in the Inventory dashboard. Make sure the domains include the right components: Log into a domain as a regular user. Create a blueprint. Open the Resource and Service/App catalogs and make sure the appropriate resources are available. If any resources are missing, make sure you created them in the right domain. Apps are exposed to domains via a service category that is attached to the Apps. Make sure the service category is associated to the right domain(s). Add some resources/Apps to the blueprint and reserve. Make sure the sandbox 's setup process completes successfully. When the sandbox is active, its resources should appear reserved in the Inventory dashboard and the Apps should be deployed. ","version":"Next","tagName":"h2"},{"title":"Behavior Changes and Removed Capabilities","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/behavior-change","content":"","keywords":"","version":"Next"},{"title":"Behavior Changes​","type":1,"pageTitle":"Behavior Changes and Removed Capabilities","url":"/cloudshell-help/next/release-notes/behavior-change#behavior-changes","content":" The following list includes changes in behavior introduced into CloudShell by version:  Capability\tChange Description\tChanged in ReleaseErlang version\tTo accomodate the upgraded RabbitMQ version (3.12.0) explained in Breaking Changes, Erlang will be upgraded to newer version 25.2.3. This version is the maximum supported Erlang for RabbitMq 3.12.0. Environment variables will be updated accordingly to suite the new Erlang version.\t2023.2 EA Python versions\tIn 2022.1, we updated CloudShell's Python versions as follows: 2.7.10 to 2.7.183.7.1 to 3.9.9 This may cause unexpected behavior if your automation is constrained to use specific Python versions.\t2022.1 EA API tokens\tTo increase security and to allow time-based token access to the system, CloudShell 2022.1 generates a time-based token for our product APIs. In previous versions, only some of the APIs used such a system. By default, the token validity period is 5 hours. Notes: For security reasons, we recommend upgrading to the latest version of CloudShell. Existing automation code utilizing Quali API may need to be updated to regenerate a token whenever an existing token expires. 2022.1 EA Reserve form\tThe Blueprint Name field in the Reserve form is no longer editable.\t2022.1 EA New Job Scheduling\tIn this CloudShell version, the Test Execution Servers use Robot Framework 4.0. As such, tests using an older version of the framework might not work as expected. For details, see this section in the Robot Framework 4.0 release notes.\t2022.1 EA Updated BI dashboards\tThe following out-of-the-box dashboards will be replaced by the new 2021.2 GA version (customized out-of-the-box dashboards will be left as is): Blueprints, Inventory, Sandboxes, Users, and Utilization. Viewer access is provided out-of-the-box, allowing CloudShell users to view and use the dashboards. Initial configuration, as well as the ability to add/customize dashboards and use legacy versions requires privileged access. For details, contact your Quali Account Manager.\t2021.2 GA New Job Scheduling\tFor security reasons, the Mongo deployment is no longer accessible outside the Kubernetes cluster and as a result does not get an external IP. However, external access can easily be configured using the externalAccess tag n the mongodb section of the customer-values-yaml. For details, see Upgrade Considerations for New Job Scheduling.\t2021.2 EA New Job Scheduling\tBefore upgrading from an earlier version, make sure to run the following on the Kubernetes client machine: kubectl delete secret cloudshell-acr -n cloudshell 2021.2 EA New Job Scheduling\tJob Scheduling Service needs to be restarted after 2021.2 EA upgrade. This only applies to 2021.2 EA version and will be fixed for the GA.\t2021.2 EA Blocking the option to link license pool to global domain\tWhen a user tries to attach a license pool to the Global domain they will now get a message stating that pools can't be associated with the global domain. This does not apply to existing associations of license pools with Global domain.\t2021.2 EA Periods no longer supported in abstract resource names\tAbstract resource names no longer support '.' (period) characters. Furthermore, importing blueprints will replace periods with underscores '_' in abstract resource names.\t2020.2 New CloudShell installation prerequisites\tAs of version 2020.2 we are moving some of our Sandbox related data to be managed and stored in Mongo DB instead of SQL Server. This allows CloudShell to drastically improve its performance, allowing hundreds of Sandbox reservation per minute. 2 new prerequisites are installed on Quali Sever: MongoDB RabbitMQ Quali Server's Installation Wizard and QsConfig have gone through some changes. New screens and some updated to existing screens have been added to the flow.\t2020.2 GA DB optimizations clean-ups\tData expiration is defined by default to be saved indefinitely. Admins can now define the time to keep sandbox event log data via the SandboxLogAndOutputSaveDuration configuration key.\t2020.2 GA &quot;In Use&quot; Sandbox overtime\tWhen using Job Scheduling, sandboxes will now end once all tests in the job are completed or the sandbox reaches its defined duration (the earlier of the two). This applies also to sandboxes that include L1 switches or use an ActivateTopology APImethod.\t9.3 GA Patch 5  ","version":"Next","tagName":"h2"},{"title":"Breaking Changes​","type":1,"pageTitle":"Behavior Changes and Removed Capabilities","url":"/cloudshell-help/next/release-notes/behavior-change#breaking-changes","content":" The following list includes capabilities that have been removed from CloudShell and the version number in which the change was introduced.  Capability\tChange Description\tChanged in ReleaseRabbitMQ upgrade and new location\tThe embedded RabbitMQ will be upgraded to version 3.12.0 and relocated from …\\Cloudshell\\Server\\SandboxService\\RabbitMq\\rabbitmq_server\\ to …\\Cloudsell\\Server\\Rabbit. Any custom settings like password must be manually relocated to the new destination files. Previous versions of RabbitMQ can be uninistalled.\t2023.2 EA Partial search in sandboxes dashboard\tThe Sandboxes dashboard does not support searching by partial sandbox id.\t2021.2 EA Blueprint Build Type - Deprecation\tIt is no longer possible to reserve blueprints of type Build.\t2020.2 GA Licensing\tAs of version 9.3, customers that have a Team Tier license will not be able to: 1. Have more than 50 concurrent licenses 2. Use white labeling 3. SSO to the system 9.3 GA Licensing\tCustomers that will not have a job scheduling add-on license will not see the job scheduling tab in the portal, and will not be able to start jobs using API calls.\t9.3 GA ","version":"Next","tagName":"h2"},{"title":"Bugs Fixed","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/bug-fixes","content":"Bugs Fixed The table below lists all the bugs reported by customers, that were resolved in version 2023.2. All releases may include additional resolved issues, which are not included in this list. Support Case #\tInternal WI #\tDescription\tFixed in Version55499\t12371\tSandbox Setup failed and returned the following error: &quot;General Execution. Failed to start execution: Server is unavailable&quot;\t2023.2 55312\t12262\tResources in blueprint are not displayed if there are too many sub-resources\t2023.2 54496\t12239\tSuite fails with &quot;does not have sufficient permissions to be the sandbox owner&quot;.\t2023.2 54315\t12027\tCloudShell installation granted elevated privileges to Authenticated Users. The elevated privileges are rolled back automatically by the installation process when they're no longer needed.\t2023.2 52848\t10909\tNaming convention for New Job Scheduling suite executions is different from the old Job Scheduling\t2023.2 52321\t9975\tCannot delete deployed app after cloud provider resource has been deleted\t2023.2 53004\t10403\tHandled an infrequent error in Testshell, which would cause tools to fail unexpectedly, and in particular would cause session-based tools to exit unexpectedly.\t2023.1 50993\t9357\tCopying sandbox data to clipboard would fail if certain characters were present in the data. For example '/n'.\t2023.1 53222\t10700\tCould not delete blueprint with resources containing attribute changes\t2023.1 52650\t10238\tCable Physical connection did not displayed properly\t2023.1 52767\t10442\tGetReservationDetails would not show attributes for Apps, if they were attributes for a logical resource and were still with the default value.\t2023.1 53180\t10617\tProvide API capability to modify permitted editors on blueprints (In rare cases, calling GetTopologyDetails would fail with an unreadable error message)\t2023.1 53470\t10829\t(Old and New Job Scheduling) Blueprint reservations were delayed by 5 minutes and as a result could not schedule test runs (CloudShell erroneously identified some of the blueprint's resources as being reserved, causing the tests to fail on reservation conflicts)\t2023.1 52803\t10126\t(New Job Scheduling) Job execution got Automatically Canceled because test was not found\t2023.1","keywords":"","version":"Next"},{"title":"General Announcements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/general-announcments","content":"","keywords":"","version":"Next"},{"title":"vSphere 6.5 and 6.7 End of Support​","type":1,"pageTitle":"General Announcements","url":"/cloudshell-help/next/release-notes/general-announcments#vsphere-65-and-67-end-of-support","content":" vSphere 6.7. x (ESXi 6.7) are entering End of General Support on 15th October 2022. As such, starting with CloudShell 2023.2, the OVAs of our execution servers and CloudShell SDK will be vSphere 7-compatible only. ","version":"Next","tagName":"h2"},{"title":"Known Limitations","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/known-limitations","content":"Known Limitations This section describes known limitations of CloudShell , as well as possible workarounds for these issues when available.","keywords":"","version":"Next"},{"title":"Supported CloudShell Versions","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/supported-versions","content":"Supported CloudShell Versions CloudShell offers two support phases: Premier Support Phase: This phase begins from the release of a version and lasts for 18 months from the release date. During this phase, customers are entitled to full support services for this version including any hotfixes or patches.Extended Support Phase: This phase applies to all releases that are 18 - 30 months from their original release date. During this phase, customers are entitled to all support services apart from bug fixes on those releases. Bugs that are found in versions that are in the Extended Support phase may be fixed in later versions and customers will be asked to upgrade to a version that is then in its Premier support phase. Note: Quali continues to support releases under the extended support plan. However, bugs found on these versions may only be fixed in later releases. Quali does not provide any technical assistance or fixes for releases that reached end of support. This is the time to make sure that you have upgraded to the latest available CloudShell release. Release\tGA Version release date\tEnd of Premier support (18 months)\tEnd of Extended support (30 months)2023.2\tJuly 2023\tFeb 1, 2025\tFeb 1, 2026 2023.1\tMarch 2023\tOct 1, 2024\tOct 1, 2025 2022.2\tSeptember 2022\tApr 1, 2024\tApr 1, 2025 2022.1\tFebruary 2022\tSept 1, 2023\tSept 1, 2024 2021.2\tAugust 2021\tJan 1, 2023\tJan 1, 2024 2021.1\tApril 2021\tNov 1, 2022\tNov 1, 2023 2020.2\tOctober 2020\tMay 1, 2022\tMay 1, 2023 2020.1\tJune 2020\tJan 1, 2022\tJan 1, 2023 9.3\tSeptember 2019\tApr 1, 2021\tApr 1, 2022 9.2\tMay 2019\tDec 1, 2020\tDec 1, 2021 9.1\tJanuary 2019\tAug 1 2020\tAug 1, 2021 9.0\tSeptember 2018\tApril 1, 2020\tApr 1, 2021 8.3\tApril 2018\tNov 1, 2019\tNov 1, 2020 8.2\tDecember 2017\tJuly 1, 2019\tJuly 1, 2020 8.1\tAugust 2017\tMarch 1, 2019\tMarch 1, 2020","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/version-history/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/troubleshooting/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/admin/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/api-guide/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"What's New in Version 2023.2","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/whats-new","content":"","keywords":"","version":"Next"},{"title":"Version 1.1 updates​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#version-11-updates","content":" ","version":"Next","tagName":"h2"},{"title":"QualiX 5.0​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#qualix-50","content":" We're happy to announce the release of QualiX 5.0. Based on Apache Guacamole 1.5.3, this new version of QualiX includes a streamlined QualiX-over-Docker deployment process that allows you to automate SSL and advanced post-deployment configurations as part of the installation process, and updated RDP/SSH/VNC/Telnet dependencies. Upgrade procedures for existing QualiX over Docker/OVAinstallatoins are available.  For details, see Deploy QualiX 5.0 and up Using Docker.  ","version":"Next","tagName":"h3"},{"title":"Features and enhancements​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#features-and-enhancements","content":" This release includes the following features and enhancements.  ","version":"Next","tagName":"h2"},{"title":"HTTPSsupport for Training Portal​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#httpssupport-for-training-portal","content":" For enhanced security, the CloudShell Training Portal can be configured to run over HTTPS. For details, see Setting up Training Portal Using the Installer (Over the Shoulder).  ","version":"Next","tagName":"h3"},{"title":"Allow shell update to override old/deprecated attributes​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#allow-shell-update-to-override-olddeprecated-attributes","content":" It is now possible to configure shells to automatically remove old deprecated attributes whenever the CloudShell admin updates the shell in the Manage &gt; Shells page. For details, see Overriding Old/Deprecated Shell Attributes.  ","version":"Next","tagName":"h3"},{"title":"Support for MongoDB 6.0.4​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#support-for-mongodb-604","content":" CloudShell's setup process provides a MongoDB 6.0.4 installer for new customers, while existing customers will need to upgrade their MongoDB installation manually, as explained in How to Upgrade MongoDB From 4.2 to 6.0.  ","version":"Next","tagName":"h3"},{"title":"Security enhancements and 3rd-party tool upgrades​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#security-enhancements-and-3rd-party-tool-upgrades","content":" Implemented support for MongoDB 6.0.4. New CloudShell installations come with version 6.0.4 installed by default, while existing CloudShell customers can upgrade to version 6.0.4 when upgrading to CloudShell 2023.2. We’ve updated the version of RabbitMQ (3.11.10) &amp; Erlang (25.2.3) ElasticSearch has been upgraded to 7.17.5  ","version":"Next","tagName":"h2"},{"title":"New and updated API methods​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#new-and-updated-api-methods","content":" New CloudShell Administration REST API for managing CloudShell domains, groups, users, license pools, and more. For details, see CloudShell Administration REST API. New APIs supporting organizing resources in blueprints and sandboxes: GetResourcesLabelsInTopology GetResourcesLabelsInReservation Added new methods to WebAPI endpoint and client for Cloudshell Automation API including: EndReservation CreateImmediateTopologyReservation CreateTopologyReservation GetUserDetails GetTopologyDetails FindResources GetResourceAvailabilityInTimeRange ConfigureAppsV2 GetReservationStatus GetCurrentReservations GetDomainDetails UpdateReservationDescription AddResourcesToReservation UpdateReservationGlobalInputs GetScheduledReservations GetResourceLiveStatus ExportFamiliesAndModels DeleteReservation GetServerDateAndTime UpdateResourceDescription UpdateResourceAddress ","version":"Next","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/devguide/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/install-configure/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"Apps Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/apps","content":"Apps Overview","keywords":"","version":"2023.2 GA"},{"title":"Abstract Resources Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/abstract","content":"","keywords":"","version":"2023.2 GA"},{"title":"What is an abstract resource?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/Introduction/features-and-concepts/abstract#what-is-an-abstract-resource","content":" An abstract resource is a component that allows CloudShell to add (to the sandbox) resources based on a set of requirements, such as resource model and/or specific attribute values. When reserving a blueprint that has an abstract resource, CloudShell will find resources that meet the resource requirements and are available for the time slot of the sandbox, and add them to the sandbox. You cannot add abstract resources directly to a sandbox, only to the blueprint. Blueprints can contain a mixture of abstract and specific resources.  An abstract resource is represented on the diagram as a resource with a dotted circle around it. For example:    ","version":"2023.2 GA","tagName":"h2"},{"title":"What does an abstract resource include?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/Introduction/features-and-concepts/abstract#what-does-an-abstract-resource-include","content":" An abstract resource must include the family of the resource, and can optionally include the following:  Requirements:  Requirements are the resource settings you need the desired resource to have. CloudShell will only select resources that fully match this criteria. You must select the resource family but you can include any combination of the rest of the requirements in your abstract resource.  Note: As you add or update your requirements, CloudShell updates the number of matching inventory resources in the top right corner of the abstract resource dialog box.  Family (mandatory)Quantity: number of resources to selectSharing policyModel: model or models within the selected familyAttribute valuesSub-resources: sub-resource settings, such as blades, ports, attribute values on each sub-resource  Additional info:  Additional info is information you can add to the abstract resource for automation processes and to make available for the sandbox end-user. For example, you may want to save the resource firmware version, which needs to be upgraded as part of the sandbox provisioning process. Another example could be referencing the image file location of the resource.  Attribute values  Domains:  The domains in which this abstract resource can be used. By default, the current domain is selected and cannot be removed from the abstract resource.  For additional information about Requirements, Additional info and Domains, see Abstract Resource Settings ","version":"2023.2 GA","tagName":"h2"},{"title":"CloudShell Terminology","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/terminology","content":"CloudShell Terminology this is some example text to make this the same higth","keywords":"","version":"2023.2 GA"},{"title":"CloudShell - Typical Use Cases","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/use-case","content":"","keywords":"","version":"2023.2 GA"},{"title":"Dev/Test (Environment as a Service)​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/Introduction/use-case#devtest-environment-as-a-service","content":" In this use case, CloudShell is used as a central location for different teams in the organization to consume sandboxes for their day-to-day development and testing activities, allowing for better exposure and utilization of physical and virtual infrastructure for different types of end users in a repeatable manner.  Applies to: Physical, virtual and hybrid environmentsTarget audience: Engineers, developers, architects, and anyone else who needs to develop or test against the organization's network, APIs, physical/cloud-hosted devices, and operating systems  ","version":"2023.2 GA","tagName":"h2"},{"title":"Demo/POC lab​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/Introduction/use-case#demopoc-lab","content":" Let's say you have a sales team that needs on demand environments for POCs or product demos at a prospective customer. The sales engineer could install the system on their laptop and make the necessary tweaks and configurations, but this takes time and will require involving IT staff. With CloudShell, the demo environments are prepared in advance and the sales person simply needs to schedule a reservation of the desired blueprint for the POC meeting and CloudShell will spin up the environment, running any pre-configured automation in the process. This also applies to support/QA engineers who need to reproduce a customer issue.  Applies to: Virtual cloud-based and hybrid environmentsTarget audience: Sales/support engineers  For example, blueprint that deploys a product suite, including front end server, DB and load balancing:   ","version":"2023.2 GA","tagName":"h2"},{"title":"CloudShell Features and Benefits","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/features-and-benefits","content":"CloudShell Features and Benefits Faster time to market: Easy-to-use drag-and-drop blueprint editor allows you to set up operational blueprints in minutes Python-based environment orchestration and provisioning Vibrant developer community containing growing number of open-source shells for 100s of physical devices, virtual appliances, private and public clouds Shells - Python-based plugins for discovering lab and cloud infrastructure More... Data modelDevice structureCommon, device-specific Day 2 actionsDrag and drop Application layer configuration management: Ability to apply configuration management to VM's OSand applicationsAbility to load configurations on device OS Ease of use: Web-based self-service portal and inventory catalogBlueprint reservation and scheduling, resource allocation management and conflict resolutionAPI and CI/CD tool integrations for DevOps, agile and continuous development processes Monitoring and control: Business insights and utilization reports More... Custom and out-of-the-box dashboards containing easy-to-understand graphs, charts and tables, providing business insights and actionable intelligence around infrastructure consumption and activity, managed identities and more. Resource inventory (resource/chassis/blade/port etc.), cloud infrastructure, sandbox consumption and licenses, user activity and moreEasy-to-use editor allows you to create and customize existing dashboards in minutes Robust inventory search mechanism for finding CloudShell resources based on different criteria In-browser access to resources using SSH, RDP and more Activity feed displaying real-time sandbox progress and activity messages, as well as errors Security and data integrity: HTTPS securityAbility to set cloud security policies across multi-cloud environmentsBlueprint-deployment approach ensuring data integritySiloed environmentsResource authentication credentials encrypted and accessible only to admins and/or delegated usersOption to isolate/share resources across multiple environments/domains High performance: Powerful sandbox-deployment mechanism supports the deployment of 100s of sandbox environments in parallelDistributed execution engines allowing for scale, latency mitigation and quick deliveryIntegration with leading CI/CD tools and technologies Multi-site deployments Domains - Set up site/team/project-specific deployments, with access to privileged users in the organization.Role-based access control, integration with Active Directory, SSO and more Test automation: High-performance test automation platform allows the deployment of 100s of jobs in parallelNative support for Robot FrameworkSupport for rapid execution of hundreds of test batches in parallelRESTful API for automation and integration with CI/CD tools","keywords":"","version":"2023.2 GA"},{"title":"CloudShell Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/overview","content":"CloudShell Overview CloudShell is a cloud automation platform that lets you deliver fully functional sandboxes over any combination of infrastructure, from legacy to public cloud, and eliminate resource conflicts. Creating an IT environment blueprint can be as simple as dragging the resources you need from the inventory and creating the connections between them. CloudShell significantly reduces blueprint configuration time (by automating the management of IT resources), offers clear visibility into your organization’s resources and their availability status, and optimizes resource use. With a robust data analysis and visualization engine, CloudShell provides you with business insights into your IT infrastructure, including health, consumption and availability data. CloudShell offers the following features and capabilities: Web-based self-service portal and catalogInventory managementIntegration with ANY infrastructure, private and public clouds, and industry-specific infrastructure both directly and via automation tools or APIsResource allocation management of exclusive/shared resources, conflict resolutionBlueprint modeling, easy-to-use editor with drag-and-drop capabilities allowing you to create operational blueprints in minutesReservation and schedulingNetworking: L1 (physical layer), L2 (VLAN) and L3 (subnet)Infrastructure automation, configuration management and environment orchestrationRole-based access control, Active Directory and SSO integrationGrowing developer community with technical developer forums and 100s of open-source integrations for leading clouds providers, devices, CI/CD tools, etc, providing accessibility, control and common day-2 actionsDistributed execution provisioning allowing for scale, latency mitigation and quick delivery Test automationBI reporting: Sandbox consumption and licenses, resource utilization, inventory, cloud usage, user activity, etcIn-browser access to resources using SSH, RDP and moreLive activity feed displaying real-time deployment activity messages, errors and warnings For details, see CloudShell Features and Benefits.","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/qna/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/portal/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/jss/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/troubleshooting/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"Manage Docs Versions","type":0,"sectionRef":"#","url":"/cloudshell-help/quick-start/creating-reserving","content":"","keywords":"","version":"2023.2 GA"},{"title":"Create a docs version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#create-a-docs-version","content":" Release a version 1.0 of your project:  npm run docusaurus docs:version 1.0   The docs folder is copied into versioned_docs/version-1.0 and versions.json is created.  Your docs now have 2 versions:  1.0 at http://localhost:3000/docs/ for the version 1.0 docscurrent at http://localhost:3000/docs/next/ for the upcoming, unreleased docs  ","version":"2023.2 GA","tagName":"h2"},{"title":"Add a Version Dropdown​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#add-a-version-dropdown","content":" To navigate seamlessly across versions, add a version dropdown.  Modify the docusaurus.config.js file:  The docs version dropdown appears in your navbar:  ","version":"2023.2 GA","tagName":"h2"},{"title":"Update an existing version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#update-an-existing-version","content":" It is possible to edit versioned docs in their respective folder:  versioned_docs/version-1.0/hello.md updates http://localhost:3000/docs/hellodocs/hello.md updates http://localhost:3000/docs/next/hello ","version":"2023.2 GA","tagName":"h2"},{"title":"Translate your site","type":0,"sectionRef":"#","url":"/cloudshell-help/quick-start/translate-your-site","content":"","keywords":"","version":"2023.2 GA"},{"title":"Configure i18n​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#configure-i18n","content":" Modify docusaurus.config.js to add support for the fr locale:  docusaurus.config.js export default { i18n: { defaultLocale: 'en', locales: ['en', 'fr'], }, };   ","version":"2023.2 GA","tagName":"h2"},{"title":"Translate a doc​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#translate-a-doc","content":" Copy the docs/intro.md file to the i18n/fr folder:  mkdir -p i18n/fr/docusaurus-plugin-content-docs/current/ cp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md   Translate i18n/fr/docusaurus-plugin-content-docs/current/intro.md in French.  ","version":"2023.2 GA","tagName":"h2"},{"title":"Start your localized site​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#start-your-localized-site","content":" Start your site on the French locale:  npm run start -- --locale fr   Your localized site is accessible at http://localhost:3000/fr/ and the Getting Started page is translated.  caution In development, you can only use one locale at a time.  ","version":"2023.2 GA","tagName":"h2"},{"title":"Add a Locale Dropdown​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#add-a-locale-dropdown","content":" To navigate seamlessly across languages, add a locale dropdown.  Modify the docusaurus.config.js file:   The locale dropdown now appears in your navbar: Build your site for a specific locale: ```bash npm run build -- --locale fr   Or build your site to include all the locales at once:  npm run build  ","version":"2023.2 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/version-history/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/release-notes/example","content":"empty page","keywords":"","version":"2023.2 GA"}],"options":{"highlightResult":true,"id":"default"}}