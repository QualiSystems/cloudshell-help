{"searchDocs":[{"title":"Welcome to CloudShell's Help Center","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA","content":"","keywords":"","version":"2023.1 GA"},{"title":"What is CloudShell?​","type":1,"pageTitle":"Welcome to CloudShell's Help Center","url":"/cloudshell-help/2023.1 GA#what-is-cloudshell","content":" Take a guided tour through CloudShell in this 6 minute video.  Quick video showing how to build hybrid environments containing lab equipment and cloud assets.Check out our Youtube channel for more ","version":"2023.1 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/admin/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/api-guide/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/devguide/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"Apps Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/apps","content":"Apps Overview","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/install-configure/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"Abstract Resources Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/abstract","content":"","keywords":"","version":"2023.1 GA"},{"title":"What is an abstract resource?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/abstract#what-is-an-abstract-resource","content":" An abstract resource is a component that allows CloudShell to add (to the sandbox) resources based on a set of requirements, such as resource model and/or specific attribute values. When reserving a blueprint that has an abstract resource, CloudShell will find resources that meet the resource requirements and are available for the time slot of the sandbox, and add them to the sandbox. You cannot add abstract resources directly to a sandbox, only to the blueprint. Blueprints can contain a mixture of abstract and specific resources.  An abstract resource is represented on the diagram as a resource with a dotted circle around it. For example:    ","version":"2023.1 GA","tagName":"h2"},{"title":"What does an abstract resource include?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/abstract#what-does-an-abstract-resource-include","content":" An abstract resource must include the family of the resource, and can optionally include the following:  Requirements:  Requirements are the resource settings you need the desired resource to have. CloudShell will only select resources that fully match this criteria. You must select the resource family but you can include any combination of the rest of the requirements in your abstract resource.  Note: As you add or update your requirements, CloudShell updates the number of matching inventory resources in the top right corner of the abstract resource dialog box.  Family (mandatory)Quantity: number of resources to selectSharing policyModel: model or models within the selected familyAttribute valuesSub-resources: sub-resource settings, such as blades, ports, attribute values on each sub-resource  Additional info:  Additional info is information you can add to the abstract resource for automation processes and to make available for the sandbox end-user. For example, you may want to save the resource firmware version, which needs to be upgraded as part of the sandbox provisioning process. Another example could be referencing the image file location of the resource.  Attribute values  Domains:  The domains in which this abstract resource can be used. By default, the current domain is selected and cannot be removed from the abstract resource.  For additional information about Requirements, Additional info and Domains, see Abstract Resource Settings ","version":"2023.1 GA","tagName":"h2"},{"title":"CloudShell Terminology","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/terminology","content":"CloudShell Terminology this is some example text to make this the same higth","keywords":"","version":"2023.1 GA"},{"title":"CloudShell Features and Benefits","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/features-and-concepts/features-and-benefits","content":"CloudShell Features and Benefits Faster time to market: Easy-to-use drag-and-drop blueprint editor allows you to set up operational blueprints in minutes Python-based environment orchestration and provisioning Vibrant developer community containing growing number of open-source shells for 100s of physical devices, virtual appliances, private and public clouds Shells - Python-based plugins for discovering lab and cloud infrastructure More... Data modelDevice structureCommon, device-specific Day 2 actionsDrag and drop Application layer configuration management: Ability to apply configuration management to VM's OSand applicationsAbility to load configurations on device OS Ease of use: Web-based self-service portal and inventory catalogBlueprint reservation and scheduling, resource allocation management and conflict resolutionAPI and CI/CD tool integrations for DevOps, agile and continuous development processes Monitoring and control: Business insights and utilization reports More... Custom and out-of-the-box dashboards containing easy-to-understand graphs, charts and tables, providing business insights and actionable intelligence around infrastructure consumption and activity, managed identities and more. Resource inventory (resource/chassis/blade/port etc.), cloud infrastructure, sandbox consumption and licenses, user activity and moreEasy-to-use editor allows you to create and customize existing dashboards in minutes Robust inventory search mechanism for finding CloudShell resources based on different criteria In-browser access to resources using SSH, RDP and more Activity feed displaying real-time sandbox progress and activity messages, as well as errors Security and data integrity: HTTPS securityAbility to set cloud security policies across multi-cloud environmentsBlueprint-deployment approach ensuring data integritySiloed environmentsResource authentication credentials encrypted and accessible only to admins and/or delegated usersOption to isolate/share resources across multiple environments/domains High performance: Powerful sandbox-deployment mechanism supports the deployment of 100s of sandbox environments in parallelDistributed execution engines allowing for scale, latency mitigation and quick deliveryIntegration with leading CI/CD tools and technologies Multi-site deployments Domains - Set up site/team/project-specific deployments, with access to privileged users in the organization.Role-based access control, integration with Active Directory, SSO and more Test automation: High-performance test automation platform allows the deployment of 100s of jobs in parallelNative support for Robot FrameworkSupport for rapid execution of hundreds of test batches in parallelRESTful API for automation and integration with CI/CD tools","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/jss/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"CloudShell Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/overview","content":"CloudShell Overview CloudShell is a cloud automation platform that lets you deliver fully functional sandboxes over any combination of infrastructure, from legacy to public cloud, and eliminate resource conflicts. Creating an IT environment blueprint can be as simple as dragging the resources you need from the inventory and creating the connections between them. CloudShell significantly reduces blueprint configuration time (by automating the management of IT resources), offers clear visibility into your organization’s resources and their availability status, and optimizes resource use. With a robust data analysis and visualization engine, CloudShell provides you with business insights into your IT infrastructure, including health, consumption and availability data. CloudShell offers the following features and capabilities: Web-based self-service portal and catalogInventory managementIntegration with ANY infrastructure, private and public clouds, and industry-specific infrastructure both directly and via automation tools or APIsResource allocation management of exclusive/shared resources, conflict resolutionBlueprint modeling, easy-to-use editor with drag-and-drop capabilities allowing you to create operational blueprints in minutesReservation and schedulingNetworking: L1 (physical layer), L2 (VLAN) and L3 (subnet)Infrastructure automation, configuration management and environment orchestrationRole-based access control, Active Directory and SSO integrationGrowing developer community with technical developer forums and 100s of open-source integrations for leading clouds providers, devices, CI/CD tools, etc, providing accessibility, control and common day-2 actionsDistributed execution provisioning allowing for scale, latency mitigation and quick delivery Test automationBI reporting: Sandbox consumption and licenses, resource utilization, inventory, cloud usage, user activity, etcIn-browser access to resources using SSH, RDP and moreLive activity feed displaying real-time deployment activity messages, errors and warnings For details, see CloudShell Features and Benefits.","keywords":"","version":"2023.1 GA"},{"title":"CloudShell - Typical Use Cases","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/Introduction/use-case","content":"","keywords":"","version":"2023.1 GA"},{"title":"Dev/Test (Environment as a Service)​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/2023.1 GA/Introduction/use-case#devtest-environment-as-a-service","content":" In this use case, CloudShell is used as a central location for different teams in the organization to consume sandboxes for their day-to-day development and testing activities, allowing for better exposure and utilization of physical and virtual infrastructure for different types of end users in a repeatable manner.  Applies to: Physical, virtual and hybrid environmentsTarget audience: Engineers, developers, architects, and anyone else who needs to develop or test against the organization's network, APIs, physical/cloud-hosted devices, and operating systems  ","version":"2023.1 GA","tagName":"h2"},{"title":"Demo/POC lab​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/2023.1 GA/Introduction/use-case#demopoc-lab","content":" Let's say you have a sales team that needs on demand environments for POCs or product demos at a prospective customer. The sales engineer could install the system on their laptop and make the necessary tweaks and configurations, but this takes time and will require involving IT staff. With CloudShell, the demo environments are prepared in advance and the sales person simply needs to schedule a reservation of the desired blueprint for the POC meeting and CloudShell will spin up the environment, running any pre-configured automation in the process. This also applies to support/QA engineers who need to reproduce a customer issue.  Applies to: Virtual cloud-based and hybrid environmentsTarget audience: Sales/support engineers  For example, blueprint that deploys a product suite, including front end server, DB and load balancing:   ","version":"2023.1 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/portal/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/release-notes/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/qna/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/troubleshooting/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"Welcome to CloudShell's Help Center","type":0,"sectionRef":"#","url":"/cloudshell-help/next","content":"","keywords":"","version":"Next"},{"title":"What is CloudShell?​","type":1,"pageTitle":"Welcome to CloudShell's Help Center","url":"/cloudshell-help/next#what-is-cloudshell","content":" Take a guided tour through CloudShell in this 6 minute video.  Quick video showing how to build hybrid environments containing lab equipment and cloud assets.Check out our Youtube channel for more ","version":"Next","tagName":"h2"},{"title":"Translate your site","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site","content":"","keywords":"","version":"2023.1 GA"},{"title":"Configure i18n​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site#configure-i18n","content":" Modify docusaurus.config.js to add support for the fr locale:  docusaurus.config.js export default { i18n: { defaultLocale: 'en', locales: ['en', 'fr'], }, };   ","version":"2023.1 GA","tagName":"h2"},{"title":"Translate a doc​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site#translate-a-doc","content":" Copy the docs/intro.md file to the i18n/fr folder:  mkdir -p i18n/fr/docusaurus-plugin-content-docs/current/ cp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md   Translate i18n/fr/docusaurus-plugin-content-docs/current/intro.md in French.  ","version":"2023.1 GA","tagName":"h2"},{"title":"Start your localized site​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site#start-your-localized-site","content":" Start your site on the French locale:  npm run start -- --locale fr   Your localized site is accessible at http://localhost:3000/fr/ and the Getting Started page is translated.  caution In development, you can only use one locale at a time.  ","version":"2023.1 GA","tagName":"h2"},{"title":"Add a Locale Dropdown​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/2023.1 GA/quick-start/translate-your-site#add-a-locale-dropdown","content":" To navigate seamlessly across languages, add a locale dropdown.  Modify the docusaurus.config.js file:   The locale dropdown now appears in your navbar: Build your site for a specific locale: ```bash npm run build -- --locale fr   Or build your site to include all the locales at once:  npm run build  ","version":"2023.1 GA","tagName":"h2"},{"title":"Manage Docs Versions","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/quick-start/creating-reserving","content":"","keywords":"","version":"2023.1 GA"},{"title":"Create a docs version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/2023.1 GA/quick-start/creating-reserving#create-a-docs-version","content":" Release a version 1.0 of your project:  npm run docusaurus docs:version 1.0   The docs folder is copied into versioned_docs/version-1.0 and versions.json is created.  Your docs now have 2 versions:  1.0 at http://localhost:3000/docs/ for the version 1.0 docscurrent at http://localhost:3000/docs/next/ for the upcoming, unreleased docs  ","version":"2023.1 GA","tagName":"h2"},{"title":"Add a Version Dropdown​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/2023.1 GA/quick-start/creating-reserving#add-a-version-dropdown","content":" To navigate seamlessly across versions, add a version dropdown.  Modify the docusaurus.config.js file:  The docs version dropdown appears in your navbar:  ","version":"2023.1 GA","tagName":"h2"},{"title":"Update an existing version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/2023.1 GA/quick-start/creating-reserving#update-an-existing-version","content":" It is possible to edit versioned docs in their respective folder:  versioned_docs/version-1.0/hello.md updates http://localhost:3000/docs/hellodocs/hello.md updates http://localhost:3000/docs/next/hello ","version":"2023.1 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/2023.1 GA/version-history/example","content":"empty page","keywords":"","version":"2023.1 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/admin/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/api-guide/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/devguide/example","content":"empty page","keywords":"","version":"Next"},{"title":"Abstract Resources Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/Introduction/features-and-concepts/abstract","content":"","keywords":"","version":"Next"},{"title":"What is an abstract resource?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/next/Introduction/features-and-concepts/abstract#what-is-an-abstract-resource","content":" An abstract resource is a component that allows CloudShell to add (to the sandbox) resources based on a set of requirements, such as resource model and/or specific attribute values. When reserving a blueprint that has an abstract resource, CloudShell will find resources that meet the resource requirements and are available for the time slot of the sandbox, and add them to the sandbox. You cannot add abstract resources directly to a sandbox, only to the blueprint. Blueprints can contain a mixture of abstract and specific resources.  An abstract resource is represented on the diagram as a resource with a dotted circle around it. For example:    ","version":"Next","tagName":"h2"},{"title":"What does an abstract resource include?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/next/Introduction/features-and-concepts/abstract#what-does-an-abstract-resource-include","content":" An abstract resource must include the family of the resource, and can optionally include the following:  Requirements:  Requirements are the resource settings you need the desired resource to have. CloudShell will only select resources that fully match this criteria. You must select the resource family but you can include any combination of the rest of the requirements in your abstract resource.  Note: As you add or update your requirements, CloudShell updates the number of matching inventory resources in the top right corner of the abstract resource dialog box.  Family (mandatory)Quantity: number of resources to selectSharing policyModel: model or models within the selected familyAttribute valuesSub-resources: sub-resource settings, such as blades, ports, attribute values on each sub-resource  Additional info:  Additional info is information you can add to the abstract resource for automation processes and to make available for the sandbox end-user. For example, you may want to save the resource firmware version, which needs to be upgraded as part of the sandbox provisioning process. Another example could be referencing the image file location of the resource.  Attribute values  Domains:  The domains in which this abstract resource can be used. By default, the current domain is selected and cannot be removed from the abstract resource.  For additional information about Requirements, Additional info and Domains, see Abstract Resource Settings ","version":"Next","tagName":"h2"},{"title":"CloudShell Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/Introduction/overview","content":"CloudShell Overview CloudShell is a cloud automation platform that lets you deliver fully functional sandboxes over any combination of infrastructure, from legacy to public cloud, and eliminate resource conflicts. Creating an IT environment blueprint can be as simple as dragging the resources you need from the inventory and creating the connections between them. CloudShell significantly reduces blueprint configuration time (by automating the management of IT resources), offers clear visibility into your organization’s resources and their availability status, and optimizes resource use. With a robust data analysis and visualization engine, CloudShell provides you with business insights into your IT infrastructure, including health, consumption and availability data. CloudShell offers the following features and capabilities: Web-based self-service portal and catalogInventory managementIntegration with ANY infrastructure, private and public clouds, and industry-specific infrastructure both directly and via automation tools or APIsResource allocation management of exclusive/shared resources, conflict resolutionBlueprint modeling, easy-to-use editor with drag-and-drop capabilities allowing you to create operational blueprints in minutesReservation and schedulingNetworking: L1 (physical layer), L2 (VLAN) and L3 (subnet)Infrastructure automation, configuration management and environment orchestrationRole-based access control, Active Directory and SSO integrationGrowing developer community with technical developer forums and 100s of open-source integrations for leading clouds providers, devices, CI/CD tools, etc, providing accessibility, control and common day-2 actionsDistributed execution provisioning allowing for scale, latency mitigation and quick delivery Test automationBI reporting: Sandbox consumption and licenses, resource utilization, inventory, cloud usage, user activity, etcIn-browser access to resources using SSH, RDP and moreLive activity feed displaying real-time deployment activity messages, errors and warnings For details, see CloudShell Features and Benefits.","keywords":"","version":"Next"},{"title":"CloudShell Features and Benefits","type":0,"sectionRef":"#","url":"/cloudshell-help/next/Introduction/features-and-concepts/features-and-benefits","content":"CloudShell Features and Benefits Faster time to market: Easy-to-use drag-and-drop blueprint editor allows you to set up operational blueprints in minutes Python-based environment orchestration and provisioning Vibrant developer community containing growing number of open-source shells for 100s of physical devices, virtual appliances, private and public clouds Shells - Python-based plugins for discovering lab and cloud infrastructure More... Data modelDevice structureCommon, device-specific Day 2 actionsDrag and drop Application layer configuration management: Ability to apply configuration management to VM's OSand applicationsAbility to load configurations on device OS Ease of use: Web-based self-service portal and inventory catalogBlueprint reservation and scheduling, resource allocation management and conflict resolutionAPI and CI/CD tool integrations for DevOps, agile and continuous development processes Monitoring and control: Business insights and utilization reports More... Custom and out-of-the-box dashboards containing easy-to-understand graphs, charts and tables, providing business insights and actionable intelligence around infrastructure consumption and activity, managed identities and more. Resource inventory (resource/chassis/blade/port etc.), cloud infrastructure, sandbox consumption and licenses, user activity and moreEasy-to-use editor allows you to create and customize existing dashboards in minutes Robust inventory search mechanism for finding CloudShell resources based on different criteria In-browser access to resources using SSH, RDP and more Activity feed displaying real-time sandbox progress and activity messages, as well as errors Security and data integrity: HTTPS securityAbility to set cloud security policies across multi-cloud environmentsBlueprint-deployment approach ensuring data integritySiloed environmentsResource authentication credentials encrypted and accessible only to admins and/or delegated usersOption to isolate/share resources across multiple environments/domains High performance: Powerful sandbox-deployment mechanism supports the deployment of 100s of sandbox environments in parallelDistributed execution engines allowing for scale, latency mitigation and quick deliveryIntegration with leading CI/CD tools and technologies Multi-site deployments Domains - Set up site/team/project-specific deployments, with access to privileged users in the organization.Role-based access control, integration with Active Directory, SSO and more Test automation: High-performance test automation platform allows the deployment of 100s of jobs in parallelNative support for Robot FrameworkSupport for rapid execution of hundreds of test batches in parallelRESTful API for automation and integration with CI/CD tools","keywords":"","version":"Next"},{"title":"Apps Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/next/Introduction/features-and-concepts/apps","content":"Apps Overview","keywords":"","version":"Next"},{"title":"CloudShell Terminology","type":0,"sectionRef":"#","url":"/cloudshell-help/next/Introduction/terminology","content":"CloudShell Terminology this is some example text to make this the same higth","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/install-configure/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/portal/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/jss/example","content":"empty page","keywords":"","version":"Next"},{"title":"CloudShell - Typical Use Cases","type":0,"sectionRef":"#","url":"/cloudshell-help/next/Introduction/use-case","content":"","keywords":"","version":"Next"},{"title":"Dev/Test (Environment as a Service)​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/next/Introduction/use-case#devtest-environment-as-a-service","content":" In this use case, CloudShell is used as a central location for different teams in the organization to consume sandboxes for their day-to-day development and testing activities, allowing for better exposure and utilization of physical and virtual infrastructure for different types of end users in a repeatable manner.  Applies to: Physical, virtual and hybrid environmentsTarget audience: Engineers, developers, architects, and anyone else who needs to develop or test against the organization's network, APIs, physical/cloud-hosted devices, and operating systems  ","version":"Next","tagName":"h2"},{"title":"Demo/POC lab​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/next/Introduction/use-case#demopoc-lab","content":" Let's say you have a sales team that needs on demand environments for POCs or product demos at a prospective customer. The sales engineer could install the system on their laptop and make the necessary tweaks and configurations, but this takes time and will require involving IT staff. With CloudShell, the demo environments are prepared in advance and the sales person simply needs to schedule a reservation of the desired blueprint for the POC meeting and CloudShell will spin up the environment, running any pre-configured automation in the process. This also applies to support/QA engineers who need to reproduce a customer issue.  Applies to: Virtual cloud-based and hybrid environmentsTarget audience: Sales/support engineers  For example, blueprint that deploys a product suite, including front end server, DB and load balancing:   ","version":"Next","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/qna/example","content":"empty page","keywords":"","version":"Next"},{"title":"Manage Docs Versions","type":0,"sectionRef":"#","url":"/cloudshell-help/next/quick-start/creating-reserving","content":"","keywords":"","version":"Next"},{"title":"Create a docs version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/next/quick-start/creating-reserving#create-a-docs-version","content":" Release a version 1.0 of your project:  npm run docusaurus docs:version 1.0   The docs folder is copied into versioned_docs/version-1.0 and versions.json is created.  Your docs now have 2 versions:  1.0 at http://localhost:3000/docs/ for the version 1.0 docscurrent at http://localhost:3000/docs/next/ for the upcoming, unreleased docs  ","version":"Next","tagName":"h2"},{"title":"Add a Version Dropdown​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/next/quick-start/creating-reserving#add-a-version-dropdown","content":" To navigate seamlessly across versions, add a version dropdown.  Modify the docusaurus.config.js file:  The docs version dropdown appears in your navbar:  ","version":"Next","tagName":"h2"},{"title":"Update an existing version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/next/quick-start/creating-reserving#update-an-existing-version","content":" It is possible to edit versioned docs in their respective folder:  versioned_docs/version-1.0/hello.md updates http://localhost:3000/docs/hellodocs/hello.md updates http://localhost:3000/docs/next/hello ","version":"Next","tagName":"h2"},{"title":"Behavior Changes and Removed Capabilities","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/behavior-change","content":"","keywords":"","version":"Next"},{"title":"Behavior Changes​","type":1,"pageTitle":"Behavior Changes and Removed Capabilities","url":"/cloudshell-help/next/release-notes/behavior-change#behavior-changes","content":" The following list includes changes in behavior introduced into CloudShell by version:  Capability\tChange Description\tChanged in ReleaseErlang version\tTo accomodate the upgraded RabbitMQ version (3.12.0) explained in Breaking Changes, Erlang will be upgraded to newer version 25.2.3. This version is the maximum supported Erlang for RabbitMq 3.12.0. Environment variables will be updated accordingly to suite the new Erlang version.\t2023.2 EA Python versions\tIn 2022.1, we updated CloudShell's Python versions as follows: 2.7.10 to 2.7.183.7.1 to 3.9.9 This may cause unexpected behavior if your automation is constrained to use specific Python versions.\t2022.1 EA API tokens\tTo increase security and to allow time-based token access to the system, CloudShell 2022.1 generates a time-based token for our product APIs. In previous versions, only some of the APIs used such a system. By default, the token validity period is 5 hours. Notes: For security reasons, we recommend upgrading to the latest version of CloudShell. Existing automation code utilizing Quali API may need to be updated to regenerate a token whenever an existing token expires. 2022.1 EA Reserve form\tThe Blueprint Name field in the Reserve form is no longer editable.\t2022.1 EA New Job Scheduling\tIn this CloudShell version, the Test Execution Servers use Robot Framework 4.0. As such, tests using an older version of the framework might not work as expected. For details, see this section in the Robot Framework 4.0 release notes.\t2022.1 EA Updated BI dashboards\tThe following out-of-the-box dashboards will be replaced by the new 2021.2 GA version (customized out-of-the-box dashboards will be left as is): Blueprints, Inventory, Sandboxes, Users, and Utilization. Viewer access is provided out-of-the-box, allowing CloudShell users to view and use the dashboards. Initial configuration, as well as the ability to add/customize dashboards and use legacy versions requires privileged access. For details, contact your Quali Account Manager.\t2021.2 GA New Job Scheduling\tFor security reasons, the Mongo deployment is no longer accessible outside the Kubernetes cluster and as a result does not get an external IP. However, external access can easily be configured using the externalAccess tag n the mongodb section of the customer-values-yaml. For details, see Upgrade Considerations for New Job Scheduling.\t2021.2 EA New Job Scheduling\tBefore upgrading from an earlier version, make sure to run the following on the Kubernetes client machine: kubectl delete secret cloudshell-acr -n cloudshell 2021.2 EA New Job Scheduling\tJob Scheduling Service needs to be restarted after 2021.2 EA upgrade. This only applies to 2021.2 EA version and will be fixed for the GA.\t2021.2 EA Blocking the option to link license pool to global domain\tWhen a user tries to attach a license pool to the Global domain they will now get a message stating that pools can't be associated with the global domain. This does not apply to existing associations of license pools with Global domain.\t2021.2 EA Periods no longer supported in abstract resource names\tAbstract resource names no longer support '.' (period) characters. Furthermore, importing blueprints will replace periods with underscores '_' in abstract resource names.\t2020.2 New CloudShell installation prerequisites\tAs of version 2020.2 we are moving some of our Sandbox related data to be managed and stored in Mongo DB instead of SQL Server. This allows CloudShell to drastically improve its performance, allowing hundreds of Sandbox reservation per minute. 2 new prerequisites are installed on Quali Sever: MongoDB RabbitMQ Quali Server's Installation Wizard and QsConfig have gone through some changes. New screens and some updated to existing screens have been added to the flow.\t2020.2 GA DB optimizations clean-ups\tData expiration is defined by default to be saved indefinitely. Admins can now define the time to keep sandbox event log data via the SandboxLogAndOutputSaveDuration configuration key.\t2020.2 GA &quot;In Use&quot; Sandbox overtime\tWhen using Job Scheduling, sandboxes will now end once all tests in the job are completed or the sandbox reaches its defined duration (the earlier of the two). This applies also to sandboxes that include L1 switches or use an ActivateTopology APImethod.\t9.3 GA Patch 5  ","version":"Next","tagName":"h2"},{"title":"Breaking Changes​","type":1,"pageTitle":"Behavior Changes and Removed Capabilities","url":"/cloudshell-help/next/release-notes/behavior-change#breaking-changes","content":" The following list includes capabilities that have been removed from CloudShell and the version number in which the change was introduced.  Capability\tChange Description\tChanged in ReleaseRabbitMQ upgrade and new location\tThe embedded RabbitMQ will be upgraded to version 3.12.0 and relocated from …\\Cloudshell\\Server\\SandboxService\\RabbitMq\\rabbitmq_server\\ to …\\Cloudsell\\Server\\Rabbit. Any custom settings like password must be manually relocated to the new destination files. Previous versions of RabbitMQ can be uninistalled.\t2023.2 EA Partial search in sandboxes dashboard\tThe Sandboxes dashboard does not support searching by partial sandbox id.\t2021.2 EA Blueprint Build Type - Deprecation\tIt is no longer possible to reserve blueprints of type Build.\t2020.2 GA Licensing\tAs of version 9.3, customers that have a Team Tier license will not be able to: 1. Have more than 50 concurrent licenses 2. Use white labeling 3. SSO to the system 9.3 GA Licensing\tCustomers that will not have a job scheduling add-on license will not see the job scheduling tab in the portal, and will not be able to start jobs using API calls.\t9.3 GA ","version":"Next","tagName":"h2"},{"title":"General Announcements","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/general-announcments","content":"","keywords":"","version":"Next"},{"title":"vSphere 6.5 and 6.7 End of Support​","type":1,"pageTitle":"General Announcements","url":"/cloudshell-help/next/release-notes/general-announcments#vsphere-65-and-67-end-of-support","content":" vSphere 6.7. x (ESXi 6.7) are entering End of General Support on 15th October 2022. As such, starting with CloudShell 2023.2, the OVAs of our execution servers and CloudShell SDK will be vSphere 7-compatible only. ","version":"Next","tagName":"h2"},{"title":"Bugs Fixed","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/bug-fixes","content":"Bugs Fixed The table below lists all the bugs reported by customers, that were resolved in version 2023.2. All releases may include additional resolved issues, which are not included in this list. Support Case #\tInternal WI #\tDescription\tFixed in Version55499\t12371\tSandbox Setup failed and returned the following error: &quot;General Execution. Failed to start execution: Server is unavailable&quot;\t2023.2 55312\t12262\tResources in blueprint are not displayed if there are too many sub-resources\t2023.2 54496\t12239\tSuite fails with &quot;does not have sufficient permissions to be the sandbox owner&quot;.\t2023.2 54315\t12027\tCloudShell installation granted elevated privileges to Authenticated Users. The elevated privileges are rolled back automatically by the installation process when they're no longer needed.\t2023.2 52848\t10909\tNaming convention for New Job Scheduling suite executions is different from the old Job Scheduling\t2023.2 52321\t9975\tCannot delete deployed app after cloud provider resource has been deleted\t2023.2 53004\t10403\tHandled an infrequent error in Testshell, which would cause tools to fail unexpectedly, and in particular would cause session-based tools to exit unexpectedly.\t2023.1 50993\t9357\tCopying sandbox data to clipboard would fail if certain characters were present in the data. For example '/n'.\t2023.1 53222\t10700\tCould not delete blueprint with resources containing attribute changes\t2023.1 52650\t10238\tCable Physical connection did not displayed properly\t2023.1 52767\t10442\tGetReservationDetails would not show attributes for Apps, if they were attributes for a logical resource and were still with the default value.\t2023.1 53180\t10617\tProvide API capability to modify permitted editors on blueprints (In rare cases, calling GetTopologyDetails would fail with an unreadable error message)\t2023.1 53470\t10829\t(Old and New Job Scheduling) Blueprint reservations were delayed by 5 minutes and as a result could not schedule test runs (CloudShell erroneously identified some of the blueprint's resources as being reserved, causing the tests to fail on reservation conflicts)\t2023.1 52803\t10126\t(New Job Scheduling) Job execution got Automatically Canceled because test was not found\t2023.1","keywords":"","version":"Next"},{"title":"Translate your site","type":0,"sectionRef":"#","url":"/cloudshell-help/next/quick-start/translate-your-site","content":"","keywords":"","version":"Next"},{"title":"Configure i18n​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/next/quick-start/translate-your-site#configure-i18n","content":" Modify docusaurus.config.js to add support for the fr locale:  docusaurus.config.js export default { i18n: { defaultLocale: 'en', locales: ['en', 'fr'], }, };   ","version":"Next","tagName":"h2"},{"title":"Translate a doc​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/next/quick-start/translate-your-site#translate-a-doc","content":" Copy the docs/intro.md file to the i18n/fr folder:  mkdir -p i18n/fr/docusaurus-plugin-content-docs/current/ cp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md   Translate i18n/fr/docusaurus-plugin-content-docs/current/intro.md in French.  ","version":"Next","tagName":"h2"},{"title":"Start your localized site​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/next/quick-start/translate-your-site#start-your-localized-site","content":" Start your site on the French locale:  npm run start -- --locale fr   Your localized site is accessible at http://localhost:3000/fr/ and the Getting Started page is translated.  caution In development, you can only use one locale at a time.  ","version":"Next","tagName":"h2"},{"title":"Add a Locale Dropdown​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/next/quick-start/translate-your-site#add-a-locale-dropdown","content":" To navigate seamlessly across languages, add a locale dropdown.  Modify the docusaurus.config.js file:   The locale dropdown now appears in your navbar: Build your site for a specific locale: ```bash npm run build -- --locale fr   Or build your site to include all the locales at once:  npm run build  ","version":"Next","tagName":"h2"},{"title":"Known Limitations","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/known-limitations","content":"Known Limitations This section describes known limitations of CloudShell , as well as possible workarounds for these issues when available.","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/troubleshooting/example","content":"empty page","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/next/version-history/example","content":"empty page","keywords":"","version":"Next"},{"title":"Supported CloudShell Versions","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/supported-versions","content":"Supported CloudShell Versions CloudShell offers two support phases: Premier Support Phase: This phase begins from the release of a version and lasts for 18 months from the release date. During this phase, customers are entitled to full support services for this version including any hotfixes or patches.Extended Support Phase: This phase applies to all releases that are 18 - 30 months from their original release date. During this phase, customers are entitled to all support services apart from bug fixes on those releases. Bugs that are found in versions that are in the Extended Support phase may be fixed in later versions and customers will be asked to upgrade to a version that is then in its Premier support phase. Note: Quali continues to support releases under the extended support plan. However, bugs found on these versions may only be fixed in later releases. Quali does not provide any technical assistance or fixes for releases that reached end of support. This is the time to make sure that you have upgraded to the latest available CloudShell release. Release\tGA Version release date\tEnd of Premier support (18 months)\tEnd of Extended support (30 months)2023.2\tJuly 2023\tFeb 1, 2025\tFeb 1, 2026 2023.1\tMarch 2023\tOct 1, 2024\tOct 1, 2025 2022.2\tSeptember 2022\tApr 1, 2024\tApr 1, 2025 2022.1\tFebruary 2022\tSept 1, 2023\tSept 1, 2024 2021.2\tAugust 2021\tJan 1, 2023\tJan 1, 2024 2021.1\tApril 2021\tNov 1, 2022\tNov 1, 2023 2020.2\tOctober 2020\tMay 1, 2022\tMay 1, 2023 2020.1\tJune 2020\tJan 1, 2022\tJan 1, 2023 9.3\tSeptember 2019\tApr 1, 2021\tApr 1, 2022 9.2\tMay 2019\tDec 1, 2020\tDec 1, 2021 9.1\tJanuary 2019\tAug 1 2020\tAug 1, 2021 9.0\tSeptember 2018\tApril 1, 2020\tApr 1, 2021 8.3\tApril 2018\tNov 1, 2019\tNov 1, 2020 8.2\tDecember 2017\tJuly 1, 2019\tJuly 1, 2020 8.1\tAugust 2017\tMarch 1, 2019\tMarch 1, 2020","keywords":"","version":"Next"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/api-guide/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/admin/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"What's New in Version 2023.2","type":0,"sectionRef":"#","url":"/cloudshell-help/next/release-notes/whats-new","content":"","keywords":"","version":"Next"},{"title":"Version 1.1 updates​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#version-11-updates","content":" ","version":"Next","tagName":"h2"},{"title":"QualiX 5.0​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#qualix-50","content":" We're happy to announce the release of QualiX 5.0. Based on Apache Guacamole 1.5.3, this new version of QualiX includes a streamlined QualiX-over-Docker deployment process that allows you to automate SSL and advanced post-deployment configurations as part of the installation process, and updated RDP/SSH/VNC/Telnet dependencies. Upgrade procedures for existing QualiX over Docker/OVAinstallatoins are available.  For details, see Deploy QualiX 5.0 and up Using Docker.  ","version":"Next","tagName":"h3"},{"title":"Features and enhancements​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#features-and-enhancements","content":" This release includes the following features and enhancements.  ","version":"Next","tagName":"h2"},{"title":"HTTPSsupport for Training Portal​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#httpssupport-for-training-portal","content":" For enhanced security, the CloudShell Training Portal can be configured to run over HTTPS. For details, see Setting up Training Portal Using the Installer (Over the Shoulder).  ","version":"Next","tagName":"h3"},{"title":"Allow shell update to override old/deprecated attributes​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#allow-shell-update-to-override-olddeprecated-attributes","content":" It is now possible to configure shells to automatically remove old deprecated attributes whenever the CloudShell admin updates the shell in the Manage &gt; Shells page. For details, see Overriding Old/Deprecated Shell Attributes.  ","version":"Next","tagName":"h3"},{"title":"Support for MongoDB 6.0.4​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#support-for-mongodb-604","content":" CloudShell's setup process provides a MongoDB 6.0.4 installer for new customers, while existing customers will need to upgrade their MongoDB installation manually, as explained in How to Upgrade MongoDB From 4.2 to 6.0.  ","version":"Next","tagName":"h3"},{"title":"Security enhancements and 3rd-party tool upgrades​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#security-enhancements-and-3rd-party-tool-upgrades","content":" Implemented support for MongoDB 6.0.4. New CloudShell installations come with version 6.0.4 installed by default, while existing CloudShell customers can upgrade to version 6.0.4 when upgrading to CloudShell 2023.2. We’ve updated the version of RabbitMQ (3.11.10) &amp; Erlang (25.2.3) ElasticSearch has been upgraded to 7.17.5  ","version":"Next","tagName":"h2"},{"title":"New and updated API methods​","type":1,"pageTitle":"What's New in Version 2023.2","url":"/cloudshell-help/next/release-notes/whats-new#new-and-updated-api-methods","content":" New CloudShell Administration REST API for managing CloudShell domains, groups, users, license pools, and more. For details, see CloudShell Administration REST API. New APIs supporting organizing resources in blueprints and sandboxes: GetResourcesLabelsInTopology GetResourcesLabelsInReservation Added new methods to WebAPI endpoint and client for Cloudshell Automation API including: EndReservation CreateImmediateTopologyReservation CreateTopologyReservation GetUserDetails GetTopologyDetails FindResources GetResourceAvailabilityInTimeRange ConfigureAppsV2 GetReservationStatus GetCurrentReservations GetDomainDetails UpdateReservationDescription AddResourcesToReservation UpdateReservationGlobalInputs GetScheduledReservations GetResourceLiveStatus ExportFamiliesAndModels DeleteReservation GetServerDateAndTime UpdateResourceDescription UpdateResourceAddress ","version":"Next","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/devguide/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/install-configure/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"CloudShell Features and Benefits","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/features-and-benefits","content":"CloudShell Features and Benefits Faster time to market: Easy-to-use drag-and-drop blueprint editor allows you to set up operational blueprints in minutes Python-based environment orchestration and provisioning Vibrant developer community containing growing number of open-source shells for 100s of physical devices, virtual appliances, private and public clouds Shells - Python-based plugins for discovering lab and cloud infrastructure More... Data modelDevice structureCommon, device-specific Day 2 actionsDrag and drop Application layer configuration management: Ability to apply configuration management to VM's OSand applicationsAbility to load configurations on device OS Ease of use: Web-based self-service portal and inventory catalogBlueprint reservation and scheduling, resource allocation management and conflict resolutionAPI and CI/CD tool integrations for DevOps, agile and continuous development processes Monitoring and control: Business insights and utilization reports More... Custom and out-of-the-box dashboards containing easy-to-understand graphs, charts and tables, providing business insights and actionable intelligence around infrastructure consumption and activity, managed identities and more. Resource inventory (resource/chassis/blade/port etc.), cloud infrastructure, sandbox consumption and licenses, user activity and moreEasy-to-use editor allows you to create and customize existing dashboards in minutes Robust inventory search mechanism for finding CloudShell resources based on different criteria In-browser access to resources using SSH, RDP and more Activity feed displaying real-time sandbox progress and activity messages, as well as errors Security and data integrity: HTTPS securityAbility to set cloud security policies across multi-cloud environmentsBlueprint-deployment approach ensuring data integritySiloed environmentsResource authentication credentials encrypted and accessible only to admins and/or delegated usersOption to isolate/share resources across multiple environments/domains High performance: Powerful sandbox-deployment mechanism supports the deployment of 100s of sandbox environments in parallelDistributed execution engines allowing for scale, latency mitigation and quick deliveryIntegration with leading CI/CD tools and technologies Multi-site deployments Domains - Set up site/team/project-specific deployments, with access to privileged users in the organization.Role-based access control, integration with Active Directory, SSO and more Test automation: High-performance test automation platform allows the deployment of 100s of jobs in parallelNative support for Robot FrameworkSupport for rapid execution of hundreds of test batches in parallelRESTful API for automation and integration with CI/CD tools","keywords":"","version":"2023.2 GA"},{"title":"Apps Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/apps","content":"Apps Overview","keywords":"","version":"2023.2 GA"},{"title":"CloudShell Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/overview","content":"CloudShell Overview CloudShell is a cloud automation platform that lets you deliver fully functional sandboxes over any combination of infrastructure, from legacy to public cloud, and eliminate resource conflicts. Creating an IT environment blueprint can be as simple as dragging the resources you need from the inventory and creating the connections between them. CloudShell significantly reduces blueprint configuration time (by automating the management of IT resources), offers clear visibility into your organization’s resources and their availability status, and optimizes resource use. With a robust data analysis and visualization engine, CloudShell provides you with business insights into your IT infrastructure, including health, consumption and availability data. CloudShell offers the following features and capabilities: Web-based self-service portal and catalogInventory managementIntegration with ANY infrastructure, private and public clouds, and industry-specific infrastructure both directly and via automation tools or APIsResource allocation management of exclusive/shared resources, conflict resolutionBlueprint modeling, easy-to-use editor with drag-and-drop capabilities allowing you to create operational blueprints in minutesReservation and schedulingNetworking: L1 (physical layer), L2 (VLAN) and L3 (subnet)Infrastructure automation, configuration management and environment orchestrationRole-based access control, Active Directory and SSO integrationGrowing developer community with technical developer forums and 100s of open-source integrations for leading clouds providers, devices, CI/CD tools, etc, providing accessibility, control and common day-2 actionsDistributed execution provisioning allowing for scale, latency mitigation and quick delivery Test automationBI reporting: Sandbox consumption and licenses, resource utilization, inventory, cloud usage, user activity, etcIn-browser access to resources using SSH, RDP and moreLive activity feed displaying real-time deployment activity messages, errors and warnings For details, see CloudShell Features and Benefits.","keywords":"","version":"2023.2 GA"},{"title":"CloudShell Terminology","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/terminology","content":"CloudShell Terminology this is some example text to make this the same higth","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/jss/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"Abstract Resources Overview","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/features-and-concepts/abstract","content":"","keywords":"","version":"2023.2 GA"},{"title":"What is an abstract resource?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/Introduction/features-and-concepts/abstract#what-is-an-abstract-resource","content":" An abstract resource is a component that allows CloudShell to add (to the sandbox) resources based on a set of requirements, such as resource model and/or specific attribute values. When reserving a blueprint that has an abstract resource, CloudShell will find resources that meet the resource requirements and are available for the time slot of the sandbox, and add them to the sandbox. You cannot add abstract resources directly to a sandbox, only to the blueprint. Blueprints can contain a mixture of abstract and specific resources.  An abstract resource is represented on the diagram as a resource with a dotted circle around it. For example:    ","version":"2023.2 GA","tagName":"h2"},{"title":"What does an abstract resource include?​","type":1,"pageTitle":"Abstract Resources Overview","url":"/cloudshell-help/Introduction/features-and-concepts/abstract#what-does-an-abstract-resource-include","content":" An abstract resource must include the family of the resource, and can optionally include the following:  Requirements:  Requirements are the resource settings you need the desired resource to have. CloudShell will only select resources that fully match this criteria. You must select the resource family but you can include any combination of the rest of the requirements in your abstract resource.  Note: As you add or update your requirements, CloudShell updates the number of matching inventory resources in the top right corner of the abstract resource dialog box.  Family (mandatory)Quantity: number of resources to selectSharing policyModel: model or models within the selected familyAttribute valuesSub-resources: sub-resource settings, such as blades, ports, attribute values on each sub-resource  Additional info:  Additional info is information you can add to the abstract resource for automation processes and to make available for the sandbox end-user. For example, you may want to save the resource firmware version, which needs to be upgraded as part of the sandbox provisioning process. Another example could be referencing the image file location of the resource.  Attribute values  Domains:  The domains in which this abstract resource can be used. By default, the current domain is selected and cannot be removed from the abstract resource.  For additional information about Requirements, Additional info and Domains, see Abstract Resource Settings ","version":"2023.2 GA","tagName":"h2"},{"title":"CloudShell - Typical Use Cases","type":0,"sectionRef":"#","url":"/cloudshell-help/Introduction/use-case","content":"","keywords":"","version":"2023.2 GA"},{"title":"Dev/Test (Environment as a Service)​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/Introduction/use-case#devtest-environment-as-a-service","content":" In this use case, CloudShell is used as a central location for different teams in the organization to consume sandboxes for their day-to-day development and testing activities, allowing for better exposure and utilization of physical and virtual infrastructure for different types of end users in a repeatable manner.  Applies to: Physical, virtual and hybrid environmentsTarget audience: Engineers, developers, architects, and anyone else who needs to develop or test against the organization's network, APIs, physical/cloud-hosted devices, and operating systems  ","version":"2023.2 GA","tagName":"h2"},{"title":"Demo/POC lab​","type":1,"pageTitle":"CloudShell - Typical Use Cases","url":"/cloudshell-help/Introduction/use-case#demopoc-lab","content":" Let's say you have a sales team that needs on demand environments for POCs or product demos at a prospective customer. The sales engineer could install the system on their laptop and make the necessary tweaks and configurations, but this takes time and will require involving IT staff. With CloudShell, the demo environments are prepared in advance and the sales person simply needs to schedule a reservation of the desired blueprint for the POC meeting and CloudShell will spin up the environment, running any pre-configured automation in the process. This also applies to support/QA engineers who need to reproduce a customer issue.  Applies to: Virtual cloud-based and hybrid environmentsTarget audience: Sales/support engineers  For example, blueprint that deploys a product suite, including front end server, DB and load balancing:   ","version":"2023.2 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/portal/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/qna/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"Manage Docs Versions","type":0,"sectionRef":"#","url":"/cloudshell-help/quick-start/creating-reserving","content":"","keywords":"","version":"2023.2 GA"},{"title":"Create a docs version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#create-a-docs-version","content":" Release a version 1.0 of your project:  npm run docusaurus docs:version 1.0   The docs folder is copied into versioned_docs/version-1.0 and versions.json is created.  Your docs now have 2 versions:  1.0 at http://localhost:3000/docs/ for the version 1.0 docscurrent at http://localhost:3000/docs/next/ for the upcoming, unreleased docs  ","version":"2023.2 GA","tagName":"h2"},{"title":"Add a Version Dropdown​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#add-a-version-dropdown","content":" To navigate seamlessly across versions, add a version dropdown.  Modify the docusaurus.config.js file:  The docs version dropdown appears in your navbar:  ","version":"2023.2 GA","tagName":"h2"},{"title":"Update an existing version​","type":1,"pageTitle":"Manage Docs Versions","url":"/cloudshell-help/quick-start/creating-reserving#update-an-existing-version","content":" It is possible to edit versioned docs in their respective folder:  versioned_docs/version-1.0/hello.md updates http://localhost:3000/docs/hellodocs/hello.md updates http://localhost:3000/docs/next/hello ","version":"2023.2 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/release-notes/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"Translate your site","type":0,"sectionRef":"#","url":"/cloudshell-help/quick-start/translate-your-site","content":"","keywords":"","version":"2023.2 GA"},{"title":"Configure i18n​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#configure-i18n","content":" Modify docusaurus.config.js to add support for the fr locale:  docusaurus.config.js export default { i18n: { defaultLocale: 'en', locales: ['en', 'fr'], }, };   ","version":"2023.2 GA","tagName":"h2"},{"title":"Translate a doc​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#translate-a-doc","content":" Copy the docs/intro.md file to the i18n/fr folder:  mkdir -p i18n/fr/docusaurus-plugin-content-docs/current/ cp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md   Translate i18n/fr/docusaurus-plugin-content-docs/current/intro.md in French.  ","version":"2023.2 GA","tagName":"h2"},{"title":"Start your localized site​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#start-your-localized-site","content":" Start your site on the French locale:  npm run start -- --locale fr   Your localized site is accessible at http://localhost:3000/fr/ and the Getting Started page is translated.  caution In development, you can only use one locale at a time.  ","version":"2023.2 GA","tagName":"h2"},{"title":"Add a Locale Dropdown​","type":1,"pageTitle":"Translate your site","url":"/cloudshell-help/quick-start/translate-your-site#add-a-locale-dropdown","content":" To navigate seamlessly across languages, add a locale dropdown.  Modify the docusaurus.config.js file:   The locale dropdown now appears in your navbar: Build your site for a specific locale: ```bash npm run build -- --locale fr   Or build your site to include all the locales at once:  npm run build  ","version":"2023.2 GA","tagName":"h2"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/troubleshooting/example","content":"empty page","keywords":"","version":"2023.2 GA"},{"title":"empty page","type":0,"sectionRef":"#","url":"/cloudshell-help/version-history/example","content":"empty page","keywords":"","version":"2023.2 GA"}],"options":{"highlightResult":true,"id":"default"}}